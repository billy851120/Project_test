(function () {
  "use strict";
  /**
   * @vue/shared v3.5.12
   * (c) 2018-present Yuxi (Evan) You and Vue contributors
   * @license MIT
   **/ /*! #__NO_SIDE_EFFECTS__ */ function ys(e) {
    const t = Object.create(null);
    for (const n of e.split(",")) t[n] = 1;
    return (n) => n in t;
  }
  const le = {},
    en = [],
    ze = () => {},
    Sc = () => !1,
    lo = (e) =>
      e.charCodeAt(0) === 111 &&
      e.charCodeAt(1) === 110 &&
      (e.charCodeAt(2) > 122 || e.charCodeAt(2) < 97),
    Es = (e) => e.startsWith("onUpdate:"),
    ye = Object.assign,
    bs = (e, t) => {
      const n = e.indexOf(t);
      n > -1 && e.splice(n, 1);
    },
    Tc = Object.prototype.hasOwnProperty,
    oe = (e, t) => Tc.call(e, t),
    G = Array.isArray,
    vn = (e) => ao(e) === "[object Map]",
    Oc = (e) => ao(e) === "[object Set]",
    W = (e) => typeof e == "function",
    me = (e) => typeof e == "string",
    Bt = (e) => typeof e == "symbol",
    de = (e) => e !== null && typeof e == "object",
    Xr = (e) => (de(e) || W(e)) && W(e.then) && W(e.catch),
    xc = Object.prototype.toString,
    ao = (e) => xc.call(e),
    Ac = (e) => ao(e).slice(8, -1),
    Cc = (e) => ao(e) === "[object Object]",
    ws = (e) =>
      me(e) && e !== "NaN" && e[0] !== "-" && "" + parseInt(e, 10) === e,
    yn = ys(
      ",key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted",
    ),
    uo = (e) => {
      const t = Object.create(null);
      return (n) => t[n] || (t[n] = e(n));
    },
    Dc = /-(\w)/g,
    Ue = uo((e) => e.replace(Dc, (t, n) => (n ? n.toUpperCase() : ""))),
    Pc = /\B([A-Z])/g,
    wt = uo((e) => e.replace(Pc, "-$1").toLowerCase()),
    co = uo((e) => e.charAt(0).toUpperCase() + e.slice(1)),
    Ss = uo((e) => (e ? `on${co(e)}` : "")),
    St = (e, t) => !Object.is(e, t),
    Ts = (e, ...t) => {
      for (let n = 0; n < e.length; n++) e[n](...t);
    },
    Zr = (e, t, n, o = !1) => {
      Object.defineProperty(e, t, {
        configurable: !0,
        enumerable: !1,
        writable: o,
        value: n,
      });
    },
    Ic = (e) => {
      const t = parseFloat(e);
      return isNaN(t) ? e : t;
    };
  let Jr;
  const fo = () =>
    Jr ||
    (Jr =
      typeof globalThis < "u"
        ? globalThis
        : typeof self < "u"
          ? self
          : typeof window < "u"
            ? window
            : typeof global < "u"
              ? global
              : {});
  function Re(e) {
    if (G(e)) {
      const t = {};
      for (let n = 0; n < e.length; n++) {
        const o = e[n],
          s = me(o) ? Vc(o) : Re(o);
        if (s) for (const r in s) t[r] = s[r];
      }
      return t;
    } else if (me(e) || de(e)) return e;
  }
  const kc = /;(?![^(]*\))/g,
    Rc = /:([^]+)/,
    Nc = /\/\*[^]*?\*\//g;
  function Vc(e) {
    const t = {};
    return (
      e
        .replace(Nc, "")
        .split(kc)
        .forEach((n) => {
          if (n) {
            const o = n.split(Rc);
            o.length > 1 && (t[o[0].trim()] = o[1].trim());
          }
        }),
      t
    );
  }
  function pt(e) {
    let t = "";
    if (me(e)) t = e;
    else if (G(e))
      for (let n = 0; n < e.length; n++) {
        const o = pt(e[n]);
        o && (t += o + " ");
      }
    else if (de(e)) for (const n in e) e[n] && (t += n + " ");
    return t.trim();
  }
  function Lc(e) {
    if (!e) return null;
    let { class: t, style: n } = e;
    return t && !me(t) && (e.class = pt(t)), n && (e.style = Re(n)), e;
  }
  const $c = ys(
    "itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly",
  );
  function Qr(e) {
    return !!e || e === "";
  }
  var Mc = {
    npm_package_dependencies__vueuse_core: "^11.2.0",
    TERM_PROGRAM: "vscode",
    NODE: "/Users/arlo/Library/Application Support/fnm/node-versions/v20.17.0/installation/bin/node",
    INIT_CWD: "/Users/arlo/g/devtools-next/packages/overlay",
    npm_package_devDependencies_vite: "^5.4.10",
    SHELL: "/bin/zsh",
    TERM: "xterm-256color",
    npm_config_shamefully_hoist: "true",
    npm_package_dependencies__vue_devtools_shared: "workspace:^",
    npm_package_devDependencies__vitejs_plugin_vue: "^5.1.4",
    npm_config_registry: "https://registry.npmjs.org/",
    npm_package_private: "true",
    USER: "arlo",
    npm_package_license: "MIT",
    PNPM_SCRIPT_SRC_DIR: "/Users/arlo/g/devtools-next/packages/overlay",
    npm_config_strict_peer_dependencies: "",
    __CF_USER_TEXT_ENCODING: "0x1F5:0x19:0x34",
    npm_execpath:
      "/Users/arlo/g/devtools-next/node_modules/.pnpm/pnpm@9.12.3/node_modules/pnpm/bin/pnpm.cjs",
    npm_config_frozen_lockfile: "",
    PATH: "/Users/arlo/g/devtools-next/packages/overlay/node_modules/.bin:/Users/arlo/g/devtools-next/node_modules/.pnpm/pnpm@9.12.3/node_modules/pnpm/dist/node-gyp-bin:/Users/arlo/g/devtools-next/node_modules/.bin:/Users/arlo/g/devtools-next/node_modules/.bin:/Users/arlo/g/devtools-next/node_modules/.pnpm/pnpm@9.12.3/node_modules/pnpm/dist/node-gyp-bin:/Users/arlo/g/devtools-next/node_modules/.bin:/Users/arlo/g/devtools-next/node_modules/.bin:/Users/arlo/.cache/node/corepack/v1/pnpm/9.12.3/dist/node-gyp-bin:/Users/arlo/g/devtools-next/node_modules/.bin:/Users/arlo/Library/Caches/fnm_multishells/54509_1730808930693/bin:/opt/homebrew/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Users/arlo/Library/pnpm:/Users/arlo/Library/Caches/fnm_multishells/54434_1730808929856/bin:/opt/homebrew/bin:/Users/arlo/.cargo/bin:/Applications/WebStorm.app/Contents/MacOS:/Applications/WebStorm.app/Contents/MacOS:/Users/arlo/g/devtools-next/node_modules/.bin:/Users/arlo/g/node_modules/.bin:/Users/arlo/node_modules/.bin:/Users/node_modules/.bin:/node_modules/.bin",
    npm_package_dependencies__vue_devtools_ui: "workspace:*",
    npm_package_devDependencies_sass_embedded: "^1.80.6",
    npm_package_author: "webfansplz",
    npm_command: "run-script",
    PWD: "/Users/arlo/g/devtools-next/packages/overlay",
    npm_package_exports____: "./dist/*",
    npm_lifecycle_event: "build",
    npm_package_devDependencies_vue: "^3.5.12",
    npm_package_name: "@vue/devtools-overlay",
    LANG: "zh_CN.UTF-8",
    npm_package_scripts_build: "vite build",
    NODE_PATH:
      "/Users/arlo/g/devtools-next/node_modules/.pnpm/vite@5.4.10_@types+node@22.9.0_sass-embedded@1.80.6_sass@1.80.3_terser@5.26.0/node_modules/vite/bin/node_modules:/Users/arlo/g/devtools-next/node_modules/.pnpm/vite@5.4.10_@types+node@22.9.0_sass-embedded@1.80.6_sass@1.80.3_terser@5.26.0/node_modules/vite/node_modules:/Users/arlo/g/devtools-next/node_modules/.pnpm/vite@5.4.10_@types+node@22.9.0_sass-embedded@1.80.6_sass@1.80.3_terser@5.26.0/node_modules:/Users/arlo/g/devtools-next/node_modules/.pnpm/node_modules:/Users/arlo/g/devtools-next/node_modules/.pnpm/pnpm@9.12.3/node_modules/pnpm/bin/node_modules:/Users/arlo/g/devtools-next/node_modules/.pnpm/pnpm@9.12.3/node_modules/pnpm/node_modules:/Users/arlo/g/devtools-next/node_modules/.pnpm/pnpm@9.12.3/node_modules:/Users/arlo/g/devtools-next/node_modules/.pnpm/node_modules",
    TURBO_HASH: "1428e0c547842309",
    VSCODE_GIT_ASKPASS_EXTRA_ARGS: "",
    npm_package_engines_node: ">=v14.21.3",
    npm_config_node_gyp:
      "/Users/arlo/g/devtools-next/node_modules/.pnpm/pnpm@9.12.3/node_modules/pnpm/dist/node_modules/node-gyp/bin/node-gyp.js",
    npm_config_side_effects_cache: "",
    npm_package_devDependencies__iconify_json: "^2.2.267",
    npm_package_version: "7.6.3",
    VSCODE_INJECTION: "1",
    npm_package_dependencies__vue_devtools_core: "workspace:^",
    npm_package_type: "module",
    HOME: "/Users/arlo",
    SHLVL: "0",
    VSCODE_GIT_ASKPASS_MAIN:
      "/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass-main.js",
    npm_lifecycle_script: "vite build",
    npm_package_dependencies__vue_devtools_kit: "workspace:*",
    VSCODE_GIT_IPC_HANDLE:
      "/var/folders/6s/79hm4q7x5f982tndmbvckmn80000gn/T/vscode-git-dffc443db3.sock",
    npm_config_user_agent: "pnpm/9.12.3 npm/? node/v20.17.0 darwin arm64",
    npm_package_devDependencies__types_node: "^22.9.0",
    VSCODE_GIT_ASKPASS_NODE:
      "/Applications/Visual Studio Code.app/Contents/Frameworks/Code Helper (Plugin).app/Contents/MacOS/Code Helper (Plugin)",
    npm_package_scripts_stub: "vite build --watch",
    npm_package_files_0: "dist",
    npm_package_scripts_play: "vite --config vite.play.config.ts --open",
    npm_node_execpath:
      "/Users/arlo/Library/Application Support/fnm/node-versions/v20.17.0/installation/bin/node",
    npm_config_shell_emulator: "true",
    COLORTERM: "truecolor",
    NODE_ENV: "production",
  };
  let Ae;
  class Fc {
    constructor(t = !1) {
      (this.detached = t),
        (this._active = !0),
        (this.effects = []),
        (this.cleanups = []),
        (this._isPaused = !1),
        (this.parent = Ae),
        !t &&
          Ae &&
          (this.index = (Ae.scopes || (Ae.scopes = [])).push(this) - 1);
    }
    get active() {
      return this._active;
    }
    pause() {
      if (this._active) {
        this._isPaused = !0;
        let t, n;
        if (this.scopes)
          for (t = 0, n = this.scopes.length; t < n; t++)
            this.scopes[t].pause();
        for (t = 0, n = this.effects.length; t < n; t++)
          this.effects[t].pause();
      }
    }
    resume() {
      if (this._active && this._isPaused) {
        this._isPaused = !1;
        let t, n;
        if (this.scopes)
          for (t = 0, n = this.scopes.length; t < n; t++)
            this.scopes[t].resume();
        for (t = 0, n = this.effects.length; t < n; t++)
          this.effects[t].resume();
      }
    }
    run(t) {
      if (this._active) {
        const n = Ae;
        try {
          return (Ae = this), t();
        } finally {
          Ae = n;
        }
      }
    }
    on() {
      Ae = this;
    }
    off() {
      Ae = this.parent;
    }
    stop(t) {
      if (this._active) {
        let n, o;
        for (n = 0, o = this.effects.length; n < o; n++) this.effects[n].stop();
        for (n = 0, o = this.cleanups.length; n < o; n++) this.cleanups[n]();
        if (this.scopes)
          for (n = 0, o = this.scopes.length; n < o; n++)
            this.scopes[n].stop(!0);
        if (!this.detached && this.parent && !t) {
          const s = this.parent.scopes.pop();
          s &&
            s !== this &&
            ((this.parent.scopes[this.index] = s), (s.index = this.index));
        }
        (this.parent = void 0), (this._active = !1);
      }
    }
  }
  function ei() {
    return Ae;
  }
  function Uc(e, t = !1) {
    Ae && Ae.cleanups.push(e);
  }
  let ae;
  const Os = new WeakSet();
  class ti {
    constructor(t) {
      (this.fn = t),
        (this.deps = void 0),
        (this.depsTail = void 0),
        (this.flags = 5),
        (this.next = void 0),
        (this.cleanup = void 0),
        (this.scheduler = void 0),
        Ae && Ae.active && Ae.effects.push(this);
    }
    pause() {
      this.flags |= 64;
    }
    resume() {
      this.flags & 64 &&
        ((this.flags &= -65),
        Os.has(this) && (Os.delete(this), this.trigger()));
    }
    notify() {
      (this.flags & 2 && !(this.flags & 32)) || this.flags & 8 || oi(this);
    }
    run() {
      if (!(this.flags & 1)) return this.fn();
      (this.flags |= 2), ai(this), si(this);
      const t = ae,
        n = je;
      (ae = this), (je = !0);
      try {
        return this.fn();
      } finally {
        ri(this), (ae = t), (je = n), (this.flags &= -3);
      }
    }
    stop() {
      if (this.flags & 1) {
        for (let t = this.deps; t; t = t.nextDep) Ds(t);
        (this.deps = this.depsTail = void 0),
          ai(this),
          this.onStop && this.onStop(),
          (this.flags &= -2);
      }
    }
    trigger() {
      this.flags & 64
        ? Os.add(this)
        : this.scheduler
          ? this.scheduler()
          : this.runIfDirty();
    }
    runIfDirty() {
      Cs(this) && this.run();
    }
    get dirty() {
      return Cs(this);
    }
  }
  let ni = 0,
    En,
    bn;
  function oi(e, t = !1) {
    if (((e.flags |= 8), t)) {
      (e.next = bn), (bn = e);
      return;
    }
    (e.next = En), (En = e);
  }
  function xs() {
    ni++;
  }
  function As() {
    if (--ni > 0) return;
    if (bn) {
      let t = bn;
      for (bn = void 0; t; ) {
        const n = t.next;
        (t.next = void 0), (t.flags &= -9), (t = n);
      }
    }
    let e;
    for (; En; ) {
      let t = En;
      for (En = void 0; t; ) {
        const n = t.next;
        if (((t.next = void 0), (t.flags &= -9), t.flags & 1))
          try {
            t.trigger();
          } catch (o) {
            e || (e = o);
          }
        t = n;
      }
    }
    if (e) throw e;
  }
  function si(e) {
    for (let t = e.deps; t; t = t.nextDep)
      (t.version = -1),
        (t.prevActiveLink = t.dep.activeLink),
        (t.dep.activeLink = t);
  }
  function ri(e) {
    let t,
      n = e.depsTail,
      o = n;
    for (; o; ) {
      const s = o.prevDep;
      o.version === -1 ? (o === n && (n = s), Ds(o), Bc(o)) : (t = o),
        (o.dep.activeLink = o.prevActiveLink),
        (o.prevActiveLink = void 0),
        (o = s);
    }
    (e.deps = t), (e.depsTail = n);
  }
  function Cs(e) {
    for (let t = e.deps; t; t = t.nextDep)
      if (
        t.dep.version !== t.version ||
        (t.dep.computed && (ii(t.dep.computed) || t.dep.version !== t.version))
      )
        return !0;
    return !!e._dirty;
  }
  function ii(e) {
    if (
      (e.flags & 4 && !(e.flags & 16)) ||
      ((e.flags &= -17), e.globalVersion === wn)
    )
      return;
    e.globalVersion = wn;
    const t = e.dep;
    if (((e.flags |= 2), t.version > 0 && !e.isSSR && e.deps && !Cs(e))) {
      e.flags &= -3;
      return;
    }
    const n = ae,
      o = je;
    (ae = e), (je = !0);
    try {
      si(e);
      const s = e.fn(e._value);
      (t.version === 0 || St(s, e._value)) && ((e._value = s), t.version++);
    } catch (s) {
      throw (t.version++, s);
    } finally {
      (ae = n), (je = o), ri(e), (e.flags &= -3);
    }
  }
  function Ds(e, t = !1) {
    const { dep: n, prevSub: o, nextSub: s } = e;
    if (
      (o && ((o.nextSub = s), (e.prevSub = void 0)),
      s && ((s.prevSub = o), (e.nextSub = void 0)),
      n.subs === e && ((n.subs = o), !o && n.computed))
    ) {
      n.computed.flags &= -5;
      for (let r = n.computed.deps; r; r = r.nextDep) Ds(r, !0);
    }
    !t && !--n.sc && n.map && n.map.delete(n.key);
  }
  function Bc(e) {
    const { prevDep: t, nextDep: n } = e;
    t && ((t.nextDep = n), (e.prevDep = void 0)),
      n && ((n.prevDep = t), (e.nextDep = void 0));
  }
  let je = !0;
  const li = [];
  function ht() {
    li.push(je), (je = !1);
  }
  function _t() {
    const e = li.pop();
    je = e === void 0 ? !0 : e;
  }
  function ai(e) {
    const { cleanup: t } = e;
    if (((e.cleanup = void 0), t)) {
      const n = ae;
      ae = void 0;
      try {
        t();
      } finally {
        ae = n;
      }
    }
  }
  let wn = 0;
  class Hc {
    constructor(t, n) {
      (this.sub = t),
        (this.dep = n),
        (this.version = n.version),
        (this.nextDep =
          this.prevDep =
          this.nextSub =
          this.prevSub =
          this.prevActiveLink =
            void 0);
    }
  }
  class po {
    constructor(t) {
      (this.computed = t),
        (this.version = 0),
        (this.activeLink = void 0),
        (this.subs = void 0),
        (this.map = void 0),
        (this.key = void 0),
        (this.sc = 0);
    }
    track(t) {
      if (!ae || !je || ae === this.computed) return;
      let n = this.activeLink;
      if (n === void 0 || n.sub !== ae)
        (n = this.activeLink = new Hc(ae, this)),
          ae.deps
            ? ((n.prevDep = ae.depsTail),
              (ae.depsTail.nextDep = n),
              (ae.depsTail = n))
            : (ae.deps = ae.depsTail = n),
          ui(n);
      else if (n.version === -1 && ((n.version = this.version), n.nextDep)) {
        const o = n.nextDep;
        (o.prevDep = n.prevDep),
          n.prevDep && (n.prevDep.nextDep = o),
          (n.prevDep = ae.depsTail),
          (n.nextDep = void 0),
          (ae.depsTail.nextDep = n),
          (ae.depsTail = n),
          ae.deps === n && (ae.deps = o);
      }
      return n;
    }
    trigger(t) {
      this.version++, wn++, this.notify(t);
    }
    notify(t) {
      xs();
      try {
        Mc.NODE_ENV;
        for (let n = this.subs; n; n = n.prevSub)
          n.sub.notify() && n.sub.dep.notify();
      } finally {
        As();
      }
    }
  }
  function ui(e) {
    if ((e.dep.sc++, e.sub.flags & 4)) {
      const t = e.dep.computed;
      if (t && !e.dep.subs) {
        t.flags |= 20;
        for (let o = t.deps; o; o = o.nextDep) ui(o);
      }
      const n = e.dep.subs;
      n !== e && ((e.prevSub = n), n && (n.nextSub = e)), (e.dep.subs = e);
    }
  }
  const ho = new WeakMap(),
    Ht = Symbol(""),
    Ps = Symbol(""),
    Sn = Symbol("");
  function Se(e, t, n) {
    if (je && ae) {
      let o = ho.get(e);
      o || ho.set(e, (o = new Map()));
      let s = o.get(n);
      s || (o.set(n, (s = new po())), (s.map = o), (s.key = n)), s.track();
    }
  }
  function mt(e, t, n, o, s, r) {
    const i = ho.get(e);
    if (!i) {
      wn++;
      return;
    }
    const l = (a) => {
      a && a.trigger();
    };
    if ((xs(), t === "clear")) i.forEach(l);
    else {
      const a = G(e),
        u = a && ws(n);
      if (a && n === "length") {
        const f = Number(o);
        i.forEach((c, h) => {
          (h === "length" || h === Sn || (!Bt(h) && h >= f)) && l(c);
        });
      } else
        switch (
          ((n !== void 0 || i.has(void 0)) && l(i.get(n)), u && l(i.get(Sn)), t)
        ) {
          case "add":
            a ? u && l(i.get("length")) : (l(i.get(Ht)), vn(e) && l(i.get(Ps)));
            break;
          case "delete":
            a || (l(i.get(Ht)), vn(e) && l(i.get(Ps)));
            break;
          case "set":
            vn(e) && l(i.get(Ht));
            break;
        }
    }
    As();
  }
  function zc(e, t) {
    const n = ho.get(e);
    return n && n.get(t);
  }
  function tn(e) {
    const t = te(e);
    return t === e ? t : (Se(t, "iterate", Sn), Ke(e) ? t : t.map(Ce));
  }
  function Is(e) {
    return Se((e = te(e)), "iterate", Sn), e;
  }
  const jc = {
    __proto__: null,
    [Symbol.iterator]() {
      return ks(this, Symbol.iterator, Ce);
    },
    concat(...e) {
      return tn(this).concat(...e.map((t) => (G(t) ? tn(t) : t)));
    },
    entries() {
      return ks(this, "entries", (e) => ((e[1] = Ce(e[1])), e));
    },
    every(e, t) {
      return gt(this, "every", e, t, void 0, arguments);
    },
    filter(e, t) {
      return gt(this, "filter", e, t, (n) => n.map(Ce), arguments);
    },
    find(e, t) {
      return gt(this, "find", e, t, Ce, arguments);
    },
    findIndex(e, t) {
      return gt(this, "findIndex", e, t, void 0, arguments);
    },
    findLast(e, t) {
      return gt(this, "findLast", e, t, Ce, arguments);
    },
    findLastIndex(e, t) {
      return gt(this, "findLastIndex", e, t, void 0, arguments);
    },
    forEach(e, t) {
      return gt(this, "forEach", e, t, void 0, arguments);
    },
    includes(...e) {
      return Rs(this, "includes", e);
    },
    indexOf(...e) {
      return Rs(this, "indexOf", e);
    },
    join(e) {
      return tn(this).join(e);
    },
    lastIndexOf(...e) {
      return Rs(this, "lastIndexOf", e);
    },
    map(e, t) {
      return gt(this, "map", e, t, void 0, arguments);
    },
    pop() {
      return Tn(this, "pop");
    },
    push(...e) {
      return Tn(this, "push", e);
    },
    reduce(e, ...t) {
      return ci(this, "reduce", e, t);
    },
    reduceRight(e, ...t) {
      return ci(this, "reduceRight", e, t);
    },
    shift() {
      return Tn(this, "shift");
    },
    some(e, t) {
      return gt(this, "some", e, t, void 0, arguments);
    },
    splice(...e) {
      return Tn(this, "splice", e);
    },
    toReversed() {
      return tn(this).toReversed();
    },
    toSorted(e) {
      return tn(this).toSorted(e);
    },
    toSpliced(...e) {
      return tn(this).toSpliced(...e);
    },
    unshift(...e) {
      return Tn(this, "unshift", e);
    },
    values() {
      return ks(this, "values", Ce);
    },
  };
  function ks(e, t, n) {
    const o = Is(e),
      s = o[t]();
    return (
      o !== e &&
        !Ke(e) &&
        ((s._next = s.next),
        (s.next = () => {
          const r = s._next();
          return r.value && (r.value = n(r.value)), r;
        })),
      s
    );
  }
  const Kc = Array.prototype;
  function gt(e, t, n, o, s, r) {
    const i = Is(e),
      l = i !== e && !Ke(e),
      a = i[t];
    if (a !== Kc[t]) {
      const c = a.apply(e, r);
      return l ? Ce(c) : c;
    }
    let u = n;
    i !== e &&
      (l
        ? (u = function (c, h) {
            return n.call(this, Ce(c), h, e);
          })
        : n.length > 2 &&
          (u = function (c, h) {
            return n.call(this, c, h, e);
          }));
    const f = a.call(i, u, o);
    return l && s ? s(f) : f;
  }
  function ci(e, t, n, o) {
    const s = Is(e);
    let r = n;
    return (
      s !== e &&
        (Ke(e)
          ? n.length > 3 &&
            (r = function (i, l, a) {
              return n.call(this, i, l, a, e);
            })
          : (r = function (i, l, a) {
              return n.call(this, i, Ce(l), a, e);
            })),
      s[t](r, ...o)
    );
  }
  function Rs(e, t, n) {
    const o = te(e);
    Se(o, "iterate", Sn);
    const s = o[t](...n);
    return (s === -1 || s === !1) && Vs(n[0])
      ? ((n[0] = te(n[0])), o[t](...n))
      : s;
  }
  function Tn(e, t, n = []) {
    ht(), xs();
    const o = te(e)[t].apply(e, n);
    return As(), _t(), o;
  }
  const Wc = ys("__proto__,__v_isRef,__isVue"),
    fi = new Set(
      Object.getOwnPropertyNames(Symbol)
        .filter((e) => e !== "arguments" && e !== "caller")
        .map((e) => Symbol[e])
        .filter(Bt),
    );
  function Gc(e) {
    Bt(e) || (e = String(e));
    const t = te(this);
    return Se(t, "has", e), t.hasOwnProperty(e);
  }
  class di {
    constructor(t = !1, n = !1) {
      (this._isReadonly = t), (this._isShallow = n);
    }
    get(t, n, o) {
      const s = this._isReadonly,
        r = this._isShallow;
      if (n === "__v_isReactive") return !s;
      if (n === "__v_isReadonly") return s;
      if (n === "__v_isShallow") return r;
      if (n === "__v_raw")
        return o === (s ? (r ? vi : gi) : r ? mi : _i).get(t) ||
          Object.getPrototypeOf(t) === Object.getPrototypeOf(o)
          ? t
          : void 0;
      const i = G(t);
      if (!s) {
        let a;
        if (i && (a = jc[n])) return a;
        if (n === "hasOwnProperty") return Gc;
      }
      const l = Reflect.get(t, n, ge(t) ? t : o);
      return (Bt(n) ? fi.has(n) : Wc(n)) || (s || Se(t, "get", n), r)
        ? l
        : ge(l)
          ? i && ws(n)
            ? l
            : l.value
          : de(l)
            ? s
              ? On(l)
              : nn(l)
            : l;
    }
  }
  class pi extends di {
    constructor(t = !1) {
      super(!1, t);
    }
    set(t, n, o, s) {
      let r = t[n];
      if (!this._isShallow) {
        const a = zt(r);
        if (
          (!Ke(o) && !zt(o) && ((r = te(r)), (o = te(o))),
          !G(t) && ge(r) && !ge(o))
        )
          return a ? !1 : ((r.value = o), !0);
      }
      const i = G(t) && ws(n) ? Number(n) < t.length : oe(t, n),
        l = Reflect.set(t, n, o, ge(t) ? t : s);
      return (
        t === te(s) &&
          (i ? St(o, r) && mt(t, "set", n, o) : mt(t, "add", n, o)),
        l
      );
    }
    deleteProperty(t, n) {
      const o = oe(t, n);
      t[n];
      const s = Reflect.deleteProperty(t, n);
      return s && o && mt(t, "delete", n, void 0), s;
    }
    has(t, n) {
      const o = Reflect.has(t, n);
      return (!Bt(n) || !fi.has(n)) && Se(t, "has", n), o;
    }
    ownKeys(t) {
      return Se(t, "iterate", G(t) ? "length" : Ht), Reflect.ownKeys(t);
    }
  }
  class hi extends di {
    constructor(t = !1) {
      super(!0, t);
    }
    set(t, n) {
      return !0;
    }
    deleteProperty(t, n) {
      return !0;
    }
  }
  const qc = new pi(),
    Yc = new hi(),
    Xc = new pi(!0),
    Zc = new hi(!0),
    Ns = (e) => e,
    _o = (e) => Reflect.getPrototypeOf(e);
  function Jc(e, t, n) {
    return function (...o) {
      const s = this.__v_raw,
        r = te(s),
        i = vn(r),
        l = e === "entries" || (e === Symbol.iterator && i),
        a = e === "keys" && i,
        u = s[e](...o),
        f = n ? Ns : t ? Ls : Ce;
      return (
        !t && Se(r, "iterate", a ? Ps : Ht),
        {
          next() {
            const { value: c, done: h } = u.next();
            return h
              ? { value: c, done: h }
              : { value: l ? [f(c[0]), f(c[1])] : f(c), done: h };
          },
          [Symbol.iterator]() {
            return this;
          },
        }
      );
    };
  }
  function mo(e) {
    return function (...t) {
      return e === "delete" ? !1 : e === "clear" ? void 0 : this;
    };
  }
  function Qc(e, t) {
    const n = {
      get(s) {
        const r = this.__v_raw,
          i = te(r),
          l = te(s);
        e || (St(s, l) && Se(i, "get", s), Se(i, "get", l));
        const { has: a } = _o(i),
          u = t ? Ns : e ? Ls : Ce;
        if (a.call(i, s)) return u(r.get(s));
        if (a.call(i, l)) return u(r.get(l));
        r !== i && r.get(s);
      },
      get size() {
        const s = this.__v_raw;
        return !e && Se(te(s), "iterate", Ht), Reflect.get(s, "size", s);
      },
      has(s) {
        const r = this.__v_raw,
          i = te(r),
          l = te(s);
        return (
          e || (St(s, l) && Se(i, "has", s), Se(i, "has", l)),
          s === l ? r.has(s) : r.has(s) || r.has(l)
        );
      },
      forEach(s, r) {
        const i = this,
          l = i.__v_raw,
          a = te(l),
          u = t ? Ns : e ? Ls : Ce;
        return (
          !e && Se(a, "iterate", Ht),
          l.forEach((f, c) => s.call(r, u(f), u(c), i))
        );
      },
    };
    return (
      ye(
        n,
        e
          ? {
              add: mo("add"),
              set: mo("set"),
              delete: mo("delete"),
              clear: mo("clear"),
            }
          : {
              add(s) {
                !t && !Ke(s) && !zt(s) && (s = te(s));
                const r = te(this);
                return (
                  _o(r).has.call(r, s) || (r.add(s), mt(r, "add", s, s)), this
                );
              },
              set(s, r) {
                !t && !Ke(r) && !zt(r) && (r = te(r));
                const i = te(this),
                  { has: l, get: a } = _o(i);
                let u = l.call(i, s);
                u || ((s = te(s)), (u = l.call(i, s)));
                const f = a.call(i, s);
                return (
                  i.set(s, r),
                  u ? St(r, f) && mt(i, "set", s, r) : mt(i, "add", s, r),
                  this
                );
              },
              delete(s) {
                const r = te(this),
                  { has: i, get: l } = _o(r);
                let a = i.call(r, s);
                a || ((s = te(s)), (a = i.call(r, s))), l && l.call(r, s);
                const u = r.delete(s);
                return a && mt(r, "delete", s, void 0), u;
              },
              clear() {
                const s = te(this),
                  r = s.size !== 0,
                  i = s.clear();
                return r && mt(s, "clear", void 0, void 0), i;
              },
            },
      ),
      ["keys", "values", "entries", Symbol.iterator].forEach((s) => {
        n[s] = Jc(s, e, t);
      }),
      n
    );
  }
  function go(e, t) {
    const n = Qc(e, t);
    return (o, s, r) =>
      s === "__v_isReactive"
        ? !e
        : s === "__v_isReadonly"
          ? e
          : s === "__v_raw"
            ? o
            : Reflect.get(oe(n, s) && s in o ? n : o, s, r);
  }
  const ef = { get: go(!1, !1) },
    tf = { get: go(!1, !0) },
    nf = { get: go(!0, !1) },
    of = { get: go(!0, !0) },
    _i = new WeakMap(),
    mi = new WeakMap(),
    gi = new WeakMap(),
    vi = new WeakMap();
  function sf(e) {
    switch (e) {
      case "Object":
      case "Array":
        return 1;
      case "Map":
      case "Set":
      case "WeakMap":
      case "WeakSet":
        return 2;
      default:
        return 0;
    }
  }
  function rf(e) {
    return e.__v_skip || !Object.isExtensible(e) ? 0 : sf(Ac(e));
  }
  function nn(e) {
    return zt(e) ? e : yo(e, !1, qc, ef, _i);
  }
  function lf(e) {
    return yo(e, !1, Xc, tf, mi);
  }
  function On(e) {
    return yo(e, !0, Yc, nf, gi);
  }
  function vo(e) {
    return yo(e, !0, Zc, of, vi);
  }
  function yo(e, t, n, o, s) {
    if (!de(e) || (e.__v_raw && !(t && e.__v_isReactive))) return e;
    const r = s.get(e);
    if (r) return r;
    const i = rf(e);
    if (i === 0) return e;
    const l = new Proxy(e, i === 2 ? o : n);
    return s.set(e, l), l;
  }
  function xn(e) {
    return zt(e) ? xn(e.__v_raw) : !!(e && e.__v_isReactive);
  }
  function zt(e) {
    return !!(e && e.__v_isReadonly);
  }
  function Ke(e) {
    return !!(e && e.__v_isShallow);
  }
  function Vs(e) {
    return e ? !!e.__v_raw : !1;
  }
  function te(e) {
    const t = e && e.__v_raw;
    return t ? te(t) : e;
  }
  function af(e) {
    return (
      !oe(e, "__v_skip") && Object.isExtensible(e) && Zr(e, "__v_skip", !0), e
    );
  }
  const Ce = (e) => (de(e) ? nn(e) : e),
    Ls = (e) => (de(e) ? On(e) : e);
  function ge(e) {
    return e ? e.__v_isRef === !0 : !1;
  }
  function fe(e) {
    return Ei(e, !1);
  }
  function yi(e) {
    return Ei(e, !0);
  }
  function Ei(e, t) {
    return ge(e) ? e : new uf(e, t);
  }
  class uf {
    constructor(t, n) {
      (this.dep = new po()),
        (this.__v_isRef = !0),
        (this.__v_isShallow = !1),
        (this._rawValue = n ? t : te(t)),
        (this._value = n ? t : Ce(t)),
        (this.__v_isShallow = n);
    }
    get value() {
      return this.dep.track(), this._value;
    }
    set value(t) {
      const n = this._rawValue,
        o = this.__v_isShallow || Ke(t) || zt(t);
      (t = o ? t : te(t)),
        St(t, n) &&
          ((this._rawValue = t),
          (this._value = o ? t : Ce(t)),
          this.dep.trigger());
    }
  }
  function X(e) {
    return ge(e) ? e.value : e;
  }
  const cf = {
    get: (e, t, n) => (t === "__v_raw" ? e : X(Reflect.get(e, t, n))),
    set: (e, t, n, o) => {
      const s = e[t];
      return ge(s) && !ge(n) ? ((s.value = n), !0) : Reflect.set(e, t, n, o);
    },
  };
  function bi(e) {
    return xn(e) ? e : new Proxy(e, cf);
  }
  class ff {
    constructor(t) {
      (this.__v_isRef = !0), (this._value = void 0);
      const n = (this.dep = new po()),
        { get: o, set: s } = t(n.track.bind(n), n.trigger.bind(n));
      (this._get = o), (this._set = s);
    }
    get value() {
      return (this._value = this._get());
    }
    set value(t) {
      this._set(t);
    }
  }
  function df(e) {
    return new ff(e);
  }
  class pf {
    constructor(t, n, o) {
      (this._object = t),
        (this._key = n),
        (this._defaultValue = o),
        (this.__v_isRef = !0),
        (this._value = void 0);
    }
    get value() {
      const t = this._object[this._key];
      return (this._value = t === void 0 ? this._defaultValue : t);
    }
    set value(t) {
      this._object[this._key] = t;
    }
    get dep() {
      return zc(te(this._object), this._key);
    }
  }
  class hf {
    constructor(t) {
      (this._getter = t),
        (this.__v_isRef = !0),
        (this.__v_isReadonly = !0),
        (this._value = void 0);
    }
    get value() {
      return (this._value = this._getter());
    }
  }
  function _f(e, t, n) {
    return ge(e)
      ? e
      : W(e)
        ? new hf(e)
        : de(e) && arguments.length > 1
          ? mf(e, t, n)
          : fe(e);
  }
  function mf(e, t, n) {
    const o = e[t];
    return ge(o) ? o : new pf(e, t, n);
  }
  class gf {
    constructor(t, n, o) {
      (this.fn = t),
        (this.setter = n),
        (this._value = void 0),
        (this.dep = new po(this)),
        (this.__v_isRef = !0),
        (this.deps = void 0),
        (this.depsTail = void 0),
        (this.flags = 16),
        (this.globalVersion = wn - 1),
        (this.next = void 0),
        (this.effect = this),
        (this.__v_isReadonly = !n),
        (this.isSSR = o);
    }
    notify() {
      if (((this.flags |= 16), !(this.flags & 8) && ae !== this))
        return oi(this, !0), !0;
    }
    get value() {
      const t = this.dep.track();
      return ii(this), t && (t.version = this.dep.version), this._value;
    }
    set value(t) {
      this.setter && this.setter(t);
    }
  }
  function vf(e, t, n = !1) {
    let o, s;
    return W(e) ? (o = e) : ((o = e.get), (s = e.set)), new gf(o, s, n);
  }
  const Eo = {},
    bo = new WeakMap();
  let jt;
  function yf(e, t = !1, n = jt) {
    if (n) {
      let o = bo.get(n);
      o || bo.set(n, (o = [])), o.push(e);
    }
  }
  function Ef(e, t, n = le) {
    const {
        immediate: o,
        deep: s,
        once: r,
        scheduler: i,
        augmentJob: l,
        call: a,
      } = n,
      u = (b) => (s ? b : Ke(b) || s === !1 || s === 0 ? vt(b, 1) : vt(b));
    let f,
      c,
      h,
      d,
      m = !1,
      v = !1;
    if (
      (ge(e)
        ? ((c = () => e.value), (m = Ke(e)))
        : xn(e)
          ? ((c = () => u(e)), (m = !0))
          : G(e)
            ? ((v = !0),
              (m = e.some((b) => xn(b) || Ke(b))),
              (c = () =>
                e.map((b) => {
                  if (ge(b)) return b.value;
                  if (xn(b)) return u(b);
                  if (W(b)) return a ? a(b, 2) : b();
                })))
            : W(e)
              ? t
                ? (c = a ? () => a(e, 2) : e)
                : (c = () => {
                    if (h) {
                      ht();
                      try {
                        h();
                      } finally {
                        _t();
                      }
                    }
                    const b = jt;
                    jt = f;
                    try {
                      return a ? a(e, 3, [d]) : e(d);
                    } finally {
                      jt = b;
                    }
                  })
              : (c = ze),
      t && s)
    ) {
      const b = c,
        D = s === !0 ? 1 / 0 : s;
      c = () => vt(b(), D);
    }
    const y = ei(),
      g = () => {
        f.stop(), y && bs(y.effects, f);
      };
    if (r && t) {
      const b = t;
      t = (...D) => {
        b(...D), g();
      };
    }
    let S = v ? new Array(e.length).fill(Eo) : Eo;
    const P = (b) => {
      if (!(!(f.flags & 1) || (!f.dirty && !b)))
        if (t) {
          const D = f.run();
          if (s || m || (v ? D.some((L, B) => St(L, S[B])) : St(D, S))) {
            h && h();
            const L = jt;
            jt = f;
            try {
              const B = [D, S === Eo ? void 0 : v && S[0] === Eo ? [] : S, d];
              a ? a(t, 3, B) : t(...B), (S = D);
            } finally {
              jt = L;
            }
          }
        } else f.run();
    };
    return (
      l && l(P),
      (f = new ti(c)),
      (f.scheduler = i ? () => i(P, !1) : P),
      (d = (b) => yf(b, !1, f)),
      (h = f.onStop =
        () => {
          const b = bo.get(f);
          if (b) {
            if (a) a(b, 4);
            else for (const D of b) D();
            bo.delete(f);
          }
        }),
      t ? (o ? P(!0) : (S = f.run())) : i ? i(P.bind(null, !0), !0) : f.run(),
      (g.pause = f.pause.bind(f)),
      (g.resume = f.resume.bind(f)),
      (g.stop = g),
      g
    );
  }
  function vt(e, t = 1 / 0, n) {
    if (t <= 0 || !de(e) || e.__v_skip || ((n = n || new Set()), n.has(e)))
      return e;
    if ((n.add(e), t--, ge(e))) vt(e.value, t, n);
    else if (G(e)) for (let o = 0; o < e.length; o++) vt(e[o], t, n);
    else if (Oc(e) || vn(e))
      e.forEach((o) => {
        vt(o, t, n);
      });
    else if (Cc(e)) {
      for (const o in e) vt(e[o], t, n);
      for (const o of Object.getOwnPropertySymbols(e))
        Object.prototype.propertyIsEnumerable.call(e, o) && vt(e[o], t, n);
    }
    return e;
  }
  var Tt = {
    npm_package_dependencies__vueuse_core: "^11.2.0",
    TERM_PROGRAM: "vscode",
    NODE: "/Users/arlo/Library/Application Support/fnm/node-versions/v20.17.0/installation/bin/node",
    INIT_CWD: "/Users/arlo/g/devtools-next/packages/overlay",
    npm_package_devDependencies_vite: "^5.4.10",
    SHELL: "/bin/zsh",
    TERM: "xterm-256color",
    npm_config_shamefully_hoist: "true",
    npm_package_dependencies__vue_devtools_shared: "workspace:^",
    npm_package_devDependencies__vitejs_plugin_vue: "^5.1.4",
    npm_config_registry: "https://registry.npmjs.org/",
    npm_package_private: "true",
    USER: "arlo",
    npm_package_license: "MIT",
    PNPM_SCRIPT_SRC_DIR: "/Users/arlo/g/devtools-next/packages/overlay",
    npm_config_strict_peer_dependencies: "",
    __CF_USER_TEXT_ENCODING: "0x1F5:0x19:0x34",
    npm_execpath:
      "/Users/arlo/g/devtools-next/node_modules/.pnpm/pnpm@9.12.3/node_modules/pnpm/bin/pnpm.cjs",
    npm_config_frozen_lockfile: "",
    PATH: "/Users/arlo/g/devtools-next/packages/overlay/node_modules/.bin:/Users/arlo/g/devtools-next/node_modules/.pnpm/pnpm@9.12.3/node_modules/pnpm/dist/node-gyp-bin:/Users/arlo/g/devtools-next/node_modules/.bin:/Users/arlo/g/devtools-next/node_modules/.bin:/Users/arlo/g/devtools-next/node_modules/.pnpm/pnpm@9.12.3/node_modules/pnpm/dist/node-gyp-bin:/Users/arlo/g/devtools-next/node_modules/.bin:/Users/arlo/g/devtools-next/node_modules/.bin:/Users/arlo/.cache/node/corepack/v1/pnpm/9.12.3/dist/node-gyp-bin:/Users/arlo/g/devtools-next/node_modules/.bin:/Users/arlo/Library/Caches/fnm_multishells/54509_1730808930693/bin:/opt/homebrew/bin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Users/arlo/Library/pnpm:/Users/arlo/Library/Caches/fnm_multishells/54434_1730808929856/bin:/opt/homebrew/bin:/Users/arlo/.cargo/bin:/Applications/WebStorm.app/Contents/MacOS:/Applications/WebStorm.app/Contents/MacOS:/Users/arlo/g/devtools-next/node_modules/.bin:/Users/arlo/g/node_modules/.bin:/Users/arlo/node_modules/.bin:/Users/node_modules/.bin:/node_modules/.bin",
    npm_package_dependencies__vue_devtools_ui: "workspace:*",
    npm_package_devDependencies_sass_embedded: "^1.80.6",
    npm_package_author: "webfansplz",
    npm_command: "run-script",
    PWD: "/Users/arlo/g/devtools-next/packages/overlay",
    npm_package_exports____: "./dist/*",
    npm_lifecycle_event: "build",
    npm_package_devDependencies_vue: "^3.5.12",
    npm_package_name: "@vue/devtools-overlay",
    LANG: "zh_CN.UTF-8",
    npm_package_scripts_build: "vite build",
    NODE_PATH:
      "/Users/arlo/g/devtools-next/node_modules/.pnpm/vite@5.4.10_@types+node@22.9.0_sass-embedded@1.80.6_sass@1.80.3_terser@5.26.0/node_modules/vite/bin/node_modules:/Users/arlo/g/devtools-next/node_modules/.pnpm/vite@5.4.10_@types+node@22.9.0_sass-embedded@1.80.6_sass@1.80.3_terser@5.26.0/node_modules/vite/node_modules:/Users/arlo/g/devtools-next/node_modules/.pnpm/vite@5.4.10_@types+node@22.9.0_sass-embedded@1.80.6_sass@1.80.3_terser@5.26.0/node_modules:/Users/arlo/g/devtools-next/node_modules/.pnpm/node_modules:/Users/arlo/g/devtools-next/node_modules/.pnpm/pnpm@9.12.3/node_modules/pnpm/bin/node_modules:/Users/arlo/g/devtools-next/node_modules/.pnpm/pnpm@9.12.3/node_modules/pnpm/node_modules:/Users/arlo/g/devtools-next/node_modules/.pnpm/pnpm@9.12.3/node_modules:/Users/arlo/g/devtools-next/node_modules/.pnpm/node_modules",
    TURBO_HASH: "1428e0c547842309",
    VSCODE_GIT_ASKPASS_EXTRA_ARGS: "",
    npm_package_engines_node: ">=v14.21.3",
    npm_config_node_gyp:
      "/Users/arlo/g/devtools-next/node_modules/.pnpm/pnpm@9.12.3/node_modules/pnpm/dist/node_modules/node-gyp/bin/node-gyp.js",
    npm_config_side_effects_cache: "",
    npm_package_devDependencies__iconify_json: "^2.2.267",
    npm_package_version: "7.6.3",
    VSCODE_INJECTION: "1",
    npm_package_dependencies__vue_devtools_core: "workspace:^",
    npm_package_type: "module",
    HOME: "/Users/arlo",
    SHLVL: "0",
    VSCODE_GIT_ASKPASS_MAIN:
      "/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass-main.js",
    npm_lifecycle_script: "vite build",
    npm_package_dependencies__vue_devtools_kit: "workspace:*",
    VSCODE_GIT_IPC_HANDLE:
      "/var/folders/6s/79hm4q7x5f982tndmbvckmn80000gn/T/vscode-git-dffc443db3.sock",
    npm_config_user_agent: "pnpm/9.12.3 npm/? node/v20.17.0 darwin arm64",
    npm_package_devDependencies__types_node: "^22.9.0",
    VSCODE_GIT_ASKPASS_NODE:
      "/Applications/Visual Studio Code.app/Contents/Frameworks/Code Helper (Plugin).app/Contents/MacOS/Code Helper (Plugin)",
    npm_package_scripts_stub: "vite build --watch",
    npm_package_files_0: "dist",
    npm_package_scripts_play: "vite --config vite.play.config.ts --open",
    npm_node_execpath:
      "/Users/arlo/Library/Application Support/fnm/node-versions/v20.17.0/installation/bin/node",
    npm_config_shell_emulator: "true",
    COLORTERM: "truecolor",
    NODE_ENV: "production",
  };
  const An = [];
  let $s = !1;
  function bf(e, ...t) {
    if ($s) return;
    ($s = !0), ht();
    const n = An.length ? An[An.length - 1].component : null,
      o = n && n.appContext.config.warnHandler,
      s = wf();
    if (o)
      on(o, n, 11, [
        e +
          t
            .map((r) => {
              var i, l;
              return (l = (i = r.toString) == null ? void 0 : i.call(r)) != null
                ? l
                : JSON.stringify(r);
            })
            .join(""),
        n && n.proxy,
        s.map(({ vnode: r }) => `at <${_l(n, r.type)}>`).join(`
`),
        s,
      ]);
    else {
      const r = [`[Vue warn]: ${e}`, ...t];
      s.length &&
        r.push(
          `
`,
          ...Sf(s),
        ),
        console.warn(...r);
    }
    _t(), ($s = !1);
  }
  function wf() {
    let e = An[An.length - 1];
    if (!e) return [];
    const t = [];
    for (; e; ) {
      const n = t[0];
      n && n.vnode === e
        ? n.recurseCount++
        : t.push({ vnode: e, recurseCount: 0 });
      const o = e.component && e.component.parent;
      e = o && o.vnode;
    }
    return t;
  }
  function Sf(e) {
    const t = [];
    return (
      e.forEach((n, o) => {
        t.push(
          ...(o === 0
            ? []
            : [
                `
`,
              ]),
          ...Tf(n),
        );
      }),
      t
    );
  }
  function Tf({ vnode: e, recurseCount: t }) {
    const n = t > 0 ? `... (${t} recursive calls)` : "",
      o = e.component ? e.component.parent == null : !1,
      s = ` at <${_l(e.component, e.type, o)}`,
      r = ">" + n;
    return e.props ? [s, ...Of(e.props), r] : [s + r];
  }
  function Of(e) {
    const t = [],
      n = Object.keys(e);
    return (
      n.slice(0, 3).forEach((o) => {
        t.push(...wi(o, e[o]));
      }),
      n.length > 3 && t.push(" ..."),
      t
    );
  }
  function wi(e, t, n) {
    return me(t)
      ? ((t = JSON.stringify(t)), n ? t : [`${e}=${t}`])
      : typeof t == "number" || typeof t == "boolean" || t == null
        ? n
          ? t
          : [`${e}=${t}`]
        : ge(t)
          ? ((t = wi(e, te(t.value), !0)), n ? t : [`${e}=Ref<`, t, ">"])
          : W(t)
            ? [`${e}=fn${t.name ? `<${t.name}>` : ""}`]
            : ((t = te(t)), n ? t : [`${e}=`, t]);
  }
  function on(e, t, n, o) {
    try {
      return o ? e(...o) : e();
    } catch (s) {
      wo(s, t, n);
    }
  }
  function Qe(e, t, n, o) {
    if (W(e)) {
      const s = on(e, t, n, o);
      return (
        s &&
          Xr(s) &&
          s.catch((r) => {
            wo(r, t, n);
          }),
        s
      );
    }
    if (G(e)) {
      const s = [];
      for (let r = 0; r < e.length; r++) s.push(Qe(e[r], t, n, o));
      return s;
    }
  }
  function wo(e, t, n, o = !0) {
    const s = t ? t.vnode : null,
      { errorHandler: r, throwUnhandledErrorInProduction: i } =
        (t && t.appContext.config) || le;
    if (t) {
      let l = t.parent;
      const a = t.proxy,
        u = `https://vuejs.org/error-reference/#runtime-${n}`;
      for (; l; ) {
        const f = l.ec;
        if (f) {
          for (let c = 0; c < f.length; c++) if (f[c](e, a, u) === !1) return;
        }
        l = l.parent;
      }
      if (r) {
        ht(), on(r, null, 10, [e, a, u]), _t();
        return;
      }
    }
    xf(e, n, s, o, i);
  }
  function xf(e, t, n, o = !0, s = !1) {
    if (s) throw e;
    console.error(e);
  }
  const De = [];
  let et = -1;
  const sn = [];
  let Ot = null,
    rn = 0;
  const Si = Promise.resolve();
  let So = null;
  function To(e) {
    const t = So || Si;
    return e ? t.then(this ? e.bind(this) : e) : t;
  }
  function Af(e) {
    let t = et + 1,
      n = De.length;
    for (; t < n; ) {
      const o = (t + n) >>> 1,
        s = De[o],
        r = Cn(s);
      r < e || (r === e && s.flags & 2) ? (t = o + 1) : (n = o);
    }
    return t;
  }
  function Ms(e) {
    if (!(e.flags & 1)) {
      const t = Cn(e),
        n = De[De.length - 1];
      !n || (!(e.flags & 2) && t >= Cn(n))
        ? De.push(e)
        : De.splice(Af(t), 0, e),
        (e.flags |= 1),
        Ti();
    }
  }
  function Ti() {
    So || (So = Si.then(Ai));
  }
  function Cf(e) {
    G(e)
      ? sn.push(...e)
      : Ot && e.id === -1
        ? Ot.splice(rn + 1, 0, e)
        : e.flags & 1 || (sn.push(e), (e.flags |= 1)),
      Ti();
  }
  function Oi(e, t, n = et + 1) {
    for (; n < De.length; n++) {
      const o = De[n];
      if (o && o.flags & 2) {
        if (e && o.id !== e.uid) continue;
        De.splice(n, 1),
          n--,
          o.flags & 4 && (o.flags &= -2),
          o(),
          o.flags & 4 || (o.flags &= -2);
      }
    }
  }
  function xi(e) {
    if (sn.length) {
      const t = [...new Set(sn)].sort((n, o) => Cn(n) - Cn(o));
      if (((sn.length = 0), Ot)) {
        Ot.push(...t);
        return;
      }
      for (Ot = t, rn = 0; rn < Ot.length; rn++) {
        const n = Ot[rn];
        n.flags & 4 && (n.flags &= -2), n.flags & 8 || n(), (n.flags &= -2);
      }
      (Ot = null), (rn = 0);
    }
  }
  const Cn = (e) => (e.id == null ? (e.flags & 2 ? -1 : 1 / 0) : e.id);
  function Ai(e) {
    const t = ze;
    try {
      for (et = 0; et < De.length; et++) {
        const n = De[et];
        n &&
          !(n.flags & 8) &&
          (Tt.NODE_ENV !== "production" && t(n),
          n.flags & 4 && (n.flags &= -2),
          on(n, n.i, n.i ? 15 : 14),
          n.flags & 4 || (n.flags &= -2));
      }
    } finally {
      for (; et < De.length; et++) {
        const n = De[et];
        n && (n.flags &= -2);
      }
      (et = -1),
        (De.length = 0),
        xi(),
        (So = null),
        (De.length || sn.length) && Ai();
    }
  }
  let Ee = null,
    Oo = null;
  function xo(e) {
    const t = Ee;
    return (Ee = e), (Oo = (e && e.type.__scopeId) || null), t;
  }
  function Df(e) {
    Oo = e;
  }
  function Pf() {
    Oo = null;
  }
  const If = (e) => Ao;
  function Ao(e, t = Ee, n) {
    if (!t || e._n) return e;
    const o = (...s) => {
      o._d && ol(-1);
      const r = xo(t);
      let i;
      try {
        i = e(...s);
      } finally {
        xo(r), o._d && ol(1);
      }
      return i;
    };
    return (o._n = !0), (o._c = !0), (o._d = !0), o;
  }
  function tt(e, t) {
    if (Ee === null) return e;
    const n = $o(Ee),
      o = e.dirs || (e.dirs = []);
    for (let s = 0; s < t.length; s++) {
      let [r, i, l, a = le] = t[s];
      r &&
        (W(r) && (r = { mounted: r, updated: r }),
        r.deep && vt(i),
        o.push({
          dir: r,
          instance: n,
          value: i,
          oldValue: void 0,
          arg: l,
          modifiers: a,
        }));
    }
    return e;
  }
  function Kt(e, t, n, o) {
    const s = e.dirs,
      r = t && t.dirs;
    for (let i = 0; i < s.length; i++) {
      const l = s[i];
      r && (l.oldValue = r[i].value);
      let a = l.dir[o];
      a && (ht(), Qe(a, n, 8, [e.el, l, e, t]), _t());
    }
  }
  const kf = Symbol("_vte"),
    Rf = (e) => e.__isTeleport;
  function Fs(e, t) {
    e.shapeFlag & 6 && e.component
      ? ((e.transition = t), Fs(e.component.subTree, t))
      : e.shapeFlag & 128
        ? ((e.ssContent.transition = t.clone(e.ssContent)),
          (e.ssFallback.transition = t.clone(e.ssFallback)))
        : (e.transition = t);
  }
  /*! #__NO_SIDE_EFFECTS__ */ function ln(e, t) {
    return W(e) ? ye({ name: e.name }, t, { setup: e }) : e;
  }
  function Ci(e) {
    e.ids = [e.ids[0] + e.ids[2]++ + "-", 0, 0];
  }
  function Us(e, t, n, o, s = !1) {
    if (G(e)) {
      e.forEach((m, v) => Us(m, t && (G(t) ? t[v] : t), n, o, s));
      return;
    }
    if (an(o) && !s) return;
    const r = o.shapeFlag & 4 ? $o(o.component) : o.el,
      i = s ? null : r,
      { i: l, r: a } = e,
      u = t && t.r,
      f = l.refs === le ? (l.refs = {}) : l.refs,
      c = l.setupState,
      h = te(c),
      d = c === le ? () => !1 : (m) => oe(h, m);
    if (
      (u != null &&
        u !== a &&
        (me(u)
          ? ((f[u] = null), d(u) && (c[u] = null))
          : ge(u) && (u.value = null)),
      W(a))
    )
      on(a, l, 12, [i, f]);
    else {
      const m = me(a),
        v = ge(a);
      if (m || v) {
        const y = () => {
          if (e.f) {
            const g = m ? (d(a) ? c[a] : f[a]) : a.value;
            s
              ? G(g) && bs(g, r)
              : G(g)
                ? g.includes(r) || g.push(r)
                : m
                  ? ((f[a] = [r]), d(a) && (c[a] = f[a]))
                  : ((a.value = [r]), e.k && (f[e.k] = a.value));
          } else
            m
              ? ((f[a] = i), d(a) && (c[a] = i))
              : v && ((a.value = i), e.k && (f[e.k] = i));
        };
        i ? ((y.id = -1), Ne(y, n)) : y();
      }
    }
  }
  fo().requestIdleCallback, fo().cancelIdleCallback;
  const an = (e) => !!e.type.__asyncLoader,
    Di = (e) => e.type.__isKeepAlive;
  function Nf(e, t) {
    Pi(e, "a", t);
  }
  function Vf(e, t) {
    Pi(e, "da", t);
  }
  function Pi(e, t, n = ve) {
    const o =
      e.__wdc ||
      (e.__wdc = () => {
        let s = n;
        for (; s; ) {
          if (s.isDeactivated) return;
          s = s.parent;
        }
        return e();
      });
    if ((Co(t, o, n), n)) {
      let s = n.parent;
      for (; s && s.parent; )
        Di(s.parent.vnode) && Lf(o, t, n, s), (s = s.parent);
    }
  }
  function Lf(e, t, n, o) {
    const s = Co(t, e, o, !0);
    Ii(() => {
      bs(o[t], s);
    }, n);
  }
  function Co(e, t, n = ve, o = !1) {
    if (n) {
      const s = n[e] || (n[e] = []),
        r =
          t.__weh ||
          (t.__weh = (...i) => {
            ht();
            const l = Ln(n),
              a = Qe(t, n, e, i);
            return l(), _t(), a;
          });
      return o ? s.unshift(r) : s.push(r), r;
    }
  }
  const yt =
      (e) =>
      (t, n = ve) => {
        (!$n || e === "sp") && Co(e, (...o) => t(...o), n);
      },
    $f = yt("bm"),
    Dn = yt("m"),
    Mf = yt("bu"),
    Ff = yt("u"),
    Uf = yt("bum"),
    Ii = yt("um"),
    Bf = yt("sp"),
    Hf = yt("rtg"),
    zf = yt("rtc");
  function jf(e, t = ve) {
    Co("ec", e, t);
  }
  const Kf = "components";
  function Bs(e, t) {
    return Gf(Kf, e, !0, t) || e;
  }
  const Wf = Symbol.for("v-ndc");
  function Gf(e, t, n = !0, o = !1) {
    const s = Ee || ve;
    if (s) {
      const r = s.type;
      {
        const l = hl(r, !1);
        if (l && (l === t || l === Ue(t) || l === co(Ue(t)))) return r;
      }
      const i = ki(s[e] || r[e], t) || ki(s.appContext[e], t);
      return !i && o ? r : i;
    }
  }
  function ki(e, t) {
    return e && (e[t] || e[Ue(t)] || e[co(Ue(t))]);
  }
  function Do(e, t, n = {}, o, s) {
    if (Ee.ce || (Ee.parent && an(Ee.parent) && Ee.parent.ce))
      return (
        t !== "default" && (n.name = t),
        ke(),
        cn(Ie, null, [Te("slot", n, o)], 64)
      );
    let r = e[t];
    r && r._c && (r._d = !1), ke();
    const i = r && Ri(r(n)),
      l = n.key || (i && i.key),
      a = cn(
        Ie,
        { key: (l && !Bt(l) ? l : `_${t}`) + (!i && o ? "_fb" : "") },
        i || [],
        i && e._ === 1 ? 64 : -2,
      );
    return (
      a.scopeId && (a.slotScopeIds = [a.scopeId + "-s"]),
      r && r._c && (r._d = !0),
      a
    );
  }
  function Ri(e) {
    return e.some((t) =>
      Nn(t) ? !(t.type === xt || (t.type === Ie && !Ri(t.children))) : !0,
    )
      ? e
      : null;
  }
  const Hs = (e) => (e ? (cl(e) ? $o(e) : Hs(e.parent)) : null),
    Pn = ye(Object.create(null), {
      $: (e) => e,
      $el: (e) => e.vnode.el,
      $data: (e) => e.data,
      $props: (e) => e.props,
      $attrs: (e) => e.attrs,
      $slots: (e) => e.slots,
      $refs: (e) => e.refs,
      $parent: (e) => Hs(e.parent),
      $root: (e) => Hs(e.root),
      $host: (e) => e.ce,
      $emit: (e) => e.emit,
      $options: (e) => Ks(e),
      $forceUpdate: (e) =>
        e.f ||
        (e.f = () => {
          Ms(e.update);
        }),
      $nextTick: (e) => e.n || (e.n = To.bind(e.proxy)),
      $watch: (e) => _d.bind(e),
    }),
    zs = (e, t) => e !== le && !e.__isScriptSetup && oe(e, t),
    qf = {
      get({ _: e }, t) {
        if (t === "__v_skip") return !0;
        const {
          ctx: n,
          setupState: o,
          data: s,
          props: r,
          accessCache: i,
          type: l,
          appContext: a,
        } = e;
        let u;
        if (t[0] !== "$") {
          const d = i[t];
          if (d !== void 0)
            switch (d) {
              case 1:
                return o[t];
              case 2:
                return s[t];
              case 4:
                return n[t];
              case 3:
                return r[t];
            }
          else {
            if (zs(o, t)) return (i[t] = 1), o[t];
            if (s !== le && oe(s, t)) return (i[t] = 2), s[t];
            if ((u = e.propsOptions[0]) && oe(u, t)) return (i[t] = 3), r[t];
            if (n !== le && oe(n, t)) return (i[t] = 4), n[t];
            js && (i[t] = 0);
          }
        }
        const f = Pn[t];
        let c, h;
        if (f) return t === "$attrs" && Se(e.attrs, "get", ""), f(e);
        if ((c = l.__cssModules) && (c = c[t])) return c;
        if (n !== le && oe(n, t)) return (i[t] = 4), n[t];
        if (((h = a.config.globalProperties), oe(h, t))) return h[t];
      },
      set({ _: e }, t, n) {
        const { data: o, setupState: s, ctx: r } = e;
        return zs(s, t)
          ? ((s[t] = n), !0)
          : o !== le && oe(o, t)
            ? ((o[t] = n), !0)
            : oe(e.props, t) || (t[0] === "$" && t.slice(1) in e)
              ? !1
              : ((r[t] = n), !0);
      },
      has(
        {
          _: {
            data: e,
            setupState: t,
            accessCache: n,
            ctx: o,
            appContext: s,
            propsOptions: r,
          },
        },
        i,
      ) {
        let l;
        return (
          !!n[i] ||
          (e !== le && oe(e, i)) ||
          zs(t, i) ||
          ((l = r[0]) && oe(l, i)) ||
          oe(o, i) ||
          oe(Pn, i) ||
          oe(s.config.globalProperties, i)
        );
      },
      defineProperty(e, t, n) {
        return (
          n.get != null
            ? (e._.accessCache[t] = 0)
            : oe(n, "value") && this.set(e, t, n.value, null),
          Reflect.defineProperty(e, t, n)
        );
      },
    };
  function Ni(e) {
    return G(e) ? e.reduce((t, n) => ((t[n] = null), t), {}) : e;
  }
  let js = !0;
  function Yf(e) {
    const t = Ks(e),
      n = e.proxy,
      o = e.ctx;
    (js = !1), t.beforeCreate && Vi(t.beforeCreate, e, "bc");
    const {
      data: s,
      computed: r,
      methods: i,
      watch: l,
      provide: a,
      inject: u,
      created: f,
      beforeMount: c,
      mounted: h,
      beforeUpdate: d,
      updated: m,
      activated: v,
      deactivated: y,
      beforeDestroy: g,
      beforeUnmount: S,
      destroyed: P,
      unmounted: b,
      render: D,
      renderTracked: L,
      renderTriggered: B,
      errorCaptured: j,
      serverPrefetch: q,
      expose: I,
      inheritAttrs: N,
      components: M,
      directives: H,
      filters: Q,
    } = t;
    if ((u && Xf(u, o, null), i))
      for (const F in i) {
        const ne = i[F];
        W(ne) && (o[F] = ne.bind(n));
      }
    if (s) {
      const F = s.call(n, n);
      de(F) && (e.data = nn(F));
    }
    if (((js = !0), r))
      for (const F in r) {
        const ne = r[F],
          we = W(ne) ? ne.bind(n, n) : W(ne.get) ? ne.get.bind(n, n) : ze,
          Ze = !W(ne) && W(ne.set) ? ne.set.bind(n) : ze,
          Oe = be({ get: we, set: Ze });
        Object.defineProperty(o, F, {
          enumerable: !0,
          configurable: !0,
          get: () => Oe.value,
          set: (he) => (Oe.value = he),
        });
      }
    if (l) for (const F in l) Li(l[F], o, n, F);
    if (a) {
      const F = W(a) ? a.call(n) : a;
      Reflect.ownKeys(F).forEach((ne) => {
        nd(ne, F[ne]);
      });
    }
    f && Vi(f, e, "c");
    function Y(F, ne) {
      G(ne) ? ne.forEach((we) => F(we.bind(n))) : ne && F(ne.bind(n));
    }
    if (
      (Y($f, c),
      Y(Dn, h),
      Y(Mf, d),
      Y(Ff, m),
      Y(Nf, v),
      Y(Vf, y),
      Y(jf, j),
      Y(zf, L),
      Y(Hf, B),
      Y(Uf, S),
      Y(Ii, b),
      Y(Bf, q),
      G(I))
    )
      if (I.length) {
        const F = e.exposed || (e.exposed = {});
        I.forEach((ne) => {
          Object.defineProperty(F, ne, {
            get: () => n[ne],
            set: (we) => (n[ne] = we),
          });
        });
      } else e.exposed || (e.exposed = {});
    D && e.render === ze && (e.render = D),
      N != null && (e.inheritAttrs = N),
      M && (e.components = M),
      H && (e.directives = H),
      q && Ci(e);
  }
  function Xf(e, t, n = ze) {
    G(e) && (e = Ws(e));
    for (const o in e) {
      const s = e[o];
      let r;
      de(s)
        ? "default" in s
          ? (r = Io(s.from || o, s.default, !0))
          : (r = Io(s.from || o))
        : (r = Io(s)),
        ge(r)
          ? Object.defineProperty(t, o, {
              enumerable: !0,
              configurable: !0,
              get: () => r.value,
              set: (i) => (r.value = i),
            })
          : (t[o] = r);
    }
  }
  function Vi(e, t, n) {
    Qe(G(e) ? e.map((o) => o.bind(t.proxy)) : e.bind(t.proxy), t, n);
  }
  function Li(e, t, n, o) {
    let s = o.includes(".") ? Qi(n, o) : () => n[o];
    if (me(e)) {
      const r = t[e];
      W(r) && nt(s, r);
    } else if (W(e)) nt(s, e.bind(n));
    else if (de(e))
      if (G(e)) e.forEach((r) => Li(r, t, n, o));
      else {
        const r = W(e.handler) ? e.handler.bind(n) : t[e.handler];
        W(r) && nt(s, r, e);
      }
  }
  function Ks(e) {
    const t = e.type,
      { mixins: n, extends: o } = t,
      {
        mixins: s,
        optionsCache: r,
        config: { optionMergeStrategies: i },
      } = e.appContext,
      l = r.get(t);
    let a;
    return (
      l
        ? (a = l)
        : !s.length && !n && !o
          ? (a = t)
          : ((a = {}),
            s.length && s.forEach((u) => Po(a, u, i, !0)),
            Po(a, t, i)),
      de(t) && r.set(t, a),
      a
    );
  }
  function Po(e, t, n, o = !1) {
    const { mixins: s, extends: r } = t;
    r && Po(e, r, n, !0), s && s.forEach((i) => Po(e, i, n, !0));
    for (const i in t)
      if (!(o && i === "expose")) {
        const l = Zf[i] || (n && n[i]);
        e[i] = l ? l(e[i], t[i]) : t[i];
      }
    return e;
  }
  const Zf = {
    data: $i,
    props: Mi,
    emits: Mi,
    methods: In,
    computed: In,
    beforeCreate: Pe,
    created: Pe,
    beforeMount: Pe,
    mounted: Pe,
    beforeUpdate: Pe,
    updated: Pe,
    beforeDestroy: Pe,
    beforeUnmount: Pe,
    destroyed: Pe,
    unmounted: Pe,
    activated: Pe,
    deactivated: Pe,
    errorCaptured: Pe,
    serverPrefetch: Pe,
    components: In,
    directives: In,
    watch: Qf,
    provide: $i,
    inject: Jf,
  };
  function $i(e, t) {
    return t
      ? e
        ? function () {
            return ye(
              W(e) ? e.call(this, this) : e,
              W(t) ? t.call(this, this) : t,
            );
          }
        : t
      : e;
  }
  function Jf(e, t) {
    return In(Ws(e), Ws(t));
  }
  function Ws(e) {
    if (G(e)) {
      const t = {};
      for (let n = 0; n < e.length; n++) t[e[n]] = e[n];
      return t;
    }
    return e;
  }
  function Pe(e, t) {
    return e ? [...new Set([].concat(e, t))] : t;
  }
  function In(e, t) {
    return e ? ye(Object.create(null), e, t) : t;
  }
  function Mi(e, t) {
    return e
      ? G(e) && G(t)
        ? [...new Set([...e, ...t])]
        : ye(Object.create(null), Ni(e), Ni(t ?? {}))
      : t;
  }
  function Qf(e, t) {
    if (!e) return t;
    if (!t) return e;
    const n = ye(Object.create(null), e);
    for (const o in t) n[o] = Pe(e[o], t[o]);
    return n;
  }
  function Fi() {
    return {
      app: null,
      config: {
        isNativeTag: Sc,
        performance: !1,
        globalProperties: {},
        optionMergeStrategies: {},
        errorHandler: void 0,
        warnHandler: void 0,
        compilerOptions: {},
      },
      mixins: [],
      components: {},
      directives: {},
      provides: Object.create(null),
      optionsCache: new WeakMap(),
      propsCache: new WeakMap(),
      emitsCache: new WeakMap(),
    };
  }
  let ed = 0;
  function td(e, t) {
    return function (o, s = null) {
      W(o) || (o = ye({}, o)), s != null && !de(s) && (s = null);
      const r = Fi(),
        i = new WeakSet(),
        l = [];
      let a = !1;
      const u = (r.app = {
        _uid: ed++,
        _component: o,
        _props: s,
        _container: null,
        _context: r,
        _instance: null,
        version: $d,
        get config() {
          return r.config;
        },
        set config(f) {},
        use(f, ...c) {
          return (
            i.has(f) ||
              (f && W(f.install)
                ? (i.add(f), f.install(u, ...c))
                : W(f) && (i.add(f), f(u, ...c))),
            u
          );
        },
        mixin(f) {
          return r.mixins.includes(f) || r.mixins.push(f), u;
        },
        component(f, c) {
          return c ? ((r.components[f] = c), u) : r.components[f];
        },
        directive(f, c) {
          return c ? ((r.directives[f] = c), u) : r.directives[f];
        },
        mount(f, c, h) {
          if (!a) {
            const d = u._ceVNode || Te(o, s);
            return (
              (d.appContext = r),
              h === !0 ? (h = "svg") : h === !1 && (h = void 0),
              c && t ? t(d, f) : e(d, f, h),
              (a = !0),
              (u._container = f),
              (f.__vue_app__ = u),
              $o(d.component)
            );
          }
        },
        onUnmount(f) {
          l.push(f);
        },
        unmount() {
          a &&
            (Qe(l, u._instance, 16),
            e(null, u._container),
            delete u._container.__vue_app__);
        },
        provide(f, c) {
          return (r.provides[f] = c), u;
        },
        runWithContext(f) {
          const c = un;
          un = u;
          try {
            return f();
          } finally {
            un = c;
          }
        },
      });
      return u;
    };
  }
  let un = null;
  function nd(e, t) {
    if (ve) {
      let n = ve.provides;
      const o = ve.parent && ve.parent.provides;
      o === n && (n = ve.provides = Object.create(o)), (n[e] = t);
    }
  }
  function Io(e, t, n = !1) {
    const o = ve || Ee;
    if (o || un) {
      const s = un
        ? un._context.provides
        : o
          ? o.parent == null
            ? o.vnode.appContext && o.vnode.appContext.provides
            : o.parent.provides
          : void 0;
      if (s && e in s) return s[e];
      if (arguments.length > 1) return n && W(t) ? t.call(o && o.proxy) : t;
    }
  }
  const Ui = {},
    Bi = () => Object.create(Ui),
    Hi = (e) => Object.getPrototypeOf(e) === Ui;
  function od(e, t, n, o = !1) {
    const s = {},
      r = Bi();
    (e.propsDefaults = Object.create(null)), zi(e, t, s, r);
    for (const i in e.propsOptions[0]) i in s || (s[i] = void 0);
    n
      ? (e.props = o ? s : lf(s))
      : e.type.props
        ? (e.props = s)
        : (e.props = r),
      (e.attrs = r);
  }
  function sd(e, t, n, o) {
    const {
        props: s,
        attrs: r,
        vnode: { patchFlag: i },
      } = e,
      l = te(s),
      [a] = e.propsOptions;
    let u = !1;
    if ((o || i > 0) && !(i & 16)) {
      if (i & 8) {
        const f = e.vnode.dynamicProps;
        for (let c = 0; c < f.length; c++) {
          let h = f[c];
          if (ko(e.emitsOptions, h)) continue;
          const d = t[h];
          if (a)
            if (oe(r, h)) d !== r[h] && ((r[h] = d), (u = !0));
            else {
              const m = Ue(h);
              s[m] = Gs(a, l, m, d, e, !1);
            }
          else d !== r[h] && ((r[h] = d), (u = !0));
        }
      }
    } else {
      zi(e, t, s, r) && (u = !0);
      let f;
      for (const c in l)
        (!t || (!oe(t, c) && ((f = wt(c)) === c || !oe(t, f)))) &&
          (a
            ? n &&
              (n[c] !== void 0 || n[f] !== void 0) &&
              (s[c] = Gs(a, l, c, void 0, e, !0))
            : delete s[c]);
      if (r !== l)
        for (const c in r) (!t || !oe(t, c)) && (delete r[c], (u = !0));
    }
    u && mt(e.attrs, "set", "");
  }
  function zi(e, t, n, o) {
    const [s, r] = e.propsOptions;
    let i = !1,
      l;
    if (t)
      for (let a in t) {
        if (yn(a)) continue;
        const u = t[a];
        let f;
        s && oe(s, (f = Ue(a)))
          ? !r || !r.includes(f)
            ? (n[f] = u)
            : ((l || (l = {}))[f] = u)
          : ko(e.emitsOptions, a) ||
            ((!(a in o) || u !== o[a]) && ((o[a] = u), (i = !0)));
      }
    if (r) {
      const a = te(n),
        u = l || le;
      for (let f = 0; f < r.length; f++) {
        const c = r[f];
        n[c] = Gs(s, a, c, u[c], e, !oe(u, c));
      }
    }
    return i;
  }
  function Gs(e, t, n, o, s, r) {
    const i = e[n];
    if (i != null) {
      const l = oe(i, "default");
      if (l && o === void 0) {
        const a = i.default;
        if (i.type !== Function && !i.skipFactory && W(a)) {
          const { propsDefaults: u } = s;
          if (n in u) o = u[n];
          else {
            const f = Ln(s);
            (o = u[n] = a.call(null, t)), f();
          }
        } else o = a;
        s.ce && s.ce._setProp(n, o);
      }
      i[0] &&
        (r && !l ? (o = !1) : i[1] && (o === "" || o === wt(n)) && (o = !0));
    }
    return o;
  }
  const rd = new WeakMap();
  function ji(e, t, n = !1) {
    const o = n ? rd : t.propsCache,
      s = o.get(e);
    if (s) return s;
    const r = e.props,
      i = {},
      l = [];
    let a = !1;
    if (!W(e)) {
      const f = (c) => {
        a = !0;
        const [h, d] = ji(c, t, !0);
        ye(i, h), d && l.push(...d);
      };
      !n && t.mixins.length && t.mixins.forEach(f),
        e.extends && f(e.extends),
        e.mixins && e.mixins.forEach(f);
    }
    if (!r && !a) return de(e) && o.set(e, en), en;
    if (G(r))
      for (let f = 0; f < r.length; f++) {
        const c = Ue(r[f]);
        Ki(c) && (i[c] = le);
      }
    else if (r)
      for (const f in r) {
        const c = Ue(f);
        if (Ki(c)) {
          const h = r[f],
            d = (i[c] = G(h) || W(h) ? { type: h } : ye({}, h)),
            m = d.type;
          let v = !1,
            y = !0;
          if (G(m))
            for (let g = 0; g < m.length; ++g) {
              const S = m[g],
                P = W(S) && S.name;
              if (P === "Boolean") {
                v = !0;
                break;
              } else P === "String" && (y = !1);
            }
          else v = W(m) && m.name === "Boolean";
          (d[0] = v), (d[1] = y), (v || oe(d, "default")) && l.push(c);
        }
      }
    const u = [i, l];
    return de(e) && o.set(e, u), u;
  }
  function Ki(e) {
    return e[0] !== "$" && !yn(e);
  }
  const Wi = (e) => e[0] === "_" || e === "$stable",
    qs = (e) => (G(e) ? e.map(ot) : [ot(e)]),
    id = (e, t, n) => {
      if (t._n) return t;
      const o = Ao(
        (...s) => (
          Tt.NODE_ENV !== "production" && ve && (!n || (n.root, ve.root)),
          qs(t(...s))
        ),
        n,
      );
      return (o._c = !1), o;
    },
    Gi = (e, t, n) => {
      const o = e._ctx;
      for (const s in e) {
        if (Wi(s)) continue;
        const r = e[s];
        if (W(r)) t[s] = id(s, r, o);
        else if (r != null) {
          const i = qs(r);
          t[s] = () => i;
        }
      }
    },
    qi = (e, t) => {
      const n = qs(t);
      e.slots.default = () => n;
    },
    Yi = (e, t, n) => {
      for (const o in t) (n || o !== "_") && (e[o] = t[o]);
    },
    ld = (e, t, n) => {
      const o = (e.slots = Bi());
      if (e.vnode.shapeFlag & 32) {
        const s = t._;
        s ? (Yi(o, t, n), n && Zr(o, "_", s, !0)) : Gi(t, o);
      } else t && qi(e, t);
    },
    ad = (e, t, n) => {
      const { vnode: o, slots: s } = e;
      let r = !0,
        i = le;
      if (o.shapeFlag & 32) {
        const l = t._;
        l
          ? n && l === 1
            ? (r = !1)
            : Yi(s, t, n)
          : ((r = !t.$stable), Gi(t, s)),
          (i = t);
      } else t && (qi(e, t), (i = { default: 1 }));
      if (r) for (const l in s) !Wi(l) && i[l] == null && delete s[l];
    },
    Ne = wd;
  function ud(e) {
    return cd(e);
  }
  function cd(e, t) {
    const n = fo();
    n.__VUE__ = !0;
    const {
        insert: o,
        remove: s,
        patchProp: r,
        createElement: i,
        createText: l,
        createComment: a,
        setText: u,
        setElementText: f,
        parentNode: c,
        nextSibling: h,
        setScopeId: d = ze,
        insertStaticContent: m,
      } = e,
      v = (
        p,
        _,
        E,
        A = null,
        T = null,
        O = null,
        V = void 0,
        R = null,
        k = !!_.dynamicChildren,
      ) => {
        if (p === _) return;
        p && !Vn(p, _) && ((A = vs(p)), he(p, T, O, !0), (p = null)),
          _.patchFlag === -2 && ((k = !1), (_.dynamicChildren = null));
        const { type: C, ref: z, shapeFlag: $ } = _;
        switch (C) {
          case Ro:
            y(p, _, E, A);
            break;
          case xt:
            g(p, _, E, A);
            break;
          case Qs:
            p == null && S(_, E, A, V);
            break;
          case Ie:
            M(p, _, E, A, T, O, V, R, k);
            break;
          default:
            $ & 1
              ? D(p, _, E, A, T, O, V, R, k)
              : $ & 6
                ? H(p, _, E, A, T, O, V, R, k)
                : ($ & 64 || $ & 128) &&
                  C.process(p, _, E, A, T, O, V, R, k, ro);
        }
        z != null && T && Us(z, p && p.ref, O, _ || p, !_);
      },
      y = (p, _, E, A) => {
        if (p == null) o((_.el = l(_.children)), E, A);
        else {
          const T = (_.el = p.el);
          _.children !== p.children && u(T, _.children);
        }
      },
      g = (p, _, E, A) => {
        p == null ? o((_.el = a(_.children || "")), E, A) : (_.el = p.el);
      },
      S = (p, _, E, A) => {
        [p.el, p.anchor] = m(p.children, _, E, A, p.el, p.anchor);
      },
      P = ({ el: p, anchor: _ }, E, A) => {
        let T;
        for (; p && p !== _; ) (T = h(p)), o(p, E, A), (p = T);
        o(_, E, A);
      },
      b = ({ el: p, anchor: _ }) => {
        let E;
        for (; p && p !== _; ) (E = h(p)), s(p), (p = E);
        s(_);
      },
      D = (p, _, E, A, T, O, V, R, k) => {
        _.type === "svg" ? (V = "svg") : _.type === "math" && (V = "mathml"),
          p == null ? L(_, E, A, T, O, V, R, k) : q(p, _, T, O, V, R, k);
      },
      L = (p, _, E, A, T, O, V, R) => {
        let k, C;
        const { props: z, shapeFlag: $, transition: U, dirs: K } = p;
        if (
          ((k = p.el = i(p.type, O, z && z.is, z)),
          $ & 8
            ? f(k, p.children)
            : $ & 16 && j(p.children, k, null, A, T, Ys(p, O), V, R),
          K && Kt(p, null, A, "created"),
          B(k, p, p.scopeId, V, A),
          z)
        ) {
          for (const ce in z)
            ce !== "value" && !yn(ce) && r(k, ce, null, z[ce], O, A);
          "value" in z && r(k, "value", null, z.value, O),
            (C = z.onVnodeBeforeMount) && st(C, A, p);
        }
        K && Kt(p, null, A, "beforeMount");
        const ee = fd(T, U);
        ee && U.beforeEnter(k),
          o(k, _, E),
          ((C = z && z.onVnodeMounted) || ee || K) &&
            Ne(() => {
              C && st(C, A, p),
                ee && U.enter(k),
                K && Kt(p, null, A, "mounted");
            }, T);
      },
      B = (p, _, E, A, T) => {
        if ((E && d(p, E), A)) for (let O = 0; O < A.length; O++) d(p, A[O]);
        if (T) {
          let O = T.subTree;
          if (
            _ === O ||
            (nl(O.type) && (O.ssContent === _ || O.ssFallback === _))
          ) {
            const V = T.vnode;
            B(p, V, V.scopeId, V.slotScopeIds, T.parent);
          }
        }
      },
      j = (p, _, E, A, T, O, V, R, k = 0) => {
        for (let C = k; C < p.length; C++) {
          const z = (p[C] = R ? Ct(p[C]) : ot(p[C]));
          v(null, z, _, E, A, T, O, V, R);
        }
      },
      q = (p, _, E, A, T, O, V) => {
        const R = (_.el = p.el);
        let { patchFlag: k, dynamicChildren: C, dirs: z } = _;
        k |= p.patchFlag & 16;
        const $ = p.props || le,
          U = _.props || le;
        let K;
        if (
          (E && Wt(E, !1),
          (K = U.onVnodeBeforeUpdate) && st(K, E, _, p),
          z && Kt(_, p, E, "beforeUpdate"),
          E && Wt(E, !0),
          (($.innerHTML && U.innerHTML == null) ||
            ($.textContent && U.textContent == null)) &&
            f(R, ""),
          C
            ? I(p.dynamicChildren, C, R, E, A, Ys(_, T), O)
            : V || ne(p, _, R, null, E, A, Ys(_, T), O, !1),
          k > 0)
        ) {
          if (k & 16) N(R, $, U, E, T);
          else if (
            (k & 2 && $.class !== U.class && r(R, "class", null, U.class, T),
            k & 4 && r(R, "style", $.style, U.style, T),
            k & 8)
          ) {
            const ee = _.dynamicProps;
            for (let ce = 0; ce < ee.length; ce++) {
              const se = ee[ce],
                $e = $[se],
                xe = U[se];
              (xe !== $e || se === "value") && r(R, se, $e, xe, T, E);
            }
          }
          k & 1 && p.children !== _.children && f(R, _.children);
        } else !V && C == null && N(R, $, U, E, T);
        ((K = U.onVnodeUpdated) || z) &&
          Ne(() => {
            K && st(K, E, _, p), z && Kt(_, p, E, "updated");
          }, A);
      },
      I = (p, _, E, A, T, O, V) => {
        for (let R = 0; R < _.length; R++) {
          const k = p[R],
            C = _[R],
            z =
              k.el && (k.type === Ie || !Vn(k, C) || k.shapeFlag & 70)
                ? c(k.el)
                : E;
          v(k, C, z, null, A, T, O, V, !0);
        }
      },
      N = (p, _, E, A, T) => {
        if (_ !== E) {
          if (_ !== le)
            for (const O in _) !yn(O) && !(O in E) && r(p, O, _[O], null, T, A);
          for (const O in E) {
            if (yn(O)) continue;
            const V = E[O],
              R = _[O];
            V !== R && O !== "value" && r(p, O, R, V, T, A);
          }
          "value" in E && r(p, "value", _.value, E.value, T);
        }
      },
      M = (p, _, E, A, T, O, V, R, k) => {
        const C = (_.el = p ? p.el : l("")),
          z = (_.anchor = p ? p.anchor : l(""));
        let { patchFlag: $, dynamicChildren: U, slotScopeIds: K } = _;
        K && (R = R ? R.concat(K) : K),
          p == null
            ? (o(C, E, A), o(z, E, A), j(_.children || [], E, z, T, O, V, R, k))
            : $ > 0 && $ & 64 && U && p.dynamicChildren
              ? (I(p.dynamicChildren, U, E, T, O, V, R),
                (_.key != null || (T && _ === T.subTree)) && Xi(p, _, !0))
              : ne(p, _, E, z, T, O, V, R, k);
      },
      H = (p, _, E, A, T, O, V, R, k) => {
        (_.slotScopeIds = R),
          p == null
            ? _.shapeFlag & 512
              ? T.ctx.activate(_, E, A, V, k)
              : Q(_, E, A, T, O, V, k)
            : _e(p, _, k);
      },
      Q = (p, _, E, A, T, O, V) => {
        const R = (p.component = Cd(p, A, T));
        if ((Di(p) && (R.ctx.renderer = ro), Dd(R, !1, V), R.asyncDep)) {
          if ((T && T.registerDep(R, Y, V), !p.el)) {
            const k = (R.subTree = Te(xt));
            g(null, k, _, E);
          }
        } else Y(R, p, _, E, T, O, V);
      },
      _e = (p, _, E) => {
        const A = (_.component = p.component);
        if (Ed(p, _, E))
          if (A.asyncDep && !A.asyncResolved) {
            F(A, _, E);
            return;
          } else (A.next = _), A.update();
        else (_.el = p.el), (A.vnode = _);
      },
      Y = (p, _, E, A, T, O, V) => {
        const R = () => {
          if (p.isMounted) {
            let { next: $, bu: U, u: K, parent: ee, vnode: ce } = p;
            {
              const Me = Zi(p);
              if (Me) {
                $ && (($.el = ce.el), F(p, $, V)),
                  Me.asyncDep.then(() => {
                    p.isUnmounted || R();
                  });
                return;
              }
            }
            let se = $,
              $e;
            Wt(p, !1),
              $ ? (($.el = ce.el), F(p, $, V)) : ($ = ce),
              U && Ts(U),
              ($e = $.props && $.props.onVnodeBeforeUpdate) &&
                st($e, ee, $, ce),
              Wt(p, !0);
            const xe = Js(p),
              Je = p.subTree;
            (p.subTree = xe),
              v(Je, xe, c(Je.el), vs(Je), p, T, O),
              ($.el = xe.el),
              se === null && bd(p, xe.el),
              K && Ne(K, T),
              ($e = $.props && $.props.onVnodeUpdated) &&
                Ne(() => st($e, ee, $, ce), T);
          } else {
            let $;
            const { el: U, props: K } = _,
              { bm: ee, m: ce, parent: se, root: $e, type: xe } = p,
              Je = an(_);
            if (
              (Wt(p, !1),
              ee && Ts(ee),
              !Je && ($ = K && K.onVnodeBeforeMount) && st($, se, _),
              Wt(p, !0),
              U && Ec)
            ) {
              const Me = () => {
                (p.subTree = Js(p)), Ec(U, p.subTree, p, T, null);
              };
              Je && xe.__asyncHydrate ? xe.__asyncHydrate(U, p, Me) : Me();
            } else {
              $e.ce && $e.ce._injectChildStyle(xe);
              const Me = (p.subTree = Js(p));
              v(null, Me, E, A, p, T, O), (_.el = Me.el);
            }
            if ((ce && Ne(ce, T), !Je && ($ = K && K.onVnodeMounted))) {
              const Me = _;
              Ne(() => st($, se, Me), T);
            }
            (_.shapeFlag & 256 ||
              (se && an(se.vnode) && se.vnode.shapeFlag & 256)) &&
              p.a &&
              Ne(p.a, T),
              (p.isMounted = !0),
              (_ = E = A = null);
          }
        };
        p.scope.on();
        const k = (p.effect = new ti(R));
        p.scope.off();
        const C = (p.update = k.run.bind(k)),
          z = (p.job = k.runIfDirty.bind(k));
        (z.i = p), (z.id = p.uid), (k.scheduler = () => Ms(z)), Wt(p, !0), C();
      },
      F = (p, _, E) => {
        _.component = p;
        const A = p.vnode.props;
        (p.vnode = _),
          (p.next = null),
          sd(p, _.props, A, E),
          ad(p, _.children, E),
          ht(),
          Oi(p),
          _t();
      },
      ne = (p, _, E, A, T, O, V, R, k = !1) => {
        const C = p && p.children,
          z = p ? p.shapeFlag : 0,
          $ = _.children,
          { patchFlag: U, shapeFlag: K } = _;
        if (U > 0) {
          if (U & 128) {
            Ze(C, $, E, A, T, O, V, R, k);
            return;
          } else if (U & 256) {
            we(C, $, E, A, T, O, V, R, k);
            return;
          }
        }
        K & 8
          ? (z & 16 && so(C, T, O), $ !== C && f(E, $))
          : z & 16
            ? K & 16
              ? Ze(C, $, E, A, T, O, V, R, k)
              : so(C, T, O, !0)
            : (z & 8 && f(E, ""), K & 16 && j($, E, A, T, O, V, R, k));
      },
      we = (p, _, E, A, T, O, V, R, k) => {
        (p = p || en), (_ = _ || en);
        const C = p.length,
          z = _.length,
          $ = Math.min(C, z);
        let U;
        for (U = 0; U < $; U++) {
          const K = (_[U] = k ? Ct(_[U]) : ot(_[U]));
          v(p[U], K, E, null, T, O, V, R, k);
        }
        C > z ? so(p, T, O, !0, !1, $) : j(_, E, A, T, O, V, R, k, $);
      },
      Ze = (p, _, E, A, T, O, V, R, k) => {
        let C = 0;
        const z = _.length;
        let $ = p.length - 1,
          U = z - 1;
        for (; C <= $ && C <= U; ) {
          const K = p[C],
            ee = (_[C] = k ? Ct(_[C]) : ot(_[C]));
          if (Vn(K, ee)) v(K, ee, E, null, T, O, V, R, k);
          else break;
          C++;
        }
        for (; C <= $ && C <= U; ) {
          const K = p[$],
            ee = (_[U] = k ? Ct(_[U]) : ot(_[U]));
          if (Vn(K, ee)) v(K, ee, E, null, T, O, V, R, k);
          else break;
          $--, U--;
        }
        if (C > $) {
          if (C <= U) {
            const K = U + 1,
              ee = K < z ? _[K].el : A;
            for (; C <= U; )
              v(null, (_[C] = k ? Ct(_[C]) : ot(_[C])), E, ee, T, O, V, R, k),
                C++;
          }
        } else if (C > U) for (; C <= $; ) he(p[C], T, O, !0), C++;
        else {
          const K = C,
            ee = C,
            ce = new Map();
          for (C = ee; C <= U; C++) {
            const Fe = (_[C] = k ? Ct(_[C]) : ot(_[C]));
            Fe.key != null && ce.set(Fe.key, C);
          }
          let se,
            $e = 0;
          const xe = U - ee + 1;
          let Je = !1,
            Me = 0;
          const io = new Array(xe);
          for (C = 0; C < xe; C++) io[C] = 0;
          for (C = K; C <= $; C++) {
            const Fe = p[C];
            if ($e >= xe) {
              he(Fe, T, O, !0);
              continue;
            }
            let dt;
            if (Fe.key != null) dt = ce.get(Fe.key);
            else
              for (se = ee; se <= U; se++)
                if (io[se - ee] === 0 && Vn(Fe, _[se])) {
                  dt = se;
                  break;
                }
            dt === void 0
              ? he(Fe, T, O, !0)
              : ((io[dt - ee] = C + 1),
                dt >= Me ? (Me = dt) : (Je = !0),
                v(Fe, _[dt], E, null, T, O, V, R, k),
                $e++);
          }
          const bc = Je ? dd(io) : en;
          for (se = bc.length - 1, C = xe - 1; C >= 0; C--) {
            const Fe = ee + C,
              dt = _[Fe],
              wc = Fe + 1 < z ? _[Fe + 1].el : A;
            io[C] === 0
              ? v(null, dt, E, wc, T, O, V, R, k)
              : Je && (se < 0 || C !== bc[se] ? Oe(dt, E, wc, 2) : se--);
          }
        }
      },
      Oe = (p, _, E, A, T = null) => {
        const { el: O, type: V, transition: R, children: k, shapeFlag: C } = p;
        if (C & 6) {
          Oe(p.component.subTree, _, E, A);
          return;
        }
        if (C & 128) {
          p.suspense.move(_, E, A);
          return;
        }
        if (C & 64) {
          V.move(p, _, E, ro);
          return;
        }
        if (V === Ie) {
          o(O, _, E);
          for (let $ = 0; $ < k.length; $++) Oe(k[$], _, E, A);
          o(p.anchor, _, E);
          return;
        }
        if (V === Qs) {
          P(p, _, E);
          return;
        }
        if (A !== 2 && C & 1 && R)
          if (A === 0) R.beforeEnter(O), o(O, _, E), Ne(() => R.enter(O), T);
          else {
            const { leave: $, delayLeave: U, afterLeave: K } = R,
              ee = () => o(O, _, E),
              ce = () => {
                $(O, () => {
                  ee(), K && K();
                });
              };
            U ? U(O, ee, ce) : ce();
          }
        else o(O, _, E);
      },
      he = (p, _, E, A = !1, T = !1) => {
        const {
          type: O,
          props: V,
          ref: R,
          children: k,
          dynamicChildren: C,
          shapeFlag: z,
          patchFlag: $,
          dirs: U,
          cacheIndex: K,
        } = p;
        if (
          ($ === -2 && (T = !1),
          R != null && Us(R, null, E, p, !0),
          K != null && (_.renderCache[K] = void 0),
          z & 256)
        ) {
          _.ctx.deactivate(p);
          return;
        }
        const ee = z & 1 && U,
          ce = !an(p);
        let se;
        if ((ce && (se = V && V.onVnodeBeforeUnmount) && st(se, _, p), z & 6))
          oo(p.component, E, A);
        else {
          if (z & 128) {
            p.suspense.unmount(E, A);
            return;
          }
          ee && Kt(p, null, _, "beforeUnmount"),
            z & 64
              ? p.type.remove(p, _, E, ro, A)
              : C && !C.hasOnce && (O !== Ie || ($ > 0 && $ & 64))
                ? so(C, _, E, !1, !0)
                : ((O === Ie && $ & 384) || (!T && z & 16)) && so(k, _, E),
            A && Ut(p);
        }
        ((ce && (se = V && V.onVnodeUnmounted)) || ee) &&
          Ne(() => {
            se && st(se, _, p), ee && Kt(p, null, _, "unmounted");
          }, E);
      },
      Ut = (p) => {
        const { type: _, el: E, anchor: A, transition: T } = p;
        if (_ === Ie) {
          gs(E, A);
          return;
        }
        if (_ === Qs) {
          b(p);
          return;
        }
        const O = () => {
          s(E), T && !T.persisted && T.afterLeave && T.afterLeave();
        };
        if (p.shapeFlag & 1 && T && !T.persisted) {
          const { leave: V, delayLeave: R } = T,
            k = () => V(E, O);
          R ? R(p.el, O, k) : k();
        } else O();
      },
      gs = (p, _) => {
        let E;
        for (; p !== _; ) (E = h(p)), s(p), (p = E);
        s(_);
      },
      oo = (p, _, E) => {
        const { bum: A, scope: T, job: O, subTree: V, um: R, m: k, a: C } = p;
        Ji(k),
          Ji(C),
          A && Ts(A),
          T.stop(),
          O && ((O.flags |= 8), he(V, p, _, E)),
          R && Ne(R, _),
          Ne(() => {
            p.isUnmounted = !0;
          }, _),
          _ &&
            _.pendingBranch &&
            !_.isUnmounted &&
            p.asyncDep &&
            !p.asyncResolved &&
            p.suspenseId === _.pendingId &&
            (_.deps--, _.deps === 0 && _.resolve());
      },
      so = (p, _, E, A = !1, T = !1, O = 0) => {
        for (let V = O; V < p.length; V++) he(p[V], _, E, A, T);
      },
      vs = (p) => {
        if (p.shapeFlag & 6) return vs(p.component.subTree);
        if (p.shapeFlag & 128) return p.suspense.next();
        const _ = h(p.anchor || p.el),
          E = _ && _[kf];
        return E ? h(E) : _;
      };
    let Yr = !1;
    const vc = (p, _, E) => {
        p == null
          ? _._vnode && he(_._vnode, null, null, !0)
          : v(_._vnode || null, p, _, null, null, null, E),
          (_._vnode = p),
          Yr || ((Yr = !0), Oi(), xi(), (Yr = !1));
      },
      ro = {
        p: v,
        um: he,
        m: Oe,
        r: Ut,
        mt: Q,
        mc: j,
        pc: ne,
        pbc: I,
        n: vs,
        o: e,
      };
    let yc, Ec;
    return { render: vc, hydrate: yc, createApp: td(vc, yc) };
  }
  function Ys({ type: e, props: t }, n) {
    return (n === "svg" && e === "foreignObject") ||
      (n === "mathml" &&
        e === "annotation-xml" &&
        t &&
        t.encoding &&
        t.encoding.includes("html"))
      ? void 0
      : n;
  }
  function Wt({ effect: e, job: t }, n) {
    n ? ((e.flags |= 32), (t.flags |= 4)) : ((e.flags &= -33), (t.flags &= -5));
  }
  function fd(e, t) {
    return (!e || (e && !e.pendingBranch)) && t && !t.persisted;
  }
  function Xi(e, t, n = !1) {
    const o = e.children,
      s = t.children;
    if (G(o) && G(s))
      for (let r = 0; r < o.length; r++) {
        const i = o[r];
        let l = s[r];
        l.shapeFlag & 1 &&
          !l.dynamicChildren &&
          ((l.patchFlag <= 0 || l.patchFlag === 32) &&
            ((l = s[r] = Ct(s[r])), (l.el = i.el)),
          !n && l.patchFlag !== -2 && Xi(i, l)),
          l.type === Ro && (l.el = i.el);
      }
  }
  function dd(e) {
    const t = e.slice(),
      n = [0];
    let o, s, r, i, l;
    const a = e.length;
    for (o = 0; o < a; o++) {
      const u = e[o];
      if (u !== 0) {
        if (((s = n[n.length - 1]), e[s] < u)) {
          (t[o] = s), n.push(o);
          continue;
        }
        for (r = 0, i = n.length - 1; r < i; )
          (l = (r + i) >> 1), e[n[l]] < u ? (r = l + 1) : (i = l);
        u < e[n[r]] && (r > 0 && (t[o] = n[r - 1]), (n[r] = o));
      }
    }
    for (r = n.length, i = n[r - 1]; r-- > 0; ) (n[r] = i), (i = t[i]);
    return n;
  }
  function Zi(e) {
    const t = e.subTree.component;
    if (t) return t.asyncDep && !t.asyncResolved ? t : Zi(t);
  }
  function Ji(e) {
    if (e) for (let t = 0; t < e.length; t++) e[t].flags |= 8;
  }
  const pd = Symbol.for("v-scx"),
    hd = () => Io(pd);
  function Xs(e, t) {
    return Zs(e, null, t);
  }
  function nt(e, t, n) {
    return Zs(e, t, n);
  }
  function Zs(e, t, n = le) {
    const { immediate: o, deep: s, flush: r, once: i } = n,
      l = ye({}, n),
      a = (t && o) || (!t && r !== "post");
    let u;
    if ($n) {
      if (r === "sync") {
        const d = hd();
        u = d.__watcherHandles || (d.__watcherHandles = []);
      } else if (!a) {
        const d = () => {};
        return (d.stop = ze), (d.resume = ze), (d.pause = ze), d;
      }
    }
    const f = ve;
    l.call = (d, m, v) => Qe(d, f, m, v);
    let c = !1;
    r === "post"
      ? (l.scheduler = (d) => {
          Ne(d, f && f.suspense);
        })
      : r !== "sync" &&
        ((c = !0),
        (l.scheduler = (d, m) => {
          m ? d() : Ms(d);
        })),
      (l.augmentJob = (d) => {
        t && (d.flags |= 4),
          c && ((d.flags |= 2), f && ((d.id = f.uid), (d.i = f)));
      });
    const h = Ef(e, t, l);
    return $n && (u ? u.push(h) : a && h()), h;
  }
  function _d(e, t, n) {
    const o = this.proxy,
      s = me(e) ? (e.includes(".") ? Qi(o, e) : () => o[e]) : e.bind(o, o);
    let r;
    W(t) ? (r = t) : ((r = t.handler), (n = t));
    const i = Ln(this),
      l = Zs(s, r.bind(o), n);
    return i(), l;
  }
  function Qi(e, t) {
    const n = t.split(".");
    return () => {
      let o = e;
      for (let s = 0; s < n.length && o; s++) o = o[n[s]];
      return o;
    };
  }
  const md = (e, t) =>
    t === "modelValue" || t === "model-value"
      ? e.modelModifiers
      : e[`${t}Modifiers`] || e[`${Ue(t)}Modifiers`] || e[`${wt(t)}Modifiers`];
  function gd(e, t, ...n) {
    if (e.isUnmounted) return;
    const o = e.vnode.props || le;
    let s = n;
    const r = t.startsWith("update:"),
      i = r && md(o, t.slice(7));
    i &&
      (i.trim && (s = n.map((f) => (me(f) ? f.trim() : f))),
      i.number && (s = n.map(Ic)));
    let l,
      a = o[(l = Ss(t))] || o[(l = Ss(Ue(t)))];
    !a && r && (a = o[(l = Ss(wt(t)))]), a && Qe(a, e, 6, s);
    const u = o[l + "Once"];
    if (u) {
      if (!e.emitted) e.emitted = {};
      else if (e.emitted[l]) return;
      (e.emitted[l] = !0), Qe(u, e, 6, s);
    }
  }
  function el(e, t, n = !1) {
    const o = t.emitsCache,
      s = o.get(e);
    if (s !== void 0) return s;
    const r = e.emits;
    let i = {},
      l = !1;
    if (!W(e)) {
      const a = (u) => {
        const f = el(u, t, !0);
        f && ((l = !0), ye(i, f));
      };
      !n && t.mixins.length && t.mixins.forEach(a),
        e.extends && a(e.extends),
        e.mixins && e.mixins.forEach(a);
    }
    return !r && !l
      ? (de(e) && o.set(e, null), null)
      : (G(r) ? r.forEach((a) => (i[a] = null)) : ye(i, r),
        de(e) && o.set(e, i),
        i);
  }
  function ko(e, t) {
    return !e || !lo(t)
      ? !1
      : ((t = t.slice(2).replace(/Once$/, "")),
        oe(e, t[0].toLowerCase() + t.slice(1)) || oe(e, wt(t)) || oe(e, t));
  }
  function Fg() {}
  function Js(e) {
    const {
        type: t,
        vnode: n,
        proxy: o,
        withProxy: s,
        propsOptions: [r],
        slots: i,
        attrs: l,
        emit: a,
        render: u,
        renderCache: f,
        props: c,
        data: h,
        setupState: d,
        ctx: m,
        inheritAttrs: v,
      } = e,
      y = xo(e);
    let g, S;
    try {
      if (n.shapeFlag & 4) {
        const b = s || o,
          D =
            Tt.NODE_ENV !== "production" && d.__isScriptSetup
              ? new Proxy(b, {
                  get(L, B, j) {
                    return (
                      bf(
                        `Property '${String(B)}' was accessed via 'this'. Avoid using 'this' in templates.`,
                      ),
                      Reflect.get(L, B, j)
                    );
                  },
                })
              : b;
        (g = ot(
          u.call(D, b, f, Tt.NODE_ENV !== "production" ? vo(c) : c, d, h, m),
        )),
          (S = l);
      } else {
        const b = t;
        Tt.NODE_ENV,
          (g = ot(
            b.length > 1
              ? b(
                  Tt.NODE_ENV !== "production" ? vo(c) : c,
                  Tt.NODE_ENV !== "production"
                    ? {
                        get attrs() {
                          return vo(l);
                        },
                        slots: i,
                        emit: a,
                      }
                    : { attrs: l, slots: i, emit: a },
                )
              : b(Tt.NODE_ENV !== "production" ? vo(c) : c, null),
          )),
          (S = t.props ? l : vd(l));
      }
    } catch (b) {
      (kn.length = 0), wo(b, e, 1), (g = Te(xt));
    }
    let P = g;
    if (S && v !== !1) {
      const b = Object.keys(S),
        { shapeFlag: D } = P;
      b.length &&
        D & 7 &&
        (r && b.some(Es) && (S = yd(S, r)), (P = fn(P, S, !1, !0)));
    }
    return (
      n.dirs &&
        ((P = fn(P, null, !1, !0)),
        (P.dirs = P.dirs ? P.dirs.concat(n.dirs) : n.dirs)),
      n.transition && Fs(P, n.transition),
      (g = P),
      xo(y),
      g
    );
  }
  const vd = (e) => {
      let t;
      for (const n in e)
        (n === "class" || n === "style" || lo(n)) &&
          ((t || (t = {}))[n] = e[n]);
      return t;
    },
    yd = (e, t) => {
      const n = {};
      for (const o in e) (!Es(o) || !(o.slice(9) in t)) && (n[o] = e[o]);
      return n;
    };
  function Ed(e, t, n) {
    const { props: o, children: s, component: r } = e,
      { props: i, children: l, patchFlag: a } = t,
      u = r.emitsOptions;
    if (t.dirs || t.transition) return !0;
    if (n && a >= 0) {
      if (a & 1024) return !0;
      if (a & 16) return o ? tl(o, i, u) : !!i;
      if (a & 8) {
        const f = t.dynamicProps;
        for (let c = 0; c < f.length; c++) {
          const h = f[c];
          if (i[h] !== o[h] && !ko(u, h)) return !0;
        }
      }
    } else
      return (s || l) && (!l || !l.$stable)
        ? !0
        : o === i
          ? !1
          : o
            ? i
              ? tl(o, i, u)
              : !0
            : !!i;
    return !1;
  }
  function tl(e, t, n) {
    const o = Object.keys(t);
    if (o.length !== Object.keys(e).length) return !0;
    for (let s = 0; s < o.length; s++) {
      const r = o[s];
      if (t[r] !== e[r] && !ko(n, r)) return !0;
    }
    return !1;
  }
  function bd({ vnode: e, parent: t }, n) {
    for (; t; ) {
      const o = t.subTree;
      if (
        (o.suspense && o.suspense.activeBranch === e && (o.el = e.el), o === e)
      )
        ((e = t.vnode).el = n), (t = t.parent);
      else break;
    }
  }
  const nl = (e) => e.__isSuspense;
  function wd(e, t) {
    t && t.pendingBranch
      ? G(e)
        ? t.effects.push(...e)
        : t.effects.push(e)
      : Cf(e);
  }
  const Ie = Symbol.for("v-fgt"),
    Ro = Symbol.for("v-txt"),
    xt = Symbol.for("v-cmt"),
    Qs = Symbol.for("v-stc"),
    kn = [];
  let Ve = null;
  function ke(e = !1) {
    kn.push((Ve = e ? null : []));
  }
  function Sd() {
    kn.pop(), (Ve = kn[kn.length - 1] || null);
  }
  let Rn = 1;
  function ol(e) {
    (Rn += e), e < 0 && Ve && (Ve.hasOnce = !0);
  }
  function sl(e) {
    return (
      (e.dynamicChildren = Rn > 0 ? Ve || en : null),
      Sd(),
      Rn > 0 && Ve && Ve.push(e),
      e
    );
  }
  function At(e, t, n, o, s, r) {
    return sl(re(e, t, n, o, s, r, !0));
  }
  function cn(e, t, n, o, s) {
    return sl(Te(e, t, n, o, s, !0));
  }
  function Nn(e) {
    return e ? e.__v_isVNode === !0 : !1;
  }
  function Vn(e, t) {
    return e.type === t.type && e.key === t.key;
  }
  const rl = ({ key: e }) => e ?? null,
    No = ({ ref: e, ref_key: t, ref_for: n }) => (
      typeof e == "number" && (e = "" + e),
      e != null
        ? me(e) || ge(e) || W(e)
          ? { i: Ee, r: e, k: t, f: !!n }
          : e
        : null
    );
  function re(
    e,
    t = null,
    n = null,
    o = 0,
    s = null,
    r = e === Ie ? 0 : 1,
    i = !1,
    l = !1,
  ) {
    const a = {
      __v_isVNode: !0,
      __v_skip: !0,
      type: e,
      props: t,
      key: t && rl(t),
      ref: t && No(t),
      scopeId: Oo,
      slotScopeIds: null,
      children: n,
      component: null,
      suspense: null,
      ssContent: null,
      ssFallback: null,
      dirs: null,
      transition: null,
      el: null,
      anchor: null,
      target: null,
      targetStart: null,
      targetAnchor: null,
      staticCount: 0,
      shapeFlag: r,
      patchFlag: o,
      dynamicProps: s,
      dynamicChildren: null,
      appContext: null,
      ctx: Ee,
    };
    return (
      l
        ? (er(a, n), r & 128 && e.normalize(a))
        : n && (a.shapeFlag |= me(n) ? 8 : 16),
      Rn > 0 &&
        !i &&
        Ve &&
        (a.patchFlag > 0 || r & 6) &&
        a.patchFlag !== 32 &&
        Ve.push(a),
      a
    );
  }
  const Te = Td;
  function Td(e, t = null, n = null, o = 0, s = null, r = !1) {
    if (((!e || e === Wf) && (e = xt), Nn(e))) {
      const l = fn(e, t, !0);
      return (
        n && er(l, n),
        Rn > 0 &&
          !r &&
          Ve &&
          (l.shapeFlag & 6 ? (Ve[Ve.indexOf(e)] = l) : Ve.push(l)),
        (l.patchFlag = -2),
        l
      );
    }
    if ((Vd(e) && (e = e.__vccOpts), t)) {
      t = il(t);
      let { class: l, style: a } = t;
      l && !me(l) && (t.class = pt(l)),
        de(a) && (Vs(a) && !G(a) && (a = ye({}, a)), (t.style = Re(a)));
    }
    const i = me(e) ? 1 : nl(e) ? 128 : Rf(e) ? 64 : de(e) ? 4 : W(e) ? 2 : 0;
    return re(e, t, n, o, s, i, r, !0);
  }
  function il(e) {
    return e ? (Vs(e) || Hi(e) ? ye({}, e) : e) : null;
  }
  function fn(e, t, n = !1, o = !1) {
    const { props: s, ref: r, patchFlag: i, children: l, transition: a } = e,
      u = t ? ll(s || {}, t) : s,
      f = {
        __v_isVNode: !0,
        __v_skip: !0,
        type: e.type,
        props: u,
        key: u && rl(u),
        ref:
          t && t.ref
            ? n && r
              ? G(r)
                ? r.concat(No(t))
                : [r, No(t)]
              : No(t)
            : r,
        scopeId: e.scopeId,
        slotScopeIds: e.slotScopeIds,
        children: l,
        target: e.target,
        targetStart: e.targetStart,
        targetAnchor: e.targetAnchor,
        staticCount: e.staticCount,
        shapeFlag: e.shapeFlag,
        patchFlag: t && e.type !== Ie ? (i === -1 ? 16 : i | 16) : i,
        dynamicProps: e.dynamicProps,
        dynamicChildren: e.dynamicChildren,
        appContext: e.appContext,
        dirs: e.dirs,
        transition: a,
        component: e.component,
        suspense: e.suspense,
        ssContent: e.ssContent && fn(e.ssContent),
        ssFallback: e.ssFallback && fn(e.ssFallback),
        el: e.el,
        anchor: e.anchor,
        ctx: e.ctx,
        ce: e.ce,
      };
    return a && o && Fs(f, a.clone(f)), f;
  }
  function Od(e = " ", t = 0) {
    return Te(Ro, null, e, t);
  }
  function Vo(e = "", t = !1) {
    return t ? (ke(), cn(xt, null, e)) : Te(xt, null, e);
  }
  function ot(e) {
    return e == null || typeof e == "boolean"
      ? Te(xt)
      : G(e)
        ? Te(Ie, null, e.slice())
        : Nn(e)
          ? Ct(e)
          : Te(Ro, null, String(e));
  }
  function Ct(e) {
    return (e.el === null && e.patchFlag !== -1) || e.memo ? e : fn(e);
  }
  function er(e, t) {
    let n = 0;
    const { shapeFlag: o } = e;
    if (t == null) t = null;
    else if (G(t)) n = 16;
    else if (typeof t == "object")
      if (o & 65) {
        const s = t.default;
        s && (s._c && (s._d = !1), er(e, s()), s._c && (s._d = !0));
        return;
      } else {
        n = 32;
        const s = t._;
        !s && !Hi(t)
          ? (t._ctx = Ee)
          : s === 3 &&
            Ee &&
            (Ee.slots._ === 1 ? (t._ = 1) : ((t._ = 2), (e.patchFlag |= 1024)));
      }
    else
      W(t)
        ? ((t = { default: t, _ctx: Ee }), (n = 32))
        : ((t = String(t)), o & 64 ? ((n = 16), (t = [Od(t)])) : (n = 8));
    (e.children = t), (e.shapeFlag |= n);
  }
  function ll(...e) {
    const t = {};
    for (let n = 0; n < e.length; n++) {
      const o = e[n];
      for (const s in o)
        if (s === "class")
          t.class !== o.class && (t.class = pt([t.class, o.class]));
        else if (s === "style") t.style = Re([t.style, o.style]);
        else if (lo(s)) {
          const r = t[s],
            i = o[s];
          i &&
            r !== i &&
            !(G(r) && r.includes(i)) &&
            (t[s] = r ? [].concat(r, i) : i);
        } else s !== "" && (t[s] = o[s]);
    }
    return t;
  }
  function st(e, t, n, o = null) {
    Qe(e, t, 7, [n, o]);
  }
  const xd = Fi();
  let Ad = 0;
  function Cd(e, t, n) {
    const o = e.type,
      s = (t ? t.appContext : e.appContext) || xd,
      r = {
        uid: Ad++,
        vnode: e,
        type: o,
        parent: t,
        appContext: s,
        root: null,
        next: null,
        subTree: null,
        effect: null,
        update: null,
        job: null,
        scope: new Fc(!0),
        render: null,
        proxy: null,
        exposed: null,
        exposeProxy: null,
        withProxy: null,
        provides: t ? t.provides : Object.create(s.provides),
        ids: t ? t.ids : ["", 0, 0],
        accessCache: null,
        renderCache: [],
        components: null,
        directives: null,
        propsOptions: ji(o, s),
        emitsOptions: el(o, s),
        emit: null,
        emitted: null,
        propsDefaults: le,
        inheritAttrs: o.inheritAttrs,
        ctx: le,
        data: le,
        props: le,
        attrs: le,
        slots: le,
        refs: le,
        setupState: le,
        setupContext: null,
        suspense: n,
        suspenseId: n ? n.pendingId : 0,
        asyncDep: null,
        asyncResolved: !1,
        isMounted: !1,
        isUnmounted: !1,
        isDeactivated: !1,
        bc: null,
        c: null,
        bm: null,
        m: null,
        bu: null,
        u: null,
        um: null,
        bum: null,
        da: null,
        a: null,
        rtg: null,
        rtc: null,
        ec: null,
        sp: null,
      };
    return (
      (r.ctx = { _: r }),
      (r.root = t ? t.root : r),
      (r.emit = gd.bind(null, r)),
      e.ce && e.ce(r),
      r
    );
  }
  let ve = null;
  const al = () => ve || Ee;
  let Lo, tr;
  {
    const e = fo(),
      t = (n, o) => {
        let s;
        return (
          (s = e[n]) || (s = e[n] = []),
          s.push(o),
          (r) => {
            s.length > 1 ? s.forEach((i) => i(r)) : s[0](r);
          }
        );
      };
    (Lo = t("__VUE_INSTANCE_SETTERS__", (n) => (ve = n))),
      (tr = t("__VUE_SSR_SETTERS__", (n) => ($n = n)));
  }
  const Ln = (e) => {
      const t = ve;
      return (
        Lo(e),
        e.scope.on(),
        () => {
          e.scope.off(), Lo(t);
        }
      );
    },
    ul = () => {
      ve && ve.scope.off(), Lo(null);
    };
  function cl(e) {
    return e.vnode.shapeFlag & 4;
  }
  let $n = !1;
  function Dd(e, t = !1, n = !1) {
    t && tr(t);
    const { props: o, children: s } = e.vnode,
      r = cl(e);
    od(e, o, r, t), ld(e, s, n);
    const i = r ? Pd(e, t) : void 0;
    return t && tr(!1), i;
  }
  function Pd(e, t) {
    const n = e.type;
    (e.accessCache = Object.create(null)), (e.proxy = new Proxy(e.ctx, qf));
    const { setup: o } = n;
    if (o) {
      ht();
      const s = (e.setupContext = o.length > 1 ? kd(e) : null),
        r = Ln(e),
        i = on(o, e, 0, [e.props, s]),
        l = Xr(i);
      if ((_t(), r(), (l || e.sp) && !an(e) && Ci(e), l)) {
        if ((i.then(ul, ul), t))
          return i
            .then((a) => {
              fl(e, a, t);
            })
            .catch((a) => {
              wo(a, e, 0);
            });
        e.asyncDep = i;
      } else fl(e, i, t);
    } else pl(e, t);
  }
  function fl(e, t, n) {
    W(t)
      ? e.type.__ssrInlineRender
        ? (e.ssrRender = t)
        : (e.render = t)
      : de(t) && (e.setupState = bi(t)),
      pl(e, n);
  }
  let dl;
  function pl(e, t, n) {
    const o = e.type;
    if (!e.render) {
      if (!t && dl && !o.render) {
        const s = o.template || Ks(e).template;
        if (s) {
          const { isCustomElement: r, compilerOptions: i } =
              e.appContext.config,
            { delimiters: l, compilerOptions: a } = o,
            u = ye(ye({ isCustomElement: r, delimiters: l }, i), a);
          o.render = dl(s, u);
        }
      }
      e.render = o.render || ze;
    }
    {
      const s = Ln(e);
      ht();
      try {
        Yf(e);
      } finally {
        _t(), s();
      }
    }
  }
  const Id = {
    get(e, t) {
      return Se(e, "get", ""), e[t];
    },
  };
  function kd(e) {
    const t = (n) => {
      e.exposed = n || {};
    };
    return {
      attrs: new Proxy(e.attrs, Id),
      slots: e.slots,
      emit: e.emit,
      expose: t,
    };
  }
  function $o(e) {
    return e.exposed
      ? e.exposeProxy ||
          (e.exposeProxy = new Proxy(bi(af(e.exposed)), {
            get(t, n) {
              if (n in t) return t[n];
              if (n in Pn) return Pn[n](e);
            },
            has(t, n) {
              return n in t || n in Pn;
            },
          }))
      : e.proxy;
  }
  const Rd = /(?:^|[-_])(\w)/g,
    Nd = (e) => e.replace(Rd, (t) => t.toUpperCase()).replace(/[-_]/g, "");
  function hl(e, t = !0) {
    return W(e) ? e.displayName || e.name : e.name || (t && e.__name);
  }
  function _l(e, t, n = !1) {
    let o = hl(t);
    if (!o && t.__file) {
      const s = t.__file.match(/([^/\\]+)\.\w+$/);
      s && (o = s[1]);
    }
    if (!o && e && e.parent) {
      const s = (r) => {
        for (const i in r) if (r[i] === t) return i;
      };
      o =
        s(e.components || e.parent.type.components) ||
        s(e.appContext.components);
    }
    return o ? Nd(o) : n ? "App" : "Anonymous";
  }
  function Vd(e) {
    return W(e) && "__vccOpts" in e;
  }
  const be = (e, t) => vf(e, t, $n);
  function Ld(e, t, n) {
    const o = arguments.length;
    return o === 2
      ? de(t) && !G(t)
        ? Nn(t)
          ? Te(e, null, [t])
          : Te(e, t)
        : Te(e, null, t)
      : (o > 3
          ? (n = Array.prototype.slice.call(arguments, 2))
          : o === 3 && Nn(n) && (n = [n]),
        Te(e, t, n));
  }
  const $d = "3.5.12";
  let nr;
  const ml = typeof window < "u" && window.trustedTypes;
  if (ml)
    try {
      nr = ml.createPolicy("vue", { createHTML: (e) => e });
    } catch {}
  const gl = nr ? (e) => nr.createHTML(e) : (e) => e,
    Md = "http://www.w3.org/2000/svg",
    Fd = "http://www.w3.org/1998/Math/MathML",
    Et = typeof document < "u" ? document : null,
    vl = Et && Et.createElement("template"),
    Ud = {
      insert: (e, t, n) => {
        t.insertBefore(e, n || null);
      },
      remove: (e) => {
        const t = e.parentNode;
        t && t.removeChild(e);
      },
      createElement: (e, t, n, o) => {
        const s =
          t === "svg"
            ? Et.createElementNS(Md, e)
            : t === "mathml"
              ? Et.createElementNS(Fd, e)
              : n
                ? Et.createElement(e, { is: n })
                : Et.createElement(e);
        return (
          e === "select" &&
            o &&
            o.multiple != null &&
            s.setAttribute("multiple", o.multiple),
          s
        );
      },
      createText: (e) => Et.createTextNode(e),
      createComment: (e) => Et.createComment(e),
      setText: (e, t) => {
        e.nodeValue = t;
      },
      setElementText: (e, t) => {
        e.textContent = t;
      },
      parentNode: (e) => e.parentNode,
      nextSibling: (e) => e.nextSibling,
      querySelector: (e) => Et.querySelector(e),
      setScopeId(e, t) {
        e.setAttribute(t, "");
      },
      insertStaticContent(e, t, n, o, s, r) {
        const i = n ? n.previousSibling : t.lastChild;
        if (s && (s === r || s.nextSibling))
          for (
            ;
            t.insertBefore(s.cloneNode(!0), n),
              !(s === r || !(s = s.nextSibling));

          );
        else {
          vl.innerHTML = gl(
            o === "svg"
              ? `<svg>${e}</svg>`
              : o === "mathml"
                ? `<math>${e}</math>`
                : e,
          );
          const l = vl.content;
          if (o === "svg" || o === "mathml") {
            const a = l.firstChild;
            for (; a.firstChild; ) l.appendChild(a.firstChild);
            l.removeChild(a);
          }
          t.insertBefore(l, n);
        }
        return [
          i ? i.nextSibling : t.firstChild,
          n ? n.previousSibling : t.lastChild,
        ];
      },
    },
    Bd = Symbol("_vtc");
  function Hd(e, t, n) {
    const o = e[Bd];
    o && (t = (t ? [t, ...o] : [...o]).join(" ")),
      t == null
        ? e.removeAttribute("class")
        : n
          ? e.setAttribute("class", t)
          : (e.className = t);
  }
  const Mo = Symbol("_vod"),
    yl = Symbol("_vsh"),
    rt = {
      beforeMount(e, { value: t }, { transition: n }) {
        (e[Mo] = e.style.display === "none" ? "" : e.style.display),
          n && t ? n.beforeEnter(e) : Mn(e, t);
      },
      mounted(e, { value: t }, { transition: n }) {
        n && t && n.enter(e);
      },
      updated(e, { value: t, oldValue: n }, { transition: o }) {
        !t != !n &&
          (o
            ? t
              ? (o.beforeEnter(e), Mn(e, !0), o.enter(e))
              : o.leave(e, () => {
                  Mn(e, !1);
                })
            : Mn(e, t));
      },
      beforeUnmount(e, { value: t }) {
        Mn(e, t);
      },
    };
  function Mn(e, t) {
    (e.style.display = t ? e[Mo] : "none"), (e[yl] = !t);
  }
  const zd = Symbol(""),
    jd = /(^|;)\s*display\s*:/;
  function Kd(e, t, n) {
    const o = e.style,
      s = me(n);
    let r = !1;
    if (n && !s) {
      if (t)
        if (me(t))
          for (const i of t.split(";")) {
            const l = i.slice(0, i.indexOf(":")).trim();
            n[l] == null && Fo(o, l, "");
          }
        else for (const i in t) n[i] == null && Fo(o, i, "");
      for (const i in n) i === "display" && (r = !0), Fo(o, i, n[i]);
    } else if (s) {
      if (t !== n) {
        const i = o[zd];
        i && (n += ";" + i), (o.cssText = n), (r = jd.test(n));
      }
    } else t && e.removeAttribute("style");
    Mo in e && ((e[Mo] = r ? o.display : ""), e[yl] && (o.display = "none"));
  }
  const El = /\s*!important$/;
  function Fo(e, t, n) {
    if (G(n)) n.forEach((o) => Fo(e, t, o));
    else if ((n == null && (n = ""), t.startsWith("--"))) e.setProperty(t, n);
    else {
      const o = Wd(e, t);
      El.test(n)
        ? e.setProperty(wt(o), n.replace(El, ""), "important")
        : (e[o] = n);
    }
  }
  const bl = ["Webkit", "Moz", "ms"],
    or = {};
  function Wd(e, t) {
    const n = or[t];
    if (n) return n;
    let o = Ue(t);
    if (o !== "filter" && o in e) return (or[t] = o);
    o = co(o);
    for (let s = 0; s < bl.length; s++) {
      const r = bl[s] + o;
      if (r in e) return (or[t] = r);
    }
    return t;
  }
  const wl = "http://www.w3.org/1999/xlink";
  function Sl(e, t, n, o, s, r = $c(t)) {
    o && t.startsWith("xlink:")
      ? n == null
        ? e.removeAttributeNS(wl, t.slice(6, t.length))
        : e.setAttributeNS(wl, t, n)
      : n == null || (r && !Qr(n))
        ? e.removeAttribute(t)
        : e.setAttribute(t, r ? "" : Bt(n) ? String(n) : n);
  }
  function Tl(e, t, n, o, s) {
    if (t === "innerHTML" || t === "textContent") {
      n != null && (e[t] = t === "innerHTML" ? gl(n) : n);
      return;
    }
    const r = e.tagName;
    if (t === "value" && r !== "PROGRESS" && !r.includes("-")) {
      const l = r === "OPTION" ? e.getAttribute("value") || "" : e.value,
        a = n == null ? (e.type === "checkbox" ? "on" : "") : String(n);
      (l !== a || !("_value" in e)) && (e.value = a),
        n == null && e.removeAttribute(t),
        (e._value = n);
      return;
    }
    let i = !1;
    if (n === "" || n == null) {
      const l = typeof e[t];
      l === "boolean"
        ? (n = Qr(n))
        : n == null && l === "string"
          ? ((n = ""), (i = !0))
          : l === "number" && ((n = 0), (i = !0));
    }
    try {
      e[t] = n;
    } catch {}
    i && e.removeAttribute(s || t);
  }
  function Gd(e, t, n, o) {
    e.addEventListener(t, n, o);
  }
  function qd(e, t, n, o) {
    e.removeEventListener(t, n, o);
  }
  const Ol = Symbol("_vei");
  function Yd(e, t, n, o, s = null) {
    const r = e[Ol] || (e[Ol] = {}),
      i = r[t];
    if (o && i) i.value = o;
    else {
      const [l, a] = Xd(t);
      if (o) {
        const u = (r[t] = Qd(o, s));
        Gd(e, l, u, a);
      } else i && (qd(e, l, i, a), (r[t] = void 0));
    }
  }
  const xl = /(?:Once|Passive|Capture)$/;
  function Xd(e) {
    let t;
    if (xl.test(e)) {
      t = {};
      let o;
      for (; (o = e.match(xl)); )
        (e = e.slice(0, e.length - o[0].length)), (t[o[0].toLowerCase()] = !0);
    }
    return [e[2] === ":" ? e.slice(3) : wt(e.slice(2)), t];
  }
  let sr = 0;
  const Zd = Promise.resolve(),
    Jd = () => sr || (Zd.then(() => (sr = 0)), (sr = Date.now()));
  function Qd(e, t) {
    const n = (o) => {
      if (!o._vts) o._vts = Date.now();
      else if (o._vts <= n.attached) return;
      Qe(ep(o, n.value), t, 5, [o]);
    };
    return (n.value = e), (n.attached = Jd()), n;
  }
  function ep(e, t) {
    if (G(t)) {
      const n = e.stopImmediatePropagation;
      return (
        (e.stopImmediatePropagation = () => {
          n.call(e), (e._stopped = !0);
        }),
        t.map((o) => (s) => !s._stopped && o && o(s))
      );
    } else return t;
  }
  const Al = (e) =>
      e.charCodeAt(0) === 111 &&
      e.charCodeAt(1) === 110 &&
      e.charCodeAt(2) > 96 &&
      e.charCodeAt(2) < 123,
    tp = (e, t, n, o, s, r) => {
      const i = s === "svg";
      t === "class"
        ? Hd(e, o, i)
        : t === "style"
          ? Kd(e, n, o)
          : lo(t)
            ? Es(t) || Yd(e, t, n, o, r)
            : (
                  t[0] === "."
                    ? ((t = t.slice(1)), !0)
                    : t[0] === "^"
                      ? ((t = t.slice(1)), !1)
                      : np(e, t, o, i)
                )
              ? (Tl(e, t, o),
                !e.tagName.includes("-") &&
                  (t === "value" || t === "checked" || t === "selected") &&
                  Sl(e, t, o, i, r, t !== "value"))
              : e._isVueCE && (/[A-Z]/.test(t) || !me(o))
                ? Tl(e, Ue(t), o, r, t)
                : (t === "true-value"
                    ? (e._trueValue = o)
                    : t === "false-value" && (e._falseValue = o),
                  Sl(e, t, o, i));
    };
  function np(e, t, n, o) {
    if (o)
      return !!(
        t === "innerHTML" ||
        t === "textContent" ||
        (t in e && Al(t) && W(n))
      );
    if (
      t === "spellcheck" ||
      t === "draggable" ||
      t === "translate" ||
      t === "form" ||
      (t === "list" && e.tagName === "INPUT") ||
      (t === "type" && e.tagName === "TEXTAREA")
    )
      return !1;
    if (t === "width" || t === "height") {
      const s = e.tagName;
      if (s === "IMG" || s === "VIDEO" || s === "CANVAS" || s === "SOURCE")
        return !1;
    }
    return Al(t) && me(n) ? !1 : t in e;
  }
  const op = ["ctrl", "shift", "alt", "meta"],
    sp = {
      stop: (e) => e.stopPropagation(),
      prevent: (e) => e.preventDefault(),
      self: (e) => e.target !== e.currentTarget,
      ctrl: (e) => !e.ctrlKey,
      shift: (e) => !e.shiftKey,
      alt: (e) => !e.altKey,
      meta: (e) => !e.metaKey,
      left: (e) => "button" in e && e.button !== 0,
      middle: (e) => "button" in e && e.button !== 1,
      right: (e) => "button" in e && e.button !== 2,
      exact: (e, t) => op.some((n) => e[`${n}Key`] && !t.includes(n)),
    },
    Dt = (e, t) => {
      const n = e._withMods || (e._withMods = {}),
        o = t.join(".");
      return (
        n[o] ||
        (n[o] = (s, ...r) => {
          for (let i = 0; i < t.length; i++) {
            const l = sp[t[i]];
            if (l && l(s, t)) return;
          }
          return e(s, ...r);
        })
      );
    },
    rp = {
      esc: "escape",
      space: " ",
      up: "arrow-up",
      left: "arrow-left",
      right: "arrow-right",
      down: "arrow-down",
      delete: "backspace",
    },
    ip = (e, t) => {
      const n = e._withKeys || (e._withKeys = {}),
        o = t.join(".");
      return (
        n[o] ||
        (n[o] = (s) => {
          if (!("key" in s)) return;
          const r = wt(s.key);
          if (t.some((i) => i === r || rp[i] === r)) return e(s);
        })
      );
    },
    lp = ye({ patchProp: tp }, Ud);
  let Cl;
  function ap() {
    return Cl || (Cl = ud(lp));
  }
  const up = (...e) => {
    const t = ap().createApp(...e),
      { mount: n } = t;
    return (
      (t.mount = (o) => {
        const s = fp(o);
        if (!s) return;
        const r = t._component;
        !W(r) && !r.render && !r.template && (r.template = s.innerHTML),
          s.nodeType === 1 && (s.textContent = "");
        const i = n(s, !1, cp(s));
        return (
          s instanceof Element &&
            (s.removeAttribute("v-cloak"), s.setAttribute("data-v-app", "")),
          i
        );
      }),
      t
    );
  };
  function cp(e) {
    if (e instanceof SVGElement) return "svg";
    if (typeof MathMLElement == "function" && e instanceof MathMLElement)
      return "mathml";
  }
  function fp(e) {
    return me(e) ? document.querySelector(e) : e;
  }
  var dp = Object.create,
    Dl = Object.defineProperty,
    pp = Object.getOwnPropertyDescriptor,
    rr = Object.getOwnPropertyNames,
    hp = Object.getPrototypeOf,
    _p = Object.prototype.hasOwnProperty,
    mp = (e, t) =>
      function () {
        return e && (t = (0, e[rr(e)[0]])((e = 0))), t;
      },
    gp = (e, t) =>
      function () {
        return (
          t || (0, e[rr(e)[0]])((t = { exports: {} }).exports, t), t.exports
        );
      },
    vp = (e, t, n, o) => {
      if ((t && typeof t == "object") || typeof t == "function")
        for (let s of rr(t))
          !_p.call(e, s) &&
            s !== n &&
            Dl(e, s, {
              get: () => t[s],
              enumerable: !(o = pp(t, s)) || o.enumerable,
            });
      return e;
    },
    yp = (e, t, n) => (
      (n = e != null ? dp(hp(e)) : {}),
      vp(Dl(n, "default", { value: e, enumerable: !0 }), e)
    ),
    Fn = mp({
      "../../node_modules/.pnpm/tsup@8.3.5_@microsoft+api-extractor@7.43.0_@types+node@22.9.0__@swc+core@1.5.29_jiti@2.0.0_po_lnt5yfvawfblpk67opvcdwbq7u/node_modules/tsup/assets/esm_shims.js"() {},
    }),
    Ep = gp({
      "../../node_modules/.pnpm/rfdc@1.4.1/node_modules/rfdc/index.js"(e, t) {
        Fn(), (t.exports = o);
        function n(r) {
          return r instanceof Buffer
            ? Buffer.from(r)
            : new r.constructor(r.buffer.slice(), r.byteOffset, r.length);
        }
        function o(r) {
          if (((r = r || {}), r.circles)) return s(r);
          const i = new Map();
          if (
            (i.set(Date, (c) => new Date(c)),
            i.set(Map, (c, h) => new Map(a(Array.from(c), h))),
            i.set(Set, (c, h) => new Set(a(Array.from(c), h))),
            r.constructorHandlers)
          )
            for (const c of r.constructorHandlers) i.set(c[0], c[1]);
          let l = null;
          return r.proto ? f : u;
          function a(c, h) {
            const d = Object.keys(c),
              m = new Array(d.length);
            for (let v = 0; v < d.length; v++) {
              const y = d[v],
                g = c[y];
              typeof g != "object" || g === null
                ? (m[y] = g)
                : g.constructor !== Object && (l = i.get(g.constructor))
                  ? (m[y] = l(g, h))
                  : ArrayBuffer.isView(g)
                    ? (m[y] = n(g))
                    : (m[y] = h(g));
            }
            return m;
          }
          function u(c) {
            if (typeof c != "object" || c === null) return c;
            if (Array.isArray(c)) return a(c, u);
            if (c.constructor !== Object && (l = i.get(c.constructor)))
              return l(c, u);
            const h = {};
            for (const d in c) {
              if (Object.hasOwnProperty.call(c, d) === !1) continue;
              const m = c[d];
              typeof m != "object" || m === null
                ? (h[d] = m)
                : m.constructor !== Object && (l = i.get(m.constructor))
                  ? (h[d] = l(m, u))
                  : ArrayBuffer.isView(m)
                    ? (h[d] = n(m))
                    : (h[d] = u(m));
            }
            return h;
          }
          function f(c) {
            if (typeof c != "object" || c === null) return c;
            if (Array.isArray(c)) return a(c, f);
            if (c.constructor !== Object && (l = i.get(c.constructor)))
              return l(c, f);
            const h = {};
            for (const d in c) {
              const m = c[d];
              typeof m != "object" || m === null
                ? (h[d] = m)
                : m.constructor !== Object && (l = i.get(m.constructor))
                  ? (h[d] = l(m, f))
                  : ArrayBuffer.isView(m)
                    ? (h[d] = n(m))
                    : (h[d] = f(m));
            }
            return h;
          }
        }
        function s(r) {
          const i = [],
            l = [],
            a = new Map();
          if (
            (a.set(Date, (d) => new Date(d)),
            a.set(Map, (d, m) => new Map(f(Array.from(d), m))),
            a.set(Set, (d, m) => new Set(f(Array.from(d), m))),
            r.constructorHandlers)
          )
            for (const d of r.constructorHandlers) a.set(d[0], d[1]);
          let u = null;
          return r.proto ? h : c;
          function f(d, m) {
            const v = Object.keys(d),
              y = new Array(v.length);
            for (let g = 0; g < v.length; g++) {
              const S = v[g],
                P = d[S];
              if (typeof P != "object" || P === null) y[S] = P;
              else if (P.constructor !== Object && (u = a.get(P.constructor)))
                y[S] = u(P, m);
              else if (ArrayBuffer.isView(P)) y[S] = n(P);
              else {
                const b = i.indexOf(P);
                b !== -1 ? (y[S] = l[b]) : (y[S] = m(P));
              }
            }
            return y;
          }
          function c(d) {
            if (typeof d != "object" || d === null) return d;
            if (Array.isArray(d)) return f(d, c);
            if (d.constructor !== Object && (u = a.get(d.constructor)))
              return u(d, c);
            const m = {};
            i.push(d), l.push(m);
            for (const v in d) {
              if (Object.hasOwnProperty.call(d, v) === !1) continue;
              const y = d[v];
              if (typeof y != "object" || y === null) m[v] = y;
              else if (y.constructor !== Object && (u = a.get(y.constructor)))
                m[v] = u(y, c);
              else if (ArrayBuffer.isView(y)) m[v] = n(y);
              else {
                const g = i.indexOf(y);
                g !== -1 ? (m[v] = l[g]) : (m[v] = c(y));
              }
            }
            return i.pop(), l.pop(), m;
          }
          function h(d) {
            if (typeof d != "object" || d === null) return d;
            if (Array.isArray(d)) return f(d, h);
            if (d.constructor !== Object && (u = a.get(d.constructor)))
              return u(d, h);
            const m = {};
            i.push(d), l.push(m);
            for (const v in d) {
              const y = d[v];
              if (typeof y != "object" || y === null) m[v] = y;
              else if (y.constructor !== Object && (u = a.get(y.constructor)))
                m[v] = u(y, h);
              else if (ArrayBuffer.isView(y)) m[v] = n(y);
              else {
                const g = i.indexOf(y);
                g !== -1 ? (m[v] = l[g]) : (m[v] = h(y));
              }
            }
            return i.pop(), l.pop(), m;
          }
        }
      },
    });
  Fn(), Fn(), Fn();
  var Uo = typeof navigator < "u",
    x =
      typeof window < "u"
        ? window
        : typeof globalThis < "u"
          ? globalThis
          : typeof global < "u"
            ? global
            : {};
  typeof x.chrome < "u" && x.chrome.devtools, Uo && (x.self, x.top);
  var Pl;
  typeof navigator < "u" &&
    ((Pl = navigator.userAgent) == null ||
      Pl.toLowerCase().includes("electron"));
  var bp = typeof window < "u" && !!window.__NUXT__;
  Fn();
  var wp = yp(Ep()),
    Sp = /(?:^|[-_/])(\w)/g,
    Tp = /-(\w)/g,
    Op = /([a-z0-9])([A-Z])/g;
  function Il(e, t) {
    return t ? t.toUpperCase() : "";
  }
  function kl(e) {
    return e && `${e}`.replace(Sp, Il);
  }
  function xp(e) {
    return e && e.replace(Tp, Il);
  }
  function Ap(e) {
    return e && e.replace(Op, (t, n, o) => `${n}-${o}`).toLowerCase();
  }
  function Cp(e, t) {
    let n = e.replace(/^[a-z]:/i, "").replace(/\\/g, "/");
    n.endsWith(`index${t}`) && (n = n.replace(`/index${t}`, t));
    const o = n.lastIndexOf("/"),
      s = n.substring(o + 1);
    {
      const r = s.lastIndexOf(t);
      return s.substring(0, r);
    }
  }
  var Rl = (0, wp.default)({ circles: !0 });
  const Dp = { trailing: !0 };
  function Pt(e, t = 25, n = {}) {
    if (((n = { ...Dp, ...n }), !Number.isFinite(t)))
      throw new TypeError("Expected `wait` to be a finite number");
    let o,
      s,
      r = [],
      i,
      l;
    const a = (u, f) => (
      (i = Pp(e, u, f)),
      i.finally(() => {
        if (((i = null), n.trailing && l && !s)) {
          const c = a(u, l);
          return (l = null), c;
        }
      }),
      i
    );
    return function (...u) {
      return i
        ? (n.trailing && (l = u), i)
        : new Promise((f) => {
            const c = !s && n.leading;
            clearTimeout(s),
              (s = setTimeout(() => {
                s = null;
                const h = n.leading ? o : a(this, u);
                for (const d of r) d(h);
                r = [];
              }, t)),
              c ? ((o = a(this, u)), f(o)) : r.push(f);
          });
    };
  }
  async function Pp(e, t, n) {
    return await e.apply(t, n);
  }
  function ir(e, t = {}, n) {
    for (const o in e) {
      const s = e[o],
        r = n ? `${n}:${o}` : o;
      typeof s == "object" && s !== null
        ? ir(s, t, r)
        : typeof s == "function" && (t[r] = s);
    }
    return t;
  }
  const Ip = { run: (e) => e() },
    kp = () => Ip,
    Nl = typeof console.createTask < "u" ? console.createTask : kp;
  function Rp(e, t) {
    const n = t.shift(),
      o = Nl(n);
    return e.reduce(
      (s, r) => s.then(() => o.run(() => r(...t))),
      Promise.resolve(),
    );
  }
  function Np(e, t) {
    const n = t.shift(),
      o = Nl(n);
    return Promise.all(e.map((s) => o.run(() => s(...t))));
  }
  function lr(e, t) {
    for (const n of [...e]) n(t);
  }
  let Vp = class {
    constructor() {
      (this._hooks = {}),
        (this._before = void 0),
        (this._after = void 0),
        (this._deprecatedMessages = void 0),
        (this._deprecatedHooks = {}),
        (this.hook = this.hook.bind(this)),
        (this.callHook = this.callHook.bind(this)),
        (this.callHookWith = this.callHookWith.bind(this));
    }
    hook(t, n, o = {}) {
      if (!t || typeof n != "function") return () => {};
      const s = t;
      let r;
      for (; this._deprecatedHooks[t]; )
        (r = this._deprecatedHooks[t]), (t = r.to);
      if (r && !o.allowDeprecated) {
        let i = r.message;
        i ||
          (i =
            `${s} hook has been deprecated` +
            (r.to ? `, please use ${r.to}` : "")),
          this._deprecatedMessages || (this._deprecatedMessages = new Set()),
          this._deprecatedMessages.has(i) ||
            (console.warn(i), this._deprecatedMessages.add(i));
      }
      if (!n.name)
        try {
          Object.defineProperty(n, "name", {
            get: () => "_" + t.replace(/\W+/g, "_") + "_hook_cb",
            configurable: !0,
          });
        } catch {}
      return (
        (this._hooks[t] = this._hooks[t] || []),
        this._hooks[t].push(n),
        () => {
          n && (this.removeHook(t, n), (n = void 0));
        }
      );
    }
    hookOnce(t, n) {
      let o,
        s = (...r) => (
          typeof o == "function" && o(), (o = void 0), (s = void 0), n(...r)
        );
      return (o = this.hook(t, s)), o;
    }
    removeHook(t, n) {
      if (this._hooks[t]) {
        const o = this._hooks[t].indexOf(n);
        o !== -1 && this._hooks[t].splice(o, 1),
          this._hooks[t].length === 0 && delete this._hooks[t];
      }
    }
    deprecateHook(t, n) {
      this._deprecatedHooks[t] = typeof n == "string" ? { to: n } : n;
      const o = this._hooks[t] || [];
      delete this._hooks[t];
      for (const s of o) this.hook(t, s);
    }
    deprecateHooks(t) {
      Object.assign(this._deprecatedHooks, t);
      for (const n in t) this.deprecateHook(n, t[n]);
    }
    addHooks(t) {
      const n = ir(t),
        o = Object.keys(n).map((s) => this.hook(s, n[s]));
      return () => {
        for (const s of o.splice(0, o.length)) s();
      };
    }
    removeHooks(t) {
      const n = ir(t);
      for (const o in n) this.removeHook(o, n[o]);
    }
    removeAllHooks() {
      for (const t in this._hooks) delete this._hooks[t];
    }
    callHook(t, ...n) {
      return n.unshift(t), this.callHookWith(Rp, t, ...n);
    }
    callHookParallel(t, ...n) {
      return n.unshift(t), this.callHookWith(Np, t, ...n);
    }
    callHookWith(t, n, ...o) {
      const s =
        this._before || this._after
          ? { name: n, args: o, context: {} }
          : void 0;
      this._before && lr(this._before, s);
      const r = t(n in this._hooks ? [...this._hooks[n]] : [], o);
      return r instanceof Promise
        ? r.finally(() => {
            this._after && s && lr(this._after, s);
          })
        : (this._after && s && lr(this._after, s), r);
    }
    beforeEach(t) {
      return (
        (this._before = this._before || []),
        this._before.push(t),
        () => {
          if (this._before !== void 0) {
            const n = this._before.indexOf(t);
            n !== -1 && this._before.splice(n, 1);
          }
        }
      );
    }
    afterEach(t) {
      return (
        (this._after = this._after || []),
        this._after.push(t),
        () => {
          if (this._after !== void 0) {
            const n = this._after.indexOf(t);
            n !== -1 && this._after.splice(n, 1);
          }
        }
      );
    }
  };
  function Vl() {
    return new Vp();
  }
  var Lp = Object.create,
    Ll = Object.defineProperty,
    $p = Object.getOwnPropertyDescriptor,
    ar = Object.getOwnPropertyNames,
    Mp = Object.getPrototypeOf,
    Fp = Object.prototype.hasOwnProperty,
    Up = (e, t) =>
      function () {
        return e && (t = (0, e[ar(e)[0]])((e = 0))), t;
      },
    $l = (e, t) =>
      function () {
        return (
          t || (0, e[ar(e)[0]])((t = { exports: {} }).exports, t), t.exports
        );
      },
    Bp = (e, t, n, o) => {
      if ((t && typeof t == "object") || typeof t == "function")
        for (let s of ar(t))
          !Fp.call(e, s) &&
            s !== n &&
            Ll(e, s, {
              get: () => t[s],
              enumerable: !(o = $p(t, s)) || o.enumerable,
            });
      return e;
    },
    Hp = (e, t, n) => (
      (n = e != null ? Lp(Mp(e)) : {}),
      Bp(Ll(n, "default", { value: e, enumerable: !0 }), e)
    ),
    w = Up({
      "../../node_modules/.pnpm/tsup@8.3.5_@microsoft+api-extractor@7.43.0_@types+node@22.9.0__@swc+core@1.5.29_jiti@2.0.0_po_lnt5yfvawfblpk67opvcdwbq7u/node_modules/tsup/assets/esm_shims.js"() {},
    }),
    zp = $l({
      "../../node_modules/.pnpm/speakingurl@14.0.1/node_modules/speakingurl/lib/speakingurl.js"(
        e,
        t,
      ) {
        w(),
          (function (n) {
            var o = {
                À: "A",
                Á: "A",
                Â: "A",
                Ã: "A",
                Ä: "Ae",
                Å: "A",
                Æ: "AE",
                Ç: "C",
                È: "E",
                É: "E",
                Ê: "E",
                Ë: "E",
                Ì: "I",
                Í: "I",
                Î: "I",
                Ï: "I",
                Ð: "D",
                Ñ: "N",
                Ò: "O",
                Ó: "O",
                Ô: "O",
                Õ: "O",
                Ö: "Oe",
                Ő: "O",
                Ø: "O",
                Ù: "U",
                Ú: "U",
                Û: "U",
                Ü: "Ue",
                Ű: "U",
                Ý: "Y",
                Þ: "TH",
                ß: "ss",
                à: "a",
                á: "a",
                â: "a",
                ã: "a",
                ä: "ae",
                å: "a",
                æ: "ae",
                ç: "c",
                è: "e",
                é: "e",
                ê: "e",
                ë: "e",
                ì: "i",
                í: "i",
                î: "i",
                ï: "i",
                ð: "d",
                ñ: "n",
                ò: "o",
                ó: "o",
                ô: "o",
                õ: "o",
                ö: "oe",
                ő: "o",
                ø: "o",
                ù: "u",
                ú: "u",
                û: "u",
                ü: "ue",
                ű: "u",
                ý: "y",
                þ: "th",
                ÿ: "y",
                ẞ: "SS",
                ا: "a",
                أ: "a",
                إ: "i",
                آ: "aa",
                ؤ: "u",
                ئ: "e",
                ء: "a",
                ب: "b",
                ت: "t",
                ث: "th",
                ج: "j",
                ح: "h",
                خ: "kh",
                د: "d",
                ذ: "th",
                ر: "r",
                ز: "z",
                س: "s",
                ش: "sh",
                ص: "s",
                ض: "dh",
                ط: "t",
                ظ: "z",
                ع: "a",
                غ: "gh",
                ف: "f",
                ق: "q",
                ك: "k",
                ل: "l",
                م: "m",
                ن: "n",
                ه: "h",
                و: "w",
                ي: "y",
                ى: "a",
                ة: "h",
                ﻻ: "la",
                ﻷ: "laa",
                ﻹ: "lai",
                ﻵ: "laa",
                گ: "g",
                چ: "ch",
                پ: "p",
                ژ: "zh",
                ک: "k",
                ی: "y",
                "َ": "a",
                "ً": "an",
                "ِ": "e",
                "ٍ": "en",
                "ُ": "u",
                "ٌ": "on",
                "ْ": "",
                "٠": "0",
                "١": "1",
                "٢": "2",
                "٣": "3",
                "٤": "4",
                "٥": "5",
                "٦": "6",
                "٧": "7",
                "٨": "8",
                "٩": "9",
                "۰": "0",
                "۱": "1",
                "۲": "2",
                "۳": "3",
                "۴": "4",
                "۵": "5",
                "۶": "6",
                "۷": "7",
                "۸": "8",
                "۹": "9",
                က: "k",
                ခ: "kh",
                ဂ: "g",
                ဃ: "ga",
                င: "ng",
                စ: "s",
                ဆ: "sa",
                ဇ: "z",
                စျ: "za",
                ည: "ny",
                ဋ: "t",
                ဌ: "ta",
                ဍ: "d",
                ဎ: "da",
                ဏ: "na",
                တ: "t",
                ထ: "ta",
                ဒ: "d",
                ဓ: "da",
                န: "n",
                ပ: "p",
                ဖ: "pa",
                ဗ: "b",
                ဘ: "ba",
                မ: "m",
                ယ: "y",
                ရ: "ya",
                လ: "l",
                ဝ: "w",
                သ: "th",
                ဟ: "h",
                ဠ: "la",
                အ: "a",
                "ြ": "y",
                "ျ": "ya",
                "ွ": "w",
                "ြွ": "yw",
                "ျွ": "ywa",
                "ှ": "h",
                ဧ: "e",
                "၏": "-e",
                ဣ: "i",
                ဤ: "-i",
                ဉ: "u",
                ဦ: "-u",
                ဩ: "aw",
                သြော: "aw",
                ဪ: "aw",
                "၀": "0",
                "၁": "1",
                "၂": "2",
                "၃": "3",
                "၄": "4",
                "၅": "5",
                "၆": "6",
                "၇": "7",
                "၈": "8",
                "၉": "9",
                "္": "",
                "့": "",
                "း": "",
                č: "c",
                ď: "d",
                ě: "e",
                ň: "n",
                ř: "r",
                š: "s",
                ť: "t",
                ů: "u",
                ž: "z",
                Č: "C",
                Ď: "D",
                Ě: "E",
                Ň: "N",
                Ř: "R",
                Š: "S",
                Ť: "T",
                Ů: "U",
                Ž: "Z",
                ހ: "h",
                ށ: "sh",
                ނ: "n",
                ރ: "r",
                ބ: "b",
                ޅ: "lh",
                ކ: "k",
                އ: "a",
                ވ: "v",
                މ: "m",
                ފ: "f",
                ދ: "dh",
                ތ: "th",
                ލ: "l",
                ގ: "g",
                ޏ: "gn",
                ސ: "s",
                ޑ: "d",
                ޒ: "z",
                ޓ: "t",
                ޔ: "y",
                ޕ: "p",
                ޖ: "j",
                ޗ: "ch",
                ޘ: "tt",
                ޙ: "hh",
                ޚ: "kh",
                ޛ: "th",
                ޜ: "z",
                ޝ: "sh",
                ޞ: "s",
                ޟ: "d",
                ޠ: "t",
                ޡ: "z",
                ޢ: "a",
                ޣ: "gh",
                ޤ: "q",
                ޥ: "w",
                "ަ": "a",
                "ާ": "aa",
                "ި": "i",
                "ީ": "ee",
                "ު": "u",
                "ޫ": "oo",
                "ެ": "e",
                "ޭ": "ey",
                "ޮ": "o",
                "ޯ": "oa",
                "ް": "",
                ა: "a",
                ბ: "b",
                გ: "g",
                დ: "d",
                ე: "e",
                ვ: "v",
                ზ: "z",
                თ: "t",
                ი: "i",
                კ: "k",
                ლ: "l",
                მ: "m",
                ნ: "n",
                ო: "o",
                პ: "p",
                ჟ: "zh",
                რ: "r",
                ს: "s",
                ტ: "t",
                უ: "u",
                ფ: "p",
                ქ: "k",
                ღ: "gh",
                ყ: "q",
                შ: "sh",
                ჩ: "ch",
                ც: "ts",
                ძ: "dz",
                წ: "ts",
                ჭ: "ch",
                ხ: "kh",
                ჯ: "j",
                ჰ: "h",
                α: "a",
                β: "v",
                γ: "g",
                δ: "d",
                ε: "e",
                ζ: "z",
                η: "i",
                θ: "th",
                ι: "i",
                κ: "k",
                λ: "l",
                μ: "m",
                ν: "n",
                ξ: "ks",
                ο: "o",
                π: "p",
                ρ: "r",
                σ: "s",
                τ: "t",
                υ: "y",
                φ: "f",
                χ: "x",
                ψ: "ps",
                ω: "o",
                ά: "a",
                έ: "e",
                ί: "i",
                ό: "o",
                ύ: "y",
                ή: "i",
                ώ: "o",
                ς: "s",
                ϊ: "i",
                ΰ: "y",
                ϋ: "y",
                ΐ: "i",
                Α: "A",
                Β: "B",
                Γ: "G",
                Δ: "D",
                Ε: "E",
                Ζ: "Z",
                Η: "I",
                Θ: "TH",
                Ι: "I",
                Κ: "K",
                Λ: "L",
                Μ: "M",
                Ν: "N",
                Ξ: "KS",
                Ο: "O",
                Π: "P",
                Ρ: "R",
                Σ: "S",
                Τ: "T",
                Υ: "Y",
                Φ: "F",
                Χ: "X",
                Ψ: "PS",
                Ω: "O",
                Ά: "A",
                Έ: "E",
                Ί: "I",
                Ό: "O",
                Ύ: "Y",
                Ή: "I",
                Ώ: "O",
                Ϊ: "I",
                Ϋ: "Y",
                ā: "a",
                ē: "e",
                ģ: "g",
                ī: "i",
                ķ: "k",
                ļ: "l",
                ņ: "n",
                ū: "u",
                Ā: "A",
                Ē: "E",
                Ģ: "G",
                Ī: "I",
                Ķ: "k",
                Ļ: "L",
                Ņ: "N",
                Ū: "U",
                Ќ: "Kj",
                ќ: "kj",
                Љ: "Lj",
                љ: "lj",
                Њ: "Nj",
                њ: "nj",
                Тс: "Ts",
                тс: "ts",
                ą: "a",
                ć: "c",
                ę: "e",
                ł: "l",
                ń: "n",
                ś: "s",
                ź: "z",
                ż: "z",
                Ą: "A",
                Ć: "C",
                Ę: "E",
                Ł: "L",
                Ń: "N",
                Ś: "S",
                Ź: "Z",
                Ż: "Z",
                Є: "Ye",
                І: "I",
                Ї: "Yi",
                Ґ: "G",
                є: "ye",
                і: "i",
                ї: "yi",
                ґ: "g",
                ă: "a",
                Ă: "A",
                ș: "s",
                Ș: "S",
                ț: "t",
                Ț: "T",
                ţ: "t",
                Ţ: "T",
                а: "a",
                б: "b",
                в: "v",
                г: "g",
                д: "d",
                е: "e",
                ё: "yo",
                ж: "zh",
                з: "z",
                и: "i",
                й: "i",
                к: "k",
                л: "l",
                м: "m",
                н: "n",
                о: "o",
                п: "p",
                р: "r",
                с: "s",
                т: "t",
                у: "u",
                ф: "f",
                х: "kh",
                ц: "c",
                ч: "ch",
                ш: "sh",
                щ: "sh",
                ъ: "",
                ы: "y",
                ь: "",
                э: "e",
                ю: "yu",
                я: "ya",
                А: "A",
                Б: "B",
                В: "V",
                Г: "G",
                Д: "D",
                Е: "E",
                Ё: "Yo",
                Ж: "Zh",
                З: "Z",
                И: "I",
                Й: "I",
                К: "K",
                Л: "L",
                М: "M",
                Н: "N",
                О: "O",
                П: "P",
                Р: "R",
                С: "S",
                Т: "T",
                У: "U",
                Ф: "F",
                Х: "Kh",
                Ц: "C",
                Ч: "Ch",
                Ш: "Sh",
                Щ: "Sh",
                Ъ: "",
                Ы: "Y",
                Ь: "",
                Э: "E",
                Ю: "Yu",
                Я: "Ya",
                ђ: "dj",
                ј: "j",
                ћ: "c",
                џ: "dz",
                Ђ: "Dj",
                Ј: "j",
                Ћ: "C",
                Џ: "Dz",
                ľ: "l",
                ĺ: "l",
                ŕ: "r",
                Ľ: "L",
                Ĺ: "L",
                Ŕ: "R",
                ş: "s",
                Ş: "S",
                ı: "i",
                İ: "I",
                ğ: "g",
                Ğ: "G",
                ả: "a",
                Ả: "A",
                ẳ: "a",
                Ẳ: "A",
                ẩ: "a",
                Ẩ: "A",
                đ: "d",
                Đ: "D",
                ẹ: "e",
                Ẹ: "E",
                ẽ: "e",
                Ẽ: "E",
                ẻ: "e",
                Ẻ: "E",
                ế: "e",
                Ế: "E",
                ề: "e",
                Ề: "E",
                ệ: "e",
                Ệ: "E",
                ễ: "e",
                Ễ: "E",
                ể: "e",
                Ể: "E",
                ỏ: "o",
                ọ: "o",
                Ọ: "o",
                ố: "o",
                Ố: "O",
                ồ: "o",
                Ồ: "O",
                ổ: "o",
                Ổ: "O",
                ộ: "o",
                Ộ: "O",
                ỗ: "o",
                Ỗ: "O",
                ơ: "o",
                Ơ: "O",
                ớ: "o",
                Ớ: "O",
                ờ: "o",
                Ờ: "O",
                ợ: "o",
                Ợ: "O",
                ỡ: "o",
                Ỡ: "O",
                Ở: "o",
                ở: "o",
                ị: "i",
                Ị: "I",
                ĩ: "i",
                Ĩ: "I",
                ỉ: "i",
                Ỉ: "i",
                ủ: "u",
                Ủ: "U",
                ụ: "u",
                Ụ: "U",
                ũ: "u",
                Ũ: "U",
                ư: "u",
                Ư: "U",
                ứ: "u",
                Ứ: "U",
                ừ: "u",
                Ừ: "U",
                ự: "u",
                Ự: "U",
                ữ: "u",
                Ữ: "U",
                ử: "u",
                Ử: "ư",
                ỷ: "y",
                Ỷ: "y",
                ỳ: "y",
                Ỳ: "Y",
                ỵ: "y",
                Ỵ: "Y",
                ỹ: "y",
                Ỹ: "Y",
                ạ: "a",
                Ạ: "A",
                ấ: "a",
                Ấ: "A",
                ầ: "a",
                Ầ: "A",
                ậ: "a",
                Ậ: "A",
                ẫ: "a",
                Ẫ: "A",
                ắ: "a",
                Ắ: "A",
                ằ: "a",
                Ằ: "A",
                ặ: "a",
                Ặ: "A",
                ẵ: "a",
                Ẵ: "A",
                "⓪": "0",
                "①": "1",
                "②": "2",
                "③": "3",
                "④": "4",
                "⑤": "5",
                "⑥": "6",
                "⑦": "7",
                "⑧": "8",
                "⑨": "9",
                "⑩": "10",
                "⑪": "11",
                "⑫": "12",
                "⑬": "13",
                "⑭": "14",
                "⑮": "15",
                "⑯": "16",
                "⑰": "17",
                "⑱": "18",
                "⑲": "18",
                "⑳": "18",
                "⓵": "1",
                "⓶": "2",
                "⓷": "3",
                "⓸": "4",
                "⓹": "5",
                "⓺": "6",
                "⓻": "7",
                "⓼": "8",
                "⓽": "9",
                "⓾": "10",
                "⓿": "0",
                "⓫": "11",
                "⓬": "12",
                "⓭": "13",
                "⓮": "14",
                "⓯": "15",
                "⓰": "16",
                "⓱": "17",
                "⓲": "18",
                "⓳": "19",
                "⓴": "20",
                "Ⓐ": "A",
                "Ⓑ": "B",
                "Ⓒ": "C",
                "Ⓓ": "D",
                "Ⓔ": "E",
                "Ⓕ": "F",
                "Ⓖ": "G",
                "Ⓗ": "H",
                "Ⓘ": "I",
                "Ⓙ": "J",
                "Ⓚ": "K",
                "Ⓛ": "L",
                "Ⓜ": "M",
                "Ⓝ": "N",
                "Ⓞ": "O",
                "Ⓟ": "P",
                "Ⓠ": "Q",
                "Ⓡ": "R",
                "Ⓢ": "S",
                "Ⓣ": "T",
                "Ⓤ": "U",
                "Ⓥ": "V",
                "Ⓦ": "W",
                "Ⓧ": "X",
                "Ⓨ": "Y",
                "Ⓩ": "Z",
                "ⓐ": "a",
                "ⓑ": "b",
                "ⓒ": "c",
                "ⓓ": "d",
                "ⓔ": "e",
                "ⓕ": "f",
                "ⓖ": "g",
                "ⓗ": "h",
                "ⓘ": "i",
                "ⓙ": "j",
                "ⓚ": "k",
                "ⓛ": "l",
                "ⓜ": "m",
                "ⓝ": "n",
                "ⓞ": "o",
                "ⓟ": "p",
                "ⓠ": "q",
                "ⓡ": "r",
                "ⓢ": "s",
                "ⓣ": "t",
                "ⓤ": "u",
                "ⓦ": "v",
                "ⓥ": "w",
                "ⓧ": "x",
                "ⓨ": "y",
                "ⓩ": "z",
                "“": '"',
                "”": '"',
                "‘": "'",
                "’": "'",
                "∂": "d",
                ƒ: "f",
                "™": "(TM)",
                "©": "(C)",
                œ: "oe",
                Œ: "OE",
                "®": "(R)",
                "†": "+",
                "℠": "(SM)",
                "…": "...",
                "˚": "o",
                º: "o",
                ª: "a",
                "•": "*",
                "၊": ",",
                "။": ".",
                $: "USD",
                "€": "EUR",
                "₢": "BRN",
                "₣": "FRF",
                "£": "GBP",
                "₤": "ITL",
                "₦": "NGN",
                "₧": "ESP",
                "₩": "KRW",
                "₪": "ILS",
                "₫": "VND",
                "₭": "LAK",
                "₮": "MNT",
                "₯": "GRD",
                "₱": "ARS",
                "₲": "PYG",
                "₳": "ARA",
                "₴": "UAH",
                "₵": "GHS",
                "¢": "cent",
                "¥": "CNY",
                元: "CNY",
                円: "YEN",
                "﷼": "IRR",
                "₠": "EWE",
                "฿": "THB",
                "₨": "INR",
                "₹": "INR",
                "₰": "PF",
                "₺": "TRY",
                "؋": "AFN",
                "₼": "AZN",
                лв: "BGN",
                "៛": "KHR",
                "₡": "CRC",
                "₸": "KZT",
                ден: "MKD",
                zł: "PLN",
                "₽": "RUB",
                "₾": "GEL",
              },
              s = ["်", "ް"],
              r = {
                "ာ": "a",
                "ါ": "a",
                "ေ": "e",
                "ဲ": "e",
                "ိ": "i",
                "ီ": "i",
                "ို": "o",
                "ု": "u",
                "ူ": "u",
                "ေါင်": "aung",
                "ော": "aw",
                "ော်": "aw",
                "ေါ": "aw",
                "ေါ်": "aw",
                "်": "်",
                က်: "et",
                "ိုက်": "aik",
                "ောက်": "auk",
                င်: "in",
                "ိုင်": "aing",
                "ောင်": "aung",
                စ်: "it",
                ည်: "i",
                တ်: "at",
                "ိတ်": "eik",
                "ုတ်": "ok",
                "ွတ်": "ut",
                "ေတ်": "it",
                ဒ်: "d",
                "ိုဒ်": "ok",
                "ုဒ်": "ait",
                န်: "an",
                "ာန်": "an",
                "ိန်": "ein",
                "ုန်": "on",
                "ွန်": "un",
                ပ်: "at",
                "ိပ်": "eik",
                "ုပ်": "ok",
                "ွပ်": "ut",
                န်ုပ်: "nub",
                မ်: "an",
                "ိမ်": "ein",
                "ုမ်": "on",
                "ွမ်": "un",
                ယ်: "e",
                "ိုလ်": "ol",
                ဉ်: "in",
                "ံ": "an",
                "ိံ": "ein",
                "ုံ": "on",
                "ައް": "ah",
                "ަށް": "ah",
              },
              i = {
                en: {},
                az: {
                  ç: "c",
                  ə: "e",
                  ğ: "g",
                  ı: "i",
                  ö: "o",
                  ş: "s",
                  ü: "u",
                  Ç: "C",
                  Ə: "E",
                  Ğ: "G",
                  İ: "I",
                  Ö: "O",
                  Ş: "S",
                  Ü: "U",
                },
                cs: {
                  č: "c",
                  ď: "d",
                  ě: "e",
                  ň: "n",
                  ř: "r",
                  š: "s",
                  ť: "t",
                  ů: "u",
                  ž: "z",
                  Č: "C",
                  Ď: "D",
                  Ě: "E",
                  Ň: "N",
                  Ř: "R",
                  Š: "S",
                  Ť: "T",
                  Ů: "U",
                  Ž: "Z",
                },
                fi: { ä: "a", Ä: "A", ö: "o", Ö: "O" },
                hu: {
                  ä: "a",
                  Ä: "A",
                  ö: "o",
                  Ö: "O",
                  ü: "u",
                  Ü: "U",
                  ű: "u",
                  Ű: "U",
                },
                lt: {
                  ą: "a",
                  č: "c",
                  ę: "e",
                  ė: "e",
                  į: "i",
                  š: "s",
                  ų: "u",
                  ū: "u",
                  ž: "z",
                  Ą: "A",
                  Č: "C",
                  Ę: "E",
                  Ė: "E",
                  Į: "I",
                  Š: "S",
                  Ų: "U",
                  Ū: "U",
                },
                lv: {
                  ā: "a",
                  č: "c",
                  ē: "e",
                  ģ: "g",
                  ī: "i",
                  ķ: "k",
                  ļ: "l",
                  ņ: "n",
                  š: "s",
                  ū: "u",
                  ž: "z",
                  Ā: "A",
                  Č: "C",
                  Ē: "E",
                  Ģ: "G",
                  Ī: "i",
                  Ķ: "k",
                  Ļ: "L",
                  Ņ: "N",
                  Š: "S",
                  Ū: "u",
                  Ž: "Z",
                },
                pl: {
                  ą: "a",
                  ć: "c",
                  ę: "e",
                  ł: "l",
                  ń: "n",
                  ó: "o",
                  ś: "s",
                  ź: "z",
                  ż: "z",
                  Ą: "A",
                  Ć: "C",
                  Ę: "e",
                  Ł: "L",
                  Ń: "N",
                  Ó: "O",
                  Ś: "S",
                  Ź: "Z",
                  Ż: "Z",
                },
                sv: { ä: "a", Ä: "A", ö: "o", Ö: "O" },
                sk: { ä: "a", Ä: "A" },
                sr: { љ: "lj", њ: "nj", Љ: "Lj", Њ: "Nj", đ: "dj", Đ: "Dj" },
                tr: { Ü: "U", Ö: "O", ü: "u", ö: "o" },
              },
              l = {
                ar: {
                  "∆": "delta",
                  "∞": "la-nihaya",
                  "♥": "hob",
                  "&": "wa",
                  "|": "aw",
                  "<": "aqal-men",
                  ">": "akbar-men",
                  "∑": "majmou",
                  "¤": "omla",
                },
                az: {},
                ca: {
                  "∆": "delta",
                  "∞": "infinit",
                  "♥": "amor",
                  "&": "i",
                  "|": "o",
                  "<": "menys que",
                  ">": "mes que",
                  "∑": "suma dels",
                  "¤": "moneda",
                },
                cs: {
                  "∆": "delta",
                  "∞": "nekonecno",
                  "♥": "laska",
                  "&": "a",
                  "|": "nebo",
                  "<": "mensi nez",
                  ">": "vetsi nez",
                  "∑": "soucet",
                  "¤": "mena",
                },
                de: {
                  "∆": "delta",
                  "∞": "unendlich",
                  "♥": "Liebe",
                  "&": "und",
                  "|": "oder",
                  "<": "kleiner als",
                  ">": "groesser als",
                  "∑": "Summe von",
                  "¤": "Waehrung",
                },
                dv: {
                  "∆": "delta",
                  "∞": "kolunulaa",
                  "♥": "loabi",
                  "&": "aai",
                  "|": "noonee",
                  "<": "ah vure kuda",
                  ">": "ah vure bodu",
                  "∑": "jumula",
                  "¤": "faisaa",
                },
                en: {
                  "∆": "delta",
                  "∞": "infinity",
                  "♥": "love",
                  "&": "and",
                  "|": "or",
                  "<": "less than",
                  ">": "greater than",
                  "∑": "sum",
                  "¤": "currency",
                },
                es: {
                  "∆": "delta",
                  "∞": "infinito",
                  "♥": "amor",
                  "&": "y",
                  "|": "u",
                  "<": "menos que",
                  ">": "mas que",
                  "∑": "suma de los",
                  "¤": "moneda",
                },
                fa: {
                  "∆": "delta",
                  "∞": "bi-nahayat",
                  "♥": "eshgh",
                  "&": "va",
                  "|": "ya",
                  "<": "kamtar-az",
                  ">": "bishtar-az",
                  "∑": "majmooe",
                  "¤": "vahed",
                },
                fi: {
                  "∆": "delta",
                  "∞": "aarettomyys",
                  "♥": "rakkaus",
                  "&": "ja",
                  "|": "tai",
                  "<": "pienempi kuin",
                  ">": "suurempi kuin",
                  "∑": "summa",
                  "¤": "valuutta",
                },
                fr: {
                  "∆": "delta",
                  "∞": "infiniment",
                  "♥": "Amour",
                  "&": "et",
                  "|": "ou",
                  "<": "moins que",
                  ">": "superieure a",
                  "∑": "somme des",
                  "¤": "monnaie",
                },
                ge: {
                  "∆": "delta",
                  "∞": "usasruloba",
                  "♥": "siqvaruli",
                  "&": "da",
                  "|": "an",
                  "<": "naklebi",
                  ">": "meti",
                  "∑": "jami",
                  "¤": "valuta",
                },
                gr: {},
                hu: {
                  "∆": "delta",
                  "∞": "vegtelen",
                  "♥": "szerelem",
                  "&": "es",
                  "|": "vagy",
                  "<": "kisebb mint",
                  ">": "nagyobb mint",
                  "∑": "szumma",
                  "¤": "penznem",
                },
                it: {
                  "∆": "delta",
                  "∞": "infinito",
                  "♥": "amore",
                  "&": "e",
                  "|": "o",
                  "<": "minore di",
                  ">": "maggiore di",
                  "∑": "somma",
                  "¤": "moneta",
                },
                lt: {
                  "∆": "delta",
                  "∞": "begalybe",
                  "♥": "meile",
                  "&": "ir",
                  "|": "ar",
                  "<": "maziau nei",
                  ">": "daugiau nei",
                  "∑": "suma",
                  "¤": "valiuta",
                },
                lv: {
                  "∆": "delta",
                  "∞": "bezgaliba",
                  "♥": "milestiba",
                  "&": "un",
                  "|": "vai",
                  "<": "mazak neka",
                  ">": "lielaks neka",
                  "∑": "summa",
                  "¤": "valuta",
                },
                my: {
                  "∆": "kwahkhyaet",
                  "∞": "asaonasme",
                  "♥": "akhyait",
                  "&": "nhin",
                  "|": "tho",
                  "<": "ngethaw",
                  ">": "kyithaw",
                  "∑": "paungld",
                  "¤": "ngwekye",
                },
                mk: {},
                nl: {
                  "∆": "delta",
                  "∞": "oneindig",
                  "♥": "liefde",
                  "&": "en",
                  "|": "of",
                  "<": "kleiner dan",
                  ">": "groter dan",
                  "∑": "som",
                  "¤": "valuta",
                },
                pl: {
                  "∆": "delta",
                  "∞": "nieskonczonosc",
                  "♥": "milosc",
                  "&": "i",
                  "|": "lub",
                  "<": "mniejsze niz",
                  ">": "wieksze niz",
                  "∑": "suma",
                  "¤": "waluta",
                },
                pt: {
                  "∆": "delta",
                  "∞": "infinito",
                  "♥": "amor",
                  "&": "e",
                  "|": "ou",
                  "<": "menor que",
                  ">": "maior que",
                  "∑": "soma",
                  "¤": "moeda",
                },
                ro: {
                  "∆": "delta",
                  "∞": "infinit",
                  "♥": "dragoste",
                  "&": "si",
                  "|": "sau",
                  "<": "mai mic ca",
                  ">": "mai mare ca",
                  "∑": "suma",
                  "¤": "valuta",
                },
                ru: {
                  "∆": "delta",
                  "∞": "beskonechno",
                  "♥": "lubov",
                  "&": "i",
                  "|": "ili",
                  "<": "menshe",
                  ">": "bolshe",
                  "∑": "summa",
                  "¤": "valjuta",
                },
                sk: {
                  "∆": "delta",
                  "∞": "nekonecno",
                  "♥": "laska",
                  "&": "a",
                  "|": "alebo",
                  "<": "menej ako",
                  ">": "viac ako",
                  "∑": "sucet",
                  "¤": "mena",
                },
                sr: {},
                tr: {
                  "∆": "delta",
                  "∞": "sonsuzluk",
                  "♥": "ask",
                  "&": "ve",
                  "|": "veya",
                  "<": "kucuktur",
                  ">": "buyuktur",
                  "∑": "toplam",
                  "¤": "para birimi",
                },
                uk: {
                  "∆": "delta",
                  "∞": "bezkinechnist",
                  "♥": "lubov",
                  "&": "i",
                  "|": "abo",
                  "<": "menshe",
                  ">": "bilshe",
                  "∑": "suma",
                  "¤": "valjuta",
                },
                vn: {
                  "∆": "delta",
                  "∞": "vo cuc",
                  "♥": "yeu",
                  "&": "va",
                  "|": "hoac",
                  "<": "nho hon",
                  ">": "lon hon",
                  "∑": "tong",
                  "¤": "tien te",
                },
              },
              a = [";", "?", ":", "@", "&", "=", "+", "$", ",", "/"].join(""),
              u = [";", "?", ":", "@", "&", "=", "+", "$", ","].join(""),
              f = [".", "!", "~", "*", "'", "(", ")"].join(""),
              c = function (y, g) {
                var S = "-",
                  P = "",
                  b = "",
                  D = !0,
                  L = {},
                  B,
                  j,
                  q,
                  I,
                  N,
                  M,
                  H,
                  Q,
                  _e,
                  Y,
                  F,
                  ne,
                  we,
                  Ze,
                  Oe = "";
                if (typeof y != "string") return "";
                if (
                  (typeof g == "string" && (S = g),
                  (H = l.en),
                  (Q = i.en),
                  typeof g == "object")
                ) {
                  (B = g.maintainCase || !1),
                    (L =
                      g.custom && typeof g.custom == "object" ? g.custom : L),
                    (q = (+g.truncate > 1 && g.truncate) || !1),
                    (I = g.uric || !1),
                    (N = g.uricNoSlash || !1),
                    (M = g.mark || !1),
                    (D = !(g.symbols === !1 || g.lang === !1)),
                    (S = g.separator || S),
                    I && (Oe += a),
                    N && (Oe += u),
                    M && (Oe += f),
                    (H = g.lang && l[g.lang] && D ? l[g.lang] : D ? l.en : {}),
                    (Q =
                      g.lang && i[g.lang]
                        ? i[g.lang]
                        : g.lang === !1 || g.lang === !0
                          ? {}
                          : i.en),
                    g.titleCase &&
                    typeof g.titleCase.length == "number" &&
                    Array.prototype.toString.call(g.titleCase)
                      ? (g.titleCase.forEach(function (he) {
                          L[he + ""] = he + "";
                        }),
                        (j = !0))
                      : (j = !!g.titleCase),
                    g.custom &&
                      typeof g.custom.length == "number" &&
                      Array.prototype.toString.call(g.custom) &&
                      g.custom.forEach(function (he) {
                        L[he + ""] = he + "";
                      }),
                    Object.keys(L).forEach(function (he) {
                      var Ut;
                      he.length > 1
                        ? (Ut = new RegExp("\\b" + d(he) + "\\b", "gi"))
                        : (Ut = new RegExp(d(he), "gi")),
                        (y = y.replace(Ut, L[he]));
                    });
                  for (F in L) Oe += F;
                }
                for (
                  Oe += S,
                    Oe = d(Oe),
                    y = y.replace(/(^\s+|\s+$)/g, ""),
                    we = !1,
                    Ze = !1,
                    Y = 0,
                    ne = y.length;
                  Y < ne;
                  Y++
                )
                  (F = y[Y]),
                    m(F, L)
                      ? (we = !1)
                      : Q[F]
                        ? ((F =
                            we && Q[F].match(/[A-Za-z0-9]/)
                              ? " " + Q[F]
                              : Q[F]),
                          (we = !1))
                        : F in o
                          ? (Y + 1 < ne && s.indexOf(y[Y + 1]) >= 0
                              ? ((b += F), (F = ""))
                              : Ze === !0
                                ? ((F = r[b] + o[F]), (b = ""))
                                : (F =
                                    we && o[F].match(/[A-Za-z0-9]/)
                                      ? " " + o[F]
                                      : o[F]),
                            (we = !1),
                            (Ze = !1))
                          : F in r
                            ? ((b += F),
                              (F = ""),
                              Y === ne - 1 && (F = r[b]),
                              (Ze = !0))
                            : H[F] &&
                                !(I && a.indexOf(F) !== -1) &&
                                !(N && u.indexOf(F) !== -1)
                              ? ((F =
                                  we || P.substr(-1).match(/[A-Za-z0-9]/)
                                    ? S + H[F]
                                    : H[F]),
                                (F +=
                                  y[Y + 1] !== void 0 &&
                                  y[Y + 1].match(/[A-Za-z0-9]/)
                                    ? S
                                    : ""),
                                (we = !0))
                              : (Ze === !0
                                  ? ((F = r[b] + F), (b = ""), (Ze = !1))
                                  : we &&
                                    (/[A-Za-z0-9]/.test(F) ||
                                      P.substr(-1).match(/A-Za-z0-9]/)) &&
                                    (F = " " + F),
                                (we = !1)),
                    (P += F.replace(
                      new RegExp("[^\\w\\s" + Oe + "_-]", "g"),
                      S,
                    ));
                return (
                  j &&
                    (P = P.replace(/(\w)(\S*)/g, function (he, Ut, gs) {
                      var oo = Ut.toUpperCase() + (gs !== null ? gs : "");
                      return Object.keys(L).indexOf(oo.toLowerCase()) < 0
                        ? oo
                        : oo.toLowerCase();
                    })),
                  (P = P.replace(/\s+/g, S)
                    .replace(new RegExp("\\" + S + "+", "g"), S)
                    .replace(
                      new RegExp("(^\\" + S + "+|\\" + S + "+$)", "g"),
                      "",
                    )),
                  q &&
                    P.length > q &&
                    ((_e = P.charAt(q) === S),
                    (P = P.slice(0, q)),
                    _e || (P = P.slice(0, P.lastIndexOf(S)))),
                  !B && !j && (P = P.toLowerCase()),
                  P
                );
              },
              h = function (y) {
                return function (S) {
                  return c(S, y);
                };
              },
              d = function (y) {
                return y.replace(/[-\\^$*+?.()|[\]{}\/]/g, "\\$&");
              },
              m = function (v, y) {
                for (var g in y) if (y[g] === v) return !0;
              };
            if (typeof t < "u" && t.exports)
              (t.exports = c), (t.exports.createSlug = h);
            else if (typeof define < "u" && define.amd)
              define([], function () {
                return c;
              });
            else
              try {
                if (n.getSlug || n.createSlug)
                  throw "speakingurl: globals exists /(getSlug|createSlug)/";
                (n.getSlug = c), (n.createSlug = h);
              } catch {}
          })(e);
      },
    }),
    jp = $l({
      "../../node_modules/.pnpm/speakingurl@14.0.1/node_modules/speakingurl/index.js"(
        e,
        t,
      ) {
        w(), (t.exports = zp());
      },
    });
  w(), w(), w();
  function Kp(e) {
    if (x.__VUE_DEVTOOLS_PLUGIN_API_AVAILABLE__) {
      e();
      return;
    }
    Object.defineProperty(x, "__VUE_DEVTOOLS_PLUGIN_API_AVAILABLE__", {
      set(t) {
        t && e();
      },
      configurable: !0,
    });
  }
  w(), w(), w(), w();
  function Wp(e) {
    return !!(e && e.__v_isReadonly);
  }
  function Ml(e) {
    return Wp(e) ? Ml(e.__v_raw) : !!(e && e.__v_isReactive);
  }
  function ur(e) {
    return !!(e && e.__v_isRef === !0);
  }
  function Un(e) {
    const t = e && e.__v_raw;
    return t ? Un(t) : e;
  }
  w();
  function Gp(e) {
    var t;
    const n =
      e.name ||
      e._componentTag ||
      e.__VUE_DEVTOOLS_COMPONENT_GUSSED_NAME__ ||
      e.__name;
    return n === "index" && (t = e.__file) != null && t.endsWith("index.vue")
      ? ""
      : n;
  }
  function qp(e) {
    const t = e.__file;
    if (t) return kl(Cp(t, ".vue"));
  }
  function Fl(e, t) {
    return (e.type.__VUE_DEVTOOLS_COMPONENT_GUSSED_NAME__ = t), t;
  }
  function We(e) {
    if (e.__VUE_DEVTOOLS_NEXT_APP_RECORD__)
      return e.__VUE_DEVTOOLS_NEXT_APP_RECORD__;
    if (e.root) return e.appContext.app.__VUE_DEVTOOLS_NEXT_APP_RECORD__;
  }
  async function Bo(e) {
    const { app: t, uid: n, instance: o } = e;
    try {
      if (o.__VUE_DEVTOOLS_NEXT_UID__) return o.__VUE_DEVTOOLS_NEXT_UID__;
      const s = await We(t);
      if (!s) return null;
      const r = s.rootInstance === o;
      return `${s.id}:${r ? "root" : n}`;
    } catch {}
  }
  function cr(e) {
    var t, n;
    const o = (t = e.subTree) == null ? void 0 : t.type,
      s = We(e);
    return s
      ? ((n = s == null ? void 0 : s.types) == null ? void 0 : n.Fragment) === o
      : !1;
  }
  function fr(e) {
    return e._isBeingDestroyed || e.isUnmounted;
  }
  function it(e) {
    var t, n, o;
    const s = Gp((e == null ? void 0 : e.type) || {});
    if (s) return s;
    if ((e == null ? void 0 : e.root) === e) return "Root";
    for (const i in (n = (t = e.parent) == null ? void 0 : t.type) == null
      ? void 0
      : n.components)
      if (e.parent.type.components[i] === (e == null ? void 0 : e.type))
        return Fl(e, i);
    for (const i in (o = e.appContext) == null ? void 0 : o.components)
      if (e.appContext.components[i] === (e == null ? void 0 : e.type))
        return Fl(e, i);
    const r = qp((e == null ? void 0 : e.type) || {});
    return r || "Anonymous Component";
  }
  function Ul(e) {
    var t, n, o;
    const s =
        (o =
          (n =
            (t = e == null ? void 0 : e.appContext) == null ? void 0 : t.app) ==
          null
            ? void 0
            : n.__VUE_DEVTOOLS_NEXT_APP_RECORD_ID__) != null
          ? o
          : 0,
      r = e === (e == null ? void 0 : e.root) ? "root" : e.uid;
    return `${s}:${r}`;
  }
  function Yp(e) {
    return e == null
      ? ""
      : typeof e == "number"
        ? e
        : typeof e == "string"
          ? `'${e}'`
          : Array.isArray(e)
            ? "Array"
            : "Object";
  }
  function It(e) {
    try {
      return e();
    } catch (t) {
      return t;
    }
  }
  function dn(e, t) {
    return (
      (t = t || `${e.id}:root`),
      e.instanceMap.get(t) || e.instanceMap.get(":root")
    );
  }
  function dr(e, t, n = !1) {
    return n || (typeof e == "object" && e !== null) ? t in e : !1;
  }
  var Bl = class {
      constructor() {
        this.refEditor = new Xp();
      }
      set(e, t, n, o) {
        const s = Array.isArray(t) ? t : t.split(".");
        for (; s.length > 1; ) {
          const l = s.shift();
          e instanceof Map && (e = e.get(l)),
            e instanceof Set ? (e = Array.from(e.values())[l]) : (e = e[l]),
            this.refEditor.isRef(e) && (e = this.refEditor.get(e));
        }
        const r = s[0],
          i = this.refEditor.get(e)[r];
        o
          ? o(e, r, n)
          : this.refEditor.isRef(i)
            ? this.refEditor.set(i, n)
            : (e[r] = n);
      }
      get(e, t) {
        const n = Array.isArray(t) ? t : t.split(".");
        for (let o = 0; o < n.length; o++)
          if (
            (e instanceof Map ? (e = e.get(n[o])) : (e = e[n[o]]),
            this.refEditor.isRef(e) && (e = this.refEditor.get(e)),
            !e)
          )
            return;
        return e;
      }
      has(e, t, n = !1) {
        if (typeof e > "u") return !1;
        const o = Array.isArray(t) ? t.slice() : t.split("."),
          s = n ? 2 : 1;
        for (; e && o.length > s; ) {
          const r = o.shift();
          (e = e[r]), this.refEditor.isRef(e) && (e = this.refEditor.get(e));
        }
        return e != null && Object.prototype.hasOwnProperty.call(e, o[0]);
      }
      createDefaultSetCallback(e) {
        return (t, n, o) => {
          if (
            ((e.remove || e.newKey) &&
              (Array.isArray(t)
                ? t.splice(n, 1)
                : Un(t) instanceof Map
                  ? t.delete(n)
                  : Un(t) instanceof Set
                    ? t.delete(Array.from(t.values())[n])
                    : Reflect.deleteProperty(t, n)),
            !e.remove)
          ) {
            const s = t[e.newKey || n];
            this.refEditor.isRef(s)
              ? this.refEditor.set(s, o)
              : Un(t) instanceof Map
                ? t.set(e.newKey || n, o)
                : Un(t) instanceof Set
                  ? t.add(o)
                  : (t[e.newKey || n] = o);
          }
        };
      }
    },
    Xp = class {
      set(e, t) {
        if (ur(e)) e.value = t;
        else {
          if (e instanceof Set && Array.isArray(t)) {
            e.clear(), t.forEach((s) => e.add(s));
            return;
          }
          const n = Object.keys(t);
          if (e instanceof Map) {
            const s = new Set(e.keys());
            n.forEach((r) => {
              e.set(r, Reflect.get(t, r)), s.delete(r);
            }),
              s.forEach((r) => e.delete(r));
            return;
          }
          const o = new Set(Object.keys(e));
          n.forEach((s) => {
            Reflect.set(e, s, Reflect.get(t, s)), o.delete(s);
          }),
            o.forEach((s) => Reflect.deleteProperty(e, s));
        }
      }
      get(e) {
        return ur(e) ? e.value : e;
      }
      isRef(e) {
        return ur(e) || Ml(e);
      }
    };
  async function Zp(e, t) {
    const { path: n, nodeId: o, state: s, type: r } = e,
      i = dn(ie.value, o);
    if (!i) return;
    const l = n.slice();
    let a;
    Object.keys(i.props).includes(n[0])
      ? (a = i.props)
      : i.devtoolsRawSetupState &&
          Object.keys(i.devtoolsRawSetupState).includes(n[0])
        ? (a = i.devtoolsRawSetupState)
        : i.data && Object.keys(i.data).includes(n[0])
          ? (a = i.data)
          : (a = i.proxy),
      a && l && (s.type, t.set(a, l, s.value, t.createDefaultSetCallback(s)));
  }
  var Jp = new Bl();
  async function Qp(e) {
    Zp(e, Jp);
  }
  w();
  function Bn(e) {
    return cr(e) ? eh(e.subTree) : e.subTree ? [e.subTree.el] : [];
  }
  function eh(e) {
    if (!e.children) return [];
    const t = [];
    return (
      e.children.forEach((n) => {
        n.component
          ? t.push(...Bn(n.component))
          : n != null && n.el && t.push(n.el);
      }),
      t
    );
  }
  w(), w();
  function th() {
    const e = {
      top: 0,
      bottom: 0,
      left: 0,
      right: 0,
      get width() {
        return e.right - e.left;
      },
      get height() {
        return e.bottom - e.top;
      },
    };
    return e;
  }
  var Ho;
  function nh(e) {
    return (
      Ho || (Ho = document.createRange()),
      Ho.selectNode(e),
      Ho.getBoundingClientRect()
    );
  }
  function oh(e) {
    const t = th();
    if (!e.children) return t;
    for (let n = 0, o = e.children.length; n < o; n++) {
      const s = e.children[n];
      let r;
      if (s.component) r = Gt(s.component);
      else if (s.el) {
        const i = s.el;
        i.nodeType === 1 || i.getBoundingClientRect
          ? (r = i.getBoundingClientRect())
          : i.nodeType === 3 && i.data.trim() && (r = nh(i));
      }
      r && sh(t, r);
    }
    return t;
  }
  function sh(e, t) {
    return (
      (!e.top || t.top < e.top) && (e.top = t.top),
      (!e.bottom || t.bottom > e.bottom) && (e.bottom = t.bottom),
      (!e.left || t.left < e.left) && (e.left = t.left),
      (!e.right || t.right > e.right) && (e.right = t.right),
      e
    );
  }
  var Hl = { top: 0, left: 0, right: 0, bottom: 0, width: 0, height: 0 };
  function Gt(e) {
    const t = e.subTree.el;
    return typeof window > "u"
      ? Hl
      : cr(e)
        ? oh(e.subTree)
        : (t == null ? void 0 : t.nodeType) === 1
          ? t == null
            ? void 0
            : t.getBoundingClientRect()
          : e.subTree.component
            ? Gt(e.subTree.component)
            : Hl;
  }
  var zl = "__vue-devtools-component-inspector__",
    jl = "__vue-devtools-component-inspector__card__",
    Kl = "__vue-devtools-component-inspector__name__",
    Wl = "__vue-devtools-component-inspector__indicator__",
    Gl = {
      display: "block",
      zIndex: 2147483640,
      position: "fixed",
      backgroundColor: "#42b88325",
      border: "1px solid #42b88350",
      borderRadius: "5px",
      transition: "all 0.1s ease-in",
      pointerEvents: "none",
    },
    rh = {
      fontFamily: "Arial, Helvetica, sans-serif",
      padding: "5px 8px",
      borderRadius: "4px",
      textAlign: "left",
      position: "absolute",
      left: 0,
      color: "#e9e9e9",
      fontSize: "14px",
      fontWeight: 600,
      lineHeight: "24px",
      backgroundColor: "#42b883",
      boxShadow:
        "0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px -1px rgba(0, 0, 0, 0.1)",
    },
    ih = {
      display: "inline-block",
      fontWeight: 400,
      fontStyle: "normal",
      fontSize: "12px",
      opacity: 0.7,
    };
  function pn() {
    return document.getElementById(zl);
  }
  function lh() {
    return document.getElementById(jl);
  }
  function ah() {
    return document.getElementById(Wl);
  }
  function uh() {
    return document.getElementById(Kl);
  }
  function pr(e) {
    return {
      left: `${Math.round(e.left * 100) / 100}px`,
      top: `${Math.round(e.top * 100) / 100}px`,
      width: `${Math.round(e.width * 100) / 100}px`,
      height: `${Math.round(e.height * 100) / 100}px`,
    };
  }
  function hr(e) {
    var t;
    const n = document.createElement("div");
    (n.id = (t = e.elementId) != null ? t : zl),
      Object.assign(n.style, { ...Gl, ...pr(e.bounds), ...e.style });
    const o = document.createElement("span");
    (o.id = jl),
      Object.assign(o.style, { ...rh, top: e.bounds.top < 35 ? 0 : "-35px" });
    const s = document.createElement("span");
    (s.id = Kl), (s.innerHTML = `&lt;${e.name}&gt;&nbsp;&nbsp;`);
    const r = document.createElement("i");
    return (
      (r.id = Wl),
      (r.innerHTML = `${Math.round(e.bounds.width * 100) / 100} x ${Math.round(e.bounds.height * 100) / 100}`),
      Object.assign(r.style, ih),
      o.appendChild(s),
      o.appendChild(r),
      n.appendChild(o),
      document.body.appendChild(n),
      n
    );
  }
  function _r(e) {
    const t = pn(),
      n = lh(),
      o = uh(),
      s = ah();
    t &&
      (Object.assign(t.style, { ...Gl, ...pr(e.bounds) }),
      Object.assign(n.style, { top: e.bounds.top < 35 ? 0 : "-35px" }),
      (o.innerHTML = `&lt;${e.name}&gt;&nbsp;&nbsp;`),
      (s.innerHTML = `${Math.round(e.bounds.width * 100) / 100} x ${Math.round(e.bounds.height * 100) / 100}`));
  }
  function ch(e) {
    const t = Gt(e);
    if (!t.width && !t.height) return;
    const n = it(e);
    pn() ? _r({ bounds: t, name: n }) : hr({ bounds: t, name: n });
  }
  function ql() {
    const e = pn();
    e && (e.style.display = "none");
  }
  var mr = null;
  function gr(e) {
    const t = e.target;
    if (t) {
      const n = t.__vueParentComponent;
      if (n && ((mr = n), n.vnode.el)) {
        const s = Gt(n),
          r = it(n);
        pn() ? _r({ bounds: s, name: r }) : hr({ bounds: s, name: r });
      }
    }
  }
  function fh(e, t) {
    var n;
    if ((e.preventDefault(), e.stopPropagation(), mr)) {
      const o = (n = ie.value) == null ? void 0 : n.app;
      Bo({ app: o, uid: o.uid, instance: mr }).then((s) => {
        t(s);
      });
    }
  }
  var zo = null;
  function dh() {
    ql(),
      window.removeEventListener("mouseover", gr),
      window.removeEventListener("click", zo, !0),
      (zo = null);
  }
  function ph() {
    return (
      window.addEventListener("mouseover", gr),
      new Promise((e) => {
        function t(n) {
          n.preventDefault(),
            n.stopPropagation(),
            fh(n, (o) => {
              window.removeEventListener("click", t, !0),
                (zo = null),
                window.removeEventListener("mouseover", gr);
              const s = pn();
              s && (s.style.display = "none"), e(JSON.stringify({ id: o }));
            });
        }
        (zo = t), window.addEventListener("click", t, !0);
      })
    );
  }
  function hh(e) {
    const t = dn(ie.value, e.id);
    if (t) {
      const [n] = Bn(t);
      if (typeof n.scrollIntoView == "function")
        n.scrollIntoView({ behavior: "smooth" });
      else {
        const o = Gt(t),
          s = document.createElement("div"),
          r = { ...pr(o), position: "absolute" };
        Object.assign(s.style, r),
          document.body.appendChild(s),
          s.scrollIntoView({ behavior: "smooth" }),
          setTimeout(() => {
            document.body.removeChild(s);
          }, 2e3);
      }
      setTimeout(() => {
        const o = Gt(t);
        if (o.width || o.height) {
          const s = it(t),
            r = pn();
          r
            ? _r({ ...e, name: s, bounds: o })
            : hr({ ...e, name: s, bounds: o }),
            setTimeout(() => {
              r && (r.style.display = "none");
            }, 1500);
        }
      }, 1200);
    }
  }
  w();
  var Yl, Xl;
  (Xl = (Yl = x).__VUE_DEVTOOLS_COMPONENT_INSPECTOR_ENABLED__) != null ||
    (Yl.__VUE_DEVTOOLS_COMPONENT_INSPECTOR_ENABLED__ = !0);
  function _h(e) {
    let t = 0;
    const n = setInterval(() => {
      x.__VUE_INSPECTOR__ && (clearInterval(n), (t += 30), e()),
        t >= 5e3 && clearInterval(n);
    }, 30);
  }
  function mh() {
    const e = x.__VUE_INSPECTOR__,
      t = e.openInEditor;
    e.openInEditor = async (...n) => {
      e.disable(), t(...n);
    };
  }
  function gh() {
    return new Promise((e) => {
      function t() {
        mh(), e(x.__VUE_INSPECTOR__);
      }
      x.__VUE_INSPECTOR__
        ? t()
        : _h(() => {
            t();
          });
    });
  }
  w(), w(), w();
  var vh = "__VUE_DEVTOOLS_KIT_TIMELINE_LAYERS_STATE__";
  function yh() {
    if (!Uo || typeof localStorage > "u" || localStorage === null)
      return {
        recordingState: !1,
        mouseEventEnabled: !1,
        keyboardEventEnabled: !1,
        componentEventEnabled: !1,
        performanceEventEnabled: !1,
        selected: "",
      };
    const e = localStorage.getItem(vh);
    return e
      ? JSON.parse(e)
      : {
          recordingState: !1,
          mouseEventEnabled: !1,
          keyboardEventEnabled: !1,
          componentEventEnabled: !1,
          performanceEventEnabled: !1,
          selected: "",
        };
  }
  w(), w(), w();
  var Zl, Jl;
  (Jl = (Zl = x).__VUE_DEVTOOLS_KIT_TIMELINE_LAYERS) != null ||
    (Zl.__VUE_DEVTOOLS_KIT_TIMELINE_LAYERS = []);
  var Eh = new Proxy(x.__VUE_DEVTOOLS_KIT_TIMELINE_LAYERS, {
    get(e, t, n) {
      return Reflect.get(e, t, n);
    },
  });
  function bh(e, t) {
    (Z.timelineLayersState[t.id] = !1),
      Eh.push({ ...e, descriptorId: t.id, appRecord: We(t.app) });
  }
  var Ql, ea;
  (ea = (Ql = x).__VUE_DEVTOOLS_KIT_INSPECTOR__) != null ||
    (Ql.__VUE_DEVTOOLS_KIT_INSPECTOR__ = []);
  var vr = new Proxy(x.__VUE_DEVTOOLS_KIT_INSPECTOR__, {
      get(e, t, n) {
        return Reflect.get(e, t, n);
      },
    }),
    ta = Pt(() => {
      Ge.hooks.callHook("sendInspectorToClient", na());
    });
  function wh(e, t) {
    var n, o;
    vr.push({
      options: e,
      descriptor: t,
      treeFilterPlaceholder:
        (n = e.treeFilterPlaceholder) != null ? n : "Search tree...",
      stateFilterPlaceholder:
        (o = e.stateFilterPlaceholder) != null ? o : "Search state...",
      treeFilter: "",
      selectedNodeId: "",
      appRecord: We(t.app),
    }),
      ta();
  }
  function na() {
    return vr
      .filter((e) => e.descriptor.app === ie.value.app)
      .filter((e) => e.descriptor.id !== "components")
      .map((e) => {
        var t;
        const n = e.descriptor,
          o = e.options;
        return {
          id: o.id,
          label: o.label,
          logo: n.logo,
          icon: `custom-ic-baseline-${(t = o == null ? void 0 : o.icon) == null ? void 0 : t.replace(/_/g, "-")}`,
          packageName: n.packageName,
          homepage: n.homepage,
          pluginId: n.id,
        };
      });
  }
  function jo(e, t) {
    return vr.find(
      (n) => n.options.id === e && (t ? n.descriptor.app === t : !0),
    );
  }
  function Sh() {
    const e = Vl();
    e.hook("addInspector", ({ inspector: o, plugin: s }) => {
      wh(o, s.descriptor);
    });
    const t = Pt(async ({ inspectorId: o, plugin: s }) => {
      var r;
      if (
        !o ||
        !((r = s == null ? void 0 : s.descriptor) != null && r.app) ||
        Z.highPerfModeEnabled
      )
        return;
      const i = jo(o, s.descriptor.app),
        l = {
          app: s.descriptor.app,
          inspectorId: o,
          filter: (i == null ? void 0 : i.treeFilter) || "",
          rootNodes: [],
        };
      await new Promise((a) => {
        e.callHookWith(async (u) => {
          await Promise.all(u.map((f) => f(l))), a();
        }, "getInspectorTree");
      }),
        e.callHookWith(async (a) => {
          await Promise.all(
            a.map((u) => u({ inspectorId: o, rootNodes: l.rootNodes })),
          );
        }, "sendInspectorTreeToClient");
    }, 120);
    e.hook("sendInspectorTree", t);
    const n = Pt(async ({ inspectorId: o, plugin: s }) => {
      var r;
      if (
        !o ||
        !((r = s == null ? void 0 : s.descriptor) != null && r.app) ||
        Z.highPerfModeEnabled
      )
        return;
      const i = jo(o, s.descriptor.app),
        l = {
          app: s.descriptor.app,
          inspectorId: o,
          nodeId: (i == null ? void 0 : i.selectedNodeId) || "",
          state: null,
        },
        a = { currentTab: `custom-inspector:${o}` };
      l.nodeId &&
        (await new Promise((u) => {
          e.callHookWith(async (f) => {
            await Promise.all(f.map((c) => c(l, a))), u();
          }, "getInspectorState");
        })),
        e.callHookWith(async (u) => {
          await Promise.all(
            u.map((f) =>
              f({ inspectorId: o, nodeId: l.nodeId, state: l.state }),
            ),
          );
        }, "sendInspectorStateToClient");
    }, 120);
    return (
      e.hook("sendInspectorState", n),
      e.hook(
        "customInspectorSelectNode",
        ({ inspectorId: o, nodeId: s, plugin: r }) => {
          const i = jo(o, r.descriptor.app);
          i && (i.selectedNodeId = s);
        },
      ),
      e.hook("timelineLayerAdded", ({ options: o, plugin: s }) => {
        bh(o, s.descriptor);
      }),
      e.hook("timelineEventAdded", ({ options: o, plugin: s }) => {
        var r;
        const i = ["performance", "component-event", "keyboard", "mouse"];
        Z.highPerfModeEnabled ||
          (!((r = Z.timelineLayersState) != null && r[s.descriptor.id]) &&
            !i.includes(o.layerId)) ||
          e.callHookWith(async (l) => {
            await Promise.all(l.map((a) => a(o)));
          }, "sendTimelineEventToClient");
      }),
      e.hook("getComponentInstances", async ({ app: o }) => {
        const s = o.__VUE_DEVTOOLS_NEXT_APP_RECORD__;
        if (!s) return null;
        const r = s.id.toString();
        return [...s.instanceMap]
          .filter(([l]) => l.split(":")[0] === r)
          .map(([, l]) => l);
      }),
      e.hook("getComponentBounds", async ({ instance: o }) => Gt(o)),
      e.hook("getComponentName", ({ instance: o }) => it(o)),
      e.hook("componentHighlight", ({ uid: o }) => {
        const s = ie.value.instanceMap.get(o);
        s && ch(s);
      }),
      e.hook("componentUnhighlight", () => {
        ql();
      }),
      e
    );
  }
  var oa, sa;
  (sa = (oa = x).__VUE_DEVTOOLS_KIT_APP_RECORDS__) != null ||
    (oa.__VUE_DEVTOOLS_KIT_APP_RECORDS__ = []);
  var ra, ia;
  (ia = (ra = x).__VUE_DEVTOOLS_KIT_ACTIVE_APP_RECORD__) != null ||
    (ra.__VUE_DEVTOOLS_KIT_ACTIVE_APP_RECORD__ = {});
  var la, aa;
  (aa = (la = x).__VUE_DEVTOOLS_KIT_ACTIVE_APP_RECORD_ID__) != null ||
    (la.__VUE_DEVTOOLS_KIT_ACTIVE_APP_RECORD_ID__ = "");
  var ua, ca;
  (ca = (ua = x).__VUE_DEVTOOLS_KIT_CUSTOM_TABS__) != null ||
    (ua.__VUE_DEVTOOLS_KIT_CUSTOM_TABS__ = []);
  var fa, da;
  (da = (fa = x).__VUE_DEVTOOLS_KIT_CUSTOM_COMMANDS__) != null ||
    (fa.__VUE_DEVTOOLS_KIT_CUSTOM_COMMANDS__ = []);
  var lt = "__VUE_DEVTOOLS_KIT_GLOBAL_STATE__";
  function Th() {
    return {
      connected: !1,
      clientConnected: !1,
      vitePluginDetected: !0,
      appRecords: [],
      activeAppRecordId: "",
      tabs: [],
      commands: [],
      highPerfModeEnabled: !0,
      devtoolsClientDetected: {},
      perfUniqueGroupId: 0,
      timelineLayersState: yh(),
    };
  }
  var pa, ha;
  (ha = (pa = x)[lt]) != null || (pa[lt] = Th());
  var Oh = Pt((e) => {
      Ge.hooks.callHook("devtoolsStateUpdated", { state: e });
    }),
    xh = Pt((e, t) => {
      Ge.hooks.callHook("devtoolsConnectedUpdated", { state: e, oldState: t });
    }),
    kt = new Proxy(x.__VUE_DEVTOOLS_KIT_APP_RECORDS__, {
      get(e, t, n) {
        return t === "value"
          ? x.__VUE_DEVTOOLS_KIT_APP_RECORDS__
          : x.__VUE_DEVTOOLS_KIT_APP_RECORDS__[t];
      },
    }),
    Ah = (e) => {
      x.__VUE_DEVTOOLS_KIT_APP_RECORDS__ = [
        ...x.__VUE_DEVTOOLS_KIT_APP_RECORDS__,
        e,
      ];
    },
    Ch = (e) => {
      x.__VUE_DEVTOOLS_KIT_APP_RECORDS__ = kt.value.filter((t) => t.app !== e);
    },
    ie = new Proxy(x.__VUE_DEVTOOLS_KIT_ACTIVE_APP_RECORD__, {
      get(e, t, n) {
        return t === "value"
          ? x.__VUE_DEVTOOLS_KIT_ACTIVE_APP_RECORD__
          : t === "id"
            ? x.__VUE_DEVTOOLS_KIT_ACTIVE_APP_RECORD_ID__
            : x.__VUE_DEVTOOLS_KIT_ACTIVE_APP_RECORD__[t];
      },
    });
  function yr() {
    Oh({
      ...x[lt],
      appRecords: kt.value,
      activeAppRecordId: ie.id,
      tabs: x.__VUE_DEVTOOLS_KIT_CUSTOM_TABS__,
      commands: x.__VUE_DEVTOOLS_KIT_CUSTOM_COMMANDS__,
    });
  }
  function Er(e) {
    (x.__VUE_DEVTOOLS_KIT_ACTIVE_APP_RECORD__ = e), yr();
  }
  function _a(e) {
    (x.__VUE_DEVTOOLS_KIT_ACTIVE_APP_RECORD_ID__ = e), yr();
  }
  var Z = new Proxy(x[lt], {
    get(e, t) {
      return t === "appRecords"
        ? kt
        : t === "activeAppRecordId"
          ? ie.id
          : t === "tabs"
            ? x.__VUE_DEVTOOLS_KIT_CUSTOM_TABS__
            : t === "commands"
              ? x.__VUE_DEVTOOLS_KIT_CUSTOM_COMMANDS__
              : x[lt][t];
    },
    deleteProperty(e, t) {
      return delete e[t], !0;
    },
    set(e, t, n) {
      return { ...x[lt] }, (e[t] = n), (x[lt][t] = n), !0;
    },
  });
  function br(e) {
    const t = { ...x[lt], appRecords: kt.value, activeAppRecordId: ie.id };
    ((t.connected !== e.connected && e.connected) ||
      (t.clientConnected !== e.clientConnected && e.clientConnected)) &&
      xh(x[lt], t),
      Object.assign(x[lt], e),
      yr();
  }
  function Dh(e) {
    return new Promise((t) => {
      Z.connected && (e(), t()),
        Ge.hooks.hook("devtoolsConnectedUpdated", ({ state: n }) => {
          n.connected && (e(), t());
        });
    });
  }
  function Ph(e = {}) {
    var t, n, o;
    const {
      file: s,
      host: r,
      baseUrl: i = window.location.origin,
      line: l = 0,
      column: a = 0,
    } = e;
    if (s) {
      if (r === "chrome-extension") {
        const u = s.replace(/\\/g, "\\\\"),
          f =
            (n =
              (t = window.VUE_DEVTOOLS_CONFIG) == null
                ? void 0
                : t.openInEditorHost) != null
              ? n
              : "/";
        fetch(`${f}__open-in-editor?file=${encodeURI(s)}`).then((c) => {
          if (!c.ok) {
            const h = `Opening component ${u} failed`;
            console.log(`%c${h}`, "color:red");
          }
        });
      } else if (Z.vitePluginDetected) {
        const u =
          (o = x.__VUE_DEVTOOLS_OPEN_IN_EDITOR_BASE_URL__) != null ? o : i;
        x.__VUE_INSPECTOR__.openInEditor(u, s, l, a);
      }
    }
  }
  w(), w(), w(), w(), w();
  var ma, ga;
  (ga = (ma = x).__VUE_DEVTOOLS_KIT_PLUGIN_BUFFER__) != null ||
    (ma.__VUE_DEVTOOLS_KIT_PLUGIN_BUFFER__ = []);
  var Hn = new Proxy(x.__VUE_DEVTOOLS_KIT_PLUGIN_BUFFER__, {
    get(e, t, n) {
      return Reflect.get(e, t, n);
    },
  });
  function Ih(e, t) {
    Hn.push([e, t]);
  }
  function wr(e) {
    const t = {};
    return (
      Object.keys(e).forEach((n) => {
        t[n] = e[n].defaultValue;
      }),
      t
    );
  }
  function Sr(e) {
    return `__VUE_DEVTOOLS_NEXT_PLUGIN_SETTINGS__${e}__`;
  }
  function kh(e) {
    var t, n, o;
    const s =
      (n =
        (t = Hn.find((r) => {
          var i;
          return r[0].id === e && !!((i = r[0]) != null && i.settings);
        })) == null
          ? void 0
          : t[0]) != null
        ? n
        : null;
    return (o = s == null ? void 0 : s.settings) != null ? o : null;
  }
  function va(e, t) {
    var n, o, s;
    const r = Sr(e);
    if (r) {
      const i = localStorage.getItem(r);
      if (i) return JSON.parse(i);
    }
    if (e) {
      const i =
        (o = (n = Hn.find((l) => l[0].id === e)) == null ? void 0 : n[0]) !=
        null
          ? o
          : null;
      return wr((s = i == null ? void 0 : i.settings) != null ? s : {});
    }
    return wr(t);
  }
  function ya(e, t) {
    const n = Sr(e);
    localStorage.getItem(n) || localStorage.setItem(n, JSON.stringify(wr(t)));
  }
  function Rh(e, t, n) {
    const o = Sr(e),
      s = localStorage.getItem(o),
      r = JSON.parse(s || "{}"),
      i = { ...r, [t]: n };
    localStorage.setItem(o, JSON.stringify(i)),
      Ge.hooks.callHookWith((l) => {
        l.forEach((a) =>
          a({ pluginId: e, key: t, oldValue: r[t], newValue: n, settings: i }),
        );
      }, "setPluginSettings");
  }
  w(), w(), w(), w(), w(), w(), w(), w(), w(), w(), w();
  var Ea,
    ba,
    pe =
      (ba = (Ea = x).__VUE_DEVTOOLS_HOOK) != null
        ? ba
        : (Ea.__VUE_DEVTOOLS_HOOK = Vl()),
    Nh = {
      vueAppInit(e) {
        pe.hook("app:init", e);
      },
      vueAppUnmount(e) {
        pe.hook("app:unmount", e);
      },
      vueAppConnected(e) {
        pe.hook("app:connected", e);
      },
      componentAdded(e) {
        return pe.hook("component:added", e);
      },
      componentEmit(e) {
        return pe.hook("component:emit", e);
      },
      componentUpdated(e) {
        return pe.hook("component:updated", e);
      },
      componentRemoved(e) {
        return pe.hook("component:removed", e);
      },
      setupDevtoolsPlugin(e) {
        pe.hook("devtools-plugin:setup", e);
      },
      perfStart(e) {
        return pe.hook("perf:start", e);
      },
      perfEnd(e) {
        return pe.hook("perf:end", e);
      },
    };
  function Vh() {
    return {
      id: "vue-devtools-next",
      devtoolsVersion: "7.0",
      enabled: !1,
      appRecords: [],
      apps: [],
      events: new Map(),
      on(e, t) {
        var n;
        return (
          this.events.has(e) || this.events.set(e, []),
          (n = this.events.get(e)) == null || n.push(t),
          () => this.off(e, t)
        );
      },
      once(e, t) {
        const n = (...o) => {
          this.off(e, n), t(...o);
        };
        return this.on(e, n), [e, n];
      },
      off(e, t) {
        if (this.events.has(e)) {
          const n = this.events.get(e),
            o = n.indexOf(t);
          o !== -1 && n.splice(o, 1);
        }
      },
      emit(e, ...t) {
        this.events.has(e) && this.events.get(e).forEach((n) => n(...t));
      },
    };
  }
  function Lh(e) {
    e.on("app:init", (t, n, o) => {
      var s, r, i;
      ((i =
        (r =
          (s = t == null ? void 0 : t._instance) == null ? void 0 : s.type) ==
        null
          ? void 0
          : r.devtools) != null &&
        i.hide) ||
        pe.callHook("app:init", t, n, o);
    }),
      e.on("app:unmount", (t) => {
        pe.callHook("app:unmount", t);
      }),
      e.on("component:added", async (t, n, o, s) => {
        var r, i, l;
        ((l =
          (i =
            (r = t == null ? void 0 : t._instance) == null ? void 0 : r.type) ==
          null
            ? void 0
            : i.devtools) != null &&
          l.hide) ||
          Z.highPerfModeEnabled ||
          !t ||
          (typeof n != "number" && !n) ||
          !s ||
          pe.callHook("component:added", t, n, o, s);
      }),
      e.on("component:updated", (t, n, o, s) => {
        !t ||
          (typeof n != "number" && !n) ||
          !s ||
          Z.highPerfModeEnabled ||
          pe.callHook("component:updated", t, n, o, s);
      }),
      e.on("component:removed", async (t, n, o, s) => {
        !t ||
          (typeof n != "number" && !n) ||
          !s ||
          Z.highPerfModeEnabled ||
          pe.callHook("component:removed", t, n, o, s);
      }),
      e.on("component:emit", async (t, n, o, s) => {
        !t ||
          !n ||
          Z.highPerfModeEnabled ||
          pe.callHook("component:emit", t, n, o, s);
      }),
      e.on("perf:start", (t, n, o, s, r) => {
        !t || Z.highPerfModeEnabled || pe.callHook("perf:start", t, n, o, s, r);
      }),
      e.on("perf:end", (t, n, o, s, r) => {
        !t || Z.highPerfModeEnabled || pe.callHook("perf:end", t, n, o, s, r);
      }),
      e.on("devtools-plugin:setup", (t, n, o) => {
        (o == null ? void 0 : o.target) !== "legacy" &&
          pe.callHook("devtools-plugin:setup", t, n);
      });
  }
  var Be = {
      on: Nh,
      setupDevToolsPlugin(e, t) {
        return pe.callHook("devtools-plugin:setup", e, t);
      },
    },
    $h = class {
      constructor({ plugin: e, ctx: t }) {
        (this.hooks = t.hooks), (this.plugin = e);
      }
      get on() {
        return {
          visitComponentTree: (e) => {
            this.hooks.hook("visitComponentTree", e);
          },
          inspectComponent: (e) => {
            this.hooks.hook("inspectComponent", e);
          },
          editComponentState: (e) => {
            this.hooks.hook("editComponentState", e);
          },
          getInspectorTree: (e) => {
            this.hooks.hook("getInspectorTree", e);
          },
          getInspectorState: (e) => {
            this.hooks.hook("getInspectorState", e);
          },
          editInspectorState: (e) => {
            this.hooks.hook("editInspectorState", e);
          },
          inspectTimelineEvent: (e) => {
            this.hooks.hook("inspectTimelineEvent", e);
          },
          timelineCleared: (e) => {
            this.hooks.hook("timelineCleared", e);
          },
          setPluginSettings: (e) => {
            this.hooks.hook("setPluginSettings", e);
          },
        };
      }
      notifyComponentUpdate(e) {
        var t;
        const n = na().find(
          (o) => o.packageName === this.plugin.descriptor.packageName,
        );
        if (n != null && n.id) {
          if (e) {
            const o = [
              e.appContext.app,
              e.uid,
              (t = e.parent) == null ? void 0 : t.uid,
              e,
            ];
            pe.callHook("component:updated", ...o);
          } else pe.callHook("component:updated");
          this.hooks.callHook("sendInspectorState", {
            inspectorId: n.id,
            plugin: this.plugin,
          });
        }
      }
      addInspector(e) {
        this.hooks.callHook("addInspector", {
          inspector: e,
          plugin: this.plugin,
        }),
          this.plugin.descriptor.settings &&
            ya(e.id, this.plugin.descriptor.settings);
      }
      sendInspectorTree(e) {
        this.hooks.callHook("sendInspectorTree", {
          inspectorId: e,
          plugin: this.plugin,
        });
      }
      sendInspectorState(e) {
        this.hooks.callHook("sendInspectorState", {
          inspectorId: e,
          plugin: this.plugin,
        });
      }
      selectInspectorNode(e, t) {
        this.hooks.callHook("customInspectorSelectNode", {
          inspectorId: e,
          nodeId: t,
          plugin: this.plugin,
        });
      }
      visitComponentTree(e) {
        return this.hooks.callHook("visitComponentTree", e);
      }
      now() {
        return Date.now();
      }
      addTimelineLayer(e) {
        this.hooks.callHook("timelineLayerAdded", {
          options: e,
          plugin: this.plugin,
        });
      }
      addTimelineEvent(e) {
        this.hooks.callHook("timelineEventAdded", {
          options: e,
          plugin: this.plugin,
        });
      }
      getSettings(e) {
        return va(
          e ?? this.plugin.descriptor.id,
          this.plugin.descriptor.settings,
        );
      }
      getComponentInstances(e) {
        return this.hooks.callHook("getComponentInstances", { app: e });
      }
      getComponentBounds(e) {
        return this.hooks.callHook("getComponentBounds", { instance: e });
      }
      getComponentName(e) {
        return this.hooks.callHook("getComponentName", { instance: e });
      }
      highlightElement(e) {
        const t = e.__VUE_DEVTOOLS_NEXT_UID__;
        return this.hooks.callHook("componentHighlight", { uid: t });
      }
      unhighlightElement() {
        return this.hooks.callHook("componentUnhighlight");
      }
    },
    Mh = $h;
  w(), w(), w(), w();
  var Fh = new Set([
      "nextTick",
      "defineComponent",
      "defineAsyncComponent",
      "defineCustomElement",
      "ref",
      "computed",
      "reactive",
      "readonly",
      "watchEffect",
      "watchPostEffect",
      "watchSyncEffect",
      "watch",
      "isRef",
      "unref",
      "toRef",
      "toRefs",
      "isProxy",
      "isReactive",
      "isReadonly",
      "shallowRef",
      "triggerRef",
      "customRef",
      "shallowReactive",
      "shallowReadonly",
      "toRaw",
      "markRaw",
      "effectScope",
      "getCurrentScope",
      "onScopeDispose",
      "onMounted",
      "onUpdated",
      "onUnmounted",
      "onBeforeMount",
      "onBeforeUpdate",
      "onBeforeUnmount",
      "onErrorCaptured",
      "onRenderTracked",
      "onRenderTriggered",
      "onActivated",
      "onDeactivated",
      "onServerPrefetch",
      "provide",
      "inject",
      "h",
      "mergeProps",
      "cloneVNode",
      "isVNode",
      "resolveComponent",
      "resolveDirective",
      "withDirectives",
      "withModifiers",
    ]),
    Uh = /^(?:function|class) (\w+)/,
    Bh = "__vue_devtool_undefined__",
    Hh = "__vue_devtool_infinity__",
    zh = "__vue_devtool_negative_infinity__",
    jh = "__vue_devtool_nan__";
  w(), w();
  function wa(e) {
    return !!e.__v_isRef;
  }
  function Kh(e) {
    return wa(e) && !!e.effect;
  }
  function Wh(e) {
    return !!e.__v_isReactive;
  }
  function Gh(e) {
    return !!e.__v_isReadonly;
  }
  var qh = {
    [Bh]: "undefined",
    [jh]: "NaN",
    [Hh]: "Infinity",
    [zh]: "-Infinity",
  };
  Object.entries(qh).reduce((e, [t, n]) => ((e[n] = t), e), {});
  function Sa(e) {
    if (Array.isArray(e)) return e.map((n) => Sa(n)).join(" or ");
    if (e == null) return "null";
    const t = e.toString().match(Uh);
    return (typeof e == "function" && t && t[1]) || "any";
  }
  function Yh(e) {
    return { ref: wa(e), computed: Kh(e), reactive: Wh(e), readonly: Gh(e) };
  }
  function Xh(e) {
    return e != null && e.__v_raw ? e.__v_raw : e;
  }
  function Ko(e, t, n) {
    if ((typeof t == "function" && (t = t.options), !t)) return e;
    const { mixins: o, extends: s } = t;
    s && Ko(e, s), o && o.forEach((r) => Ko(e, r));
    for (const r of ["computed", "inject"])
      Object.prototype.hasOwnProperty.call(t, r) &&
        (e[r] ? Object.assign(e[r], t[r]) : (e[r] = t[r]));
    return e;
  }
  function Zh(e) {
    const t = e == null ? void 0 : e.type;
    if (!t) return {};
    const { mixins: n, extends: o } = t,
      s = e.appContext.mixins;
    if (!s.length && !n && !o) return t;
    const r = {};
    return s.forEach((i) => Ko(r, i)), Ko(r, t), r;
  }
  function Jh(e) {
    var t;
    const n = [],
      o = (t = e == null ? void 0 : e.type) == null ? void 0 : t.props;
    for (const s in e.props) {
      const r = o ? o[s] : null,
        i = xp(s);
      n.push({
        type: "props",
        key: i,
        value: It(() => e.props[s]),
        editable: !0,
        meta: r
          ? {
              type: r.type ? Sa(r.type) : "any",
              required: !!r.required,
              ...(r.default ? { default: r.default.toString() } : {}),
            }
          : { type: "invalid" },
      });
    }
    return n;
  }
  function Qh(e) {
    const t = e.type,
      n = t.props,
      o = t.vuex && t.vuex.getters,
      s = t.computed,
      r = { ...e.data, ...e.renderContext };
    return Object.keys(r)
      .filter((i) => !(n && i in n) && !(o && i in o) && !(s && i in s))
      .map((i) => ({
        key: i,
        type: "data",
        value: It(() => r[i]),
        editable: !0,
      }));
  }
  function e_(e) {
    const t = e.computed
        ? "computed"
        : e.ref
          ? "ref"
          : e.reactive
            ? "reactive"
            : null,
      n = t ? `${t.charAt(0).toUpperCase()}${t.slice(1)}` : null;
    return { stateType: t, stateTypeName: n };
  }
  function t_(e) {
    const t = e.devtoolsRawSetupState || {};
    return Object.keys(e.setupState)
      .filter((n) => !Fh.has(n) && n.split(/(?=[A-Z])/)[0] !== "use")
      .map((n) => {
        var o, s, r, i;
        const l = It(() => Xh(e.setupState[n])),
          a = t[n];
        let u,
          f =
            typeof l == "function" ||
            (dr(l, "render") && typeof l.render == "function") ||
            (dr(l, "__asyncLoader") && typeof l.__asyncLoader == "function") ||
            (typeof l == "object" && l && ("setup" in l || "props" in l)) ||
            /^v[A-Z]/.test(n);
        if (a) {
          const h = Yh(a),
            { stateType: d, stateTypeName: m } = e_(h),
            v = h.ref || h.computed || h.reactive,
            y = dr(a, "effect")
              ? ((s = (o = a.effect) == null ? void 0 : o.raw) == null
                  ? void 0
                  : s.toString()) ||
                ((i = (r = a.effect) == null ? void 0 : r.fn) == null
                  ? void 0
                  : i.toString())
              : null;
          d && (f = !1),
            (u = {
              ...(d ? { stateType: d, stateTypeName: m } : {}),
              ...(y ? { raw: y } : {}),
              editable: v && !h.readonly,
            });
        }
        return { key: n, value: l, type: f ? "setup (other)" : "setup", ...u };
      });
  }
  function n_(e, t) {
    const n = t,
      o = [],
      s = n.computed || {};
    for (const r in s) {
      const i = s[r],
        l = typeof i == "function" && i.vuex ? "vuex bindings" : "computed";
      o.push({
        type: l,
        key: r,
        value: It(() => {
          var a;
          return (a = e == null ? void 0 : e.proxy) == null ? void 0 : a[r];
        }),
        editable: typeof i.set == "function",
      });
    }
    return o;
  }
  function o_(e) {
    return Object.keys(e.attrs).map((t) => ({
      type: "attrs",
      key: t,
      value: It(() => e.attrs[t]),
    }));
  }
  function s_(e) {
    return Reflect.ownKeys(e.provides).map((t) => ({
      type: "provided",
      key: t.toString(),
      value: It(() => e.provides[t]),
    }));
  }
  function r_(e, t) {
    if (!(t != null && t.inject)) return [];
    let n = [],
      o;
    return (
      Array.isArray(t.inject)
        ? (n = t.inject.map((s) => ({ key: s, originalKey: s })))
        : (n = Reflect.ownKeys(t.inject).map((s) => {
            const r = t.inject[s];
            let i;
            return (
              typeof r == "string" || typeof r == "symbol"
                ? (i = r)
                : ((i = r.from), (o = r.default)),
              { key: s, originalKey: i }
            );
          })),
      n.map(({ key: s, originalKey: r }) => ({
        type: "injected",
        key: r && s !== r ? `${r.toString()} ➞ ${s.toString()}` : s.toString(),
        value: It(() =>
          e.ctx.hasOwnProperty(s)
            ? e.ctx[s]
            : e.provides.hasOwnProperty(r)
              ? e.provides[r]
              : o,
        ),
      }))
    );
  }
  function i_(e) {
    return Object.keys(e.refs).map((t) => ({
      type: "template refs",
      key: t,
      value: It(() => e.refs[t]),
    }));
  }
  function l_(e) {
    var t, n;
    const o = e.type.emits,
      s = Array.isArray(o) ? o : Object.keys(o ?? {}),
      r = Object.keys(
        (n = (t = e == null ? void 0 : e.vnode) == null ? void 0 : t.props) !=
          null
          ? n
          : {},
      ),
      i = [];
    for (const l of r) {
      const [a, ...u] = l.split(/(?=[A-Z])/);
      if (a === "on") {
        const f = u.join("-").toLowerCase(),
          c = s.includes(f);
        i.push({
          type: "event listeners",
          key: f,
          value: {
            _custom: {
              displayText: c ? "✅ Declared" : "⚠️ Not declared",
              key: c ? "✅ Declared" : "⚠️ Not declared",
              value: c ? "✅ Declared" : "⚠️ Not declared",
              tooltipText: c
                ? null
                : `The event <code>${f}</code> is not declared in the <code>emits</code> option. It will leak into the component's attributes (<code>$attrs</code>).`,
            },
          },
        });
      }
    }
    return i;
  }
  function a_(e) {
    const t = Zh(e);
    return Jh(e).concat(
      Qh(e),
      t_(e),
      n_(e, t),
      o_(e),
      s_(e),
      r_(e, t),
      i_(e),
      l_(e),
    );
  }
  function u_(e) {
    var t;
    const n = dn(ie.value, e.instanceId),
      o = Ul(n),
      s = it(n),
      r = (t = n == null ? void 0 : n.type) == null ? void 0 : t.__file,
      i = a_(n);
    return { id: o, name: s, file: r, state: i, instance: n };
  }
  w(), w();
  var c_ = class {
    constructor(e) {
      this.filter = e || "";
    }
    isQualified(e) {
      const t = it(e);
      return (
        kl(t).toLowerCase().includes(this.filter) ||
        Ap(t).toLowerCase().includes(this.filter)
      );
    }
  };
  function f_(e) {
    return new c_(e);
  }
  var d_ = class {
    constructor(e) {
      this.captureIds = new Map();
      const { filterText: t = "", maxDepth: n, recursively: o, api: s } = e;
      (this.componentFilter = f_(t)),
        (this.maxDepth = n),
        (this.recursively = o),
        (this.api = s);
    }
    getComponentTree(e) {
      return (this.captureIds = new Map()), this.findQualifiedChildren(e, 0);
    }
    getComponentParents(e) {
      this.captureIds = new Map();
      const t = [];
      this.captureId(e);
      let n = e;
      for (; (n = n.parent); ) this.captureId(n), t.push(n);
      return t;
    }
    captureId(e) {
      if (!e) return null;
      const t =
        e.__VUE_DEVTOOLS_NEXT_UID__ != null
          ? e.__VUE_DEVTOOLS_NEXT_UID__
          : Ul(e);
      return (
        (e.__VUE_DEVTOOLS_NEXT_UID__ = t),
        this.captureIds.has(t)
          ? null
          : (this.captureIds.set(t, void 0), this.mark(e), t)
      );
    }
    async capture(e, t) {
      var n;
      if (!e) return null;
      const o = this.captureId(e),
        s = it(e),
        r = this.getInternalInstanceChildren(e.subTree).filter((c) => !fr(c)),
        i = this.getComponentParents(e) || [],
        l = !!e.isDeactivated || i.some((c) => c.isDeactivated),
        a = {
          uid: e.uid,
          id: o,
          name: s,
          renderKey: Yp(e.vnode ? e.vnode.key : null),
          inactive: l,
          children: [],
          isFragment: cr(e),
          tags:
            typeof e.type != "function"
              ? []
              : [
                  {
                    label: "functional",
                    textColor: 5592405,
                    backgroundColor: 15658734,
                  },
                ],
          autoOpen: this.recursively,
          file: e.type.__file || "",
        };
      if (
        ((t < this.maxDepth ||
          e.type.__isKeepAlive ||
          i.some((c) => c.type.__isKeepAlive)) &&
          (a.children = await Promise.all(
            r.map((c) => this.capture(c, t + 1)).filter(Boolean),
          )),
        this.isKeepAlive(e))
      ) {
        const c = this.getKeepAliveCachedInstances(e),
          h = r.map((d) => d.__VUE_DEVTOOLS_NEXT_UID__);
        for (const d of c)
          if (!h.includes(d.__VUE_DEVTOOLS_NEXT_UID__)) {
            const m = await this.capture({ ...d, isDeactivated: !0 }, t + 1);
            m && a.children.push(m);
          }
      }
      const f = Bn(e)[0];
      if (f != null && f.parentElement) {
        const c = e.parent,
          h = c ? Bn(c) : [];
        let d = f;
        const m = [];
        do
          m.push(Array.from(d.parentElement.childNodes).indexOf(d)),
            (d = d.parentElement);
        while (d.parentElement && h.length && !h.includes(d));
        a.domOrder = m.reverse();
      } else a.domOrder = [-1];
      return (
        (n = e.suspense) != null &&
          n.suspenseKey &&
          (a.tags.push({
            label: e.suspense.suspenseKey,
            backgroundColor: 14979812,
            textColor: 16777215,
          }),
          this.mark(e, !0)),
        this.api.visitComponentTree({
          treeNode: a,
          componentInstance: e,
          app: e.appContext.app,
          filter: this.componentFilter.filter,
        }),
        a
      );
    }
    async findQualifiedChildren(e, t) {
      var n;
      if (
        this.componentFilter.isQualified(e) &&
        !((n = e.type.devtools) != null && n.hide)
      )
        return [await this.capture(e, t)];
      if (e.subTree) {
        const o = this.isKeepAlive(e)
          ? this.getKeepAliveCachedInstances(e)
          : this.getInternalInstanceChildren(e.subTree);
        return this.findQualifiedChildrenFromList(o, t);
      } else return [];
    }
    async findQualifiedChildrenFromList(e, t) {
      return (
        (e = e.filter((n) => {
          var o;
          return !fr(n) && !((o = n.type.devtools) != null && o.hide);
        })),
        this.componentFilter.filter
          ? Array.prototype.concat.apply(
              [],
              await Promise.all(e.map((n) => this.findQualifiedChildren(n, t))),
            )
          : Promise.all(e.map((n) => this.capture(n, t)))
      );
    }
    getInternalInstanceChildren(e, t = null) {
      const n = [];
      if (e)
        if (e.component)
          t ? n.push({ ...e.component, suspense: t }) : n.push(e.component);
        else if (e.suspense) {
          const o = e.suspense.isInFallback
            ? "suspense fallback"
            : "suspense default";
          n.push(
            ...this.getInternalInstanceChildren(e.suspense.activeBranch, {
              ...e.suspense,
              suspenseKey: o,
            }),
          );
        } else
          Array.isArray(e.children) &&
            e.children.forEach((o) => {
              o.component
                ? t
                  ? n.push({ ...o.component, suspense: t })
                  : n.push(o.component)
                : n.push(...this.getInternalInstanceChildren(o, t));
            });
      return n.filter((o) => {
        var s;
        return !fr(o) && !((s = o.type.devtools) != null && s.hide);
      });
    }
    mark(e, t = !1) {
      const n = We(e).instanceMap;
      (t || !n.has(e.__VUE_DEVTOOLS_NEXT_UID__)) &&
        (n.set(e.__VUE_DEVTOOLS_NEXT_UID__, e), (ie.value.instanceMap = n));
    }
    isKeepAlive(e) {
      return e.type.__isKeepAlive && e.__v_cache;
    }
    getKeepAliveCachedInstances(e) {
      return Array.from(e.__v_cache.values())
        .map((t) => t.component)
        .filter(Boolean);
    }
  };
  w(), w();
  var Wo = new Map(),
    Tr = "performance";
  async function p_(e, t, n, o, s, r) {
    const i = await We(t);
    if (!i) return;
    const l = it(o) || "Unknown Component",
      a = Z.perfUniqueGroupId++,
      u = `${n}-${s}`;
    if (
      (i.perfGroupIds.set(u, { groupId: a, time: r }),
      await e.addTimelineEvent({
        layerId: Tr,
        event: {
          time: Date.now(),
          data: { component: l, type: s, measure: "start" },
          title: l,
          subtitle: s,
          groupId: a,
        },
      }),
      Wo.has(u))
    ) {
      const { app: f, uid: c, instance: h, type: d, time: m } = Wo.get(u);
      Wo.delete(u), await Ta(e, f, c, h, d, m);
    }
  }
  function Ta(e, t, n, o, s, r) {
    const i = We(t);
    if (!i) return;
    const l = it(o) || "Unknown Component",
      a = `${n}-${s}`,
      u = i.perfGroupIds.get(a);
    if (u) {
      const f = u.groupId,
        c = u.time,
        h = r - c;
      e.addTimelineEvent({
        layerId: Tr,
        event: {
          time: Date.now(),
          data: {
            component: l,
            type: s,
            measure: "end",
            duration: {
              _custom: { type: "Duration", value: h, display: `${h} ms` },
            },
          },
          title: l,
          subtitle: s,
          groupId: f,
        },
      });
    } else Wo.set(a, { app: t, uid: n, instance: o, type: s, time: r });
  }
  var Oa = "component-event";
  function h_(e) {
    Uo &&
      (e.addTimelineLayer({ id: "mouse", label: "Mouse", color: 10768815 }),
      ["mousedown", "mouseup", "click", "dblclick"].forEach((t) => {
        !Z.timelineLayersState.recordingState ||
          !Z.timelineLayersState.mouseEventEnabled ||
          window.addEventListener(
            t,
            async (n) => {
              await e.addTimelineEvent({
                layerId: "mouse",
                event: {
                  time: Date.now(),
                  data: { type: t, x: n.clientX, y: n.clientY },
                  title: t,
                },
              });
            },
            { capture: !0, passive: !0 },
          );
      }),
      e.addTimelineLayer({ id: "keyboard", label: "Keyboard", color: 8475055 }),
      ["keyup", "keydown", "keypress"].forEach((t) => {
        window.addEventListener(
          t,
          async (n) => {
            !Z.timelineLayersState.recordingState ||
              !Z.timelineLayersState.keyboardEventEnabled ||
              (await e.addTimelineEvent({
                layerId: "keyboard",
                event: {
                  time: Date.now(),
                  data: {
                    type: t,
                    key: n.key,
                    ctrlKey: n.ctrlKey,
                    shiftKey: n.shiftKey,
                    altKey: n.altKey,
                    metaKey: n.metaKey,
                  },
                  title: n.key,
                },
              }));
          },
          { capture: !0, passive: !0 },
        );
      }),
      e.addTimelineLayer({ id: Oa, label: "Component events", color: 5226637 }),
      Be.on.componentEmit(async (t, n, o, s) => {
        if (
          !Z.timelineLayersState.recordingState ||
          !Z.timelineLayersState.componentEventEnabled
        )
          return;
        const r = await We(t);
        if (!r) return;
        const i = `${r.id}:${n.uid}`,
          l = it(n) || "Unknown Component";
        e.addTimelineEvent({
          layerId: Oa,
          event: {
            time: Date.now(),
            data: {
              component: {
                _custom: { type: "component-definition", display: l },
              },
              event: o,
              params: s,
            },
            title: o,
            subtitle: `by ${l}`,
            meta: { componentId: i },
          },
        });
      }),
      e.addTimelineLayer({ id: "performance", label: Tr, color: 4307050 }),
      Be.on.perfStart((t, n, o, s, r) => {
        !Z.timelineLayersState.recordingState ||
          !Z.timelineLayersState.performanceEventEnabled ||
          p_(e, t, n, o, s, r);
      }),
      Be.on.perfEnd((t, n, o, s, r) => {
        !Z.timelineLayersState.recordingState ||
          !Z.timelineLayersState.performanceEventEnabled ||
          Ta(e, t, n, o, s, r);
      }));
  }
  w();
  var __ = 10,
    qt = [];
  function m_(e) {
    if (typeof window > "u") return;
    const t = window;
    if (e && ((t.$vm = e), qt[0] !== e)) {
      qt.length >= __ && qt.pop();
      for (let n = qt.length; n > 0; n--) t[`$vm${n}`] = qt[n] = qt[n - 1];
      t.$vm0 = qt[0] = e;
    }
  }
  var Yt = "components";
  function g_(e) {
    return [
      { id: Yt, label: "Components", app: e },
      (o) => {
        o.addInspector({
          id: Yt,
          label: "Components",
          treeFilterPlaceholder: "Search components",
        }),
          h_(o),
          o.on.getInspectorTree(async (i) => {
            if (i.app === e && i.inspectorId === Yt) {
              const l = dn(ie.value, i.instanceId);
              if (l) {
                const a = new d_({
                  filterText: i.filter,
                  maxDepth: 100,
                  recursively: !1,
                  api: o,
                });
                i.rootNodes = await a.getComponentTree(l);
              }
            }
          }),
          o.on.getInspectorState(async (i) => {
            var l;
            if (i.app === e && i.inspectorId === Yt) {
              const a = u_({ instanceId: i.nodeId }),
                u = a.instance,
                f = (l = a.instance) == null ? void 0 : l.appContext.app,
                c = { componentInstance: u, app: f, instanceData: a };
              Ge.hooks.callHookWith((h) => {
                h.forEach((d) => d(c));
              }, "inspectComponent"),
                (i.state = a),
                m_(u);
            }
          }),
          o.on.editInspectorState(async (i) => {
            i.app === e &&
              i.inspectorId === Yt &&
              (Qp(i), await o.sendInspectorState("components"));
          });
        const s = Pt(() => {
            o.sendInspectorTree(Yt);
          }, 120),
          r = Pt(() => {
            o.sendInspectorState(Yt);
          }, 120);
        Be.on.componentAdded(async (i, l, a, u) => {
          var f, c, h;
          if (
            Z.highPerfModeEnabled ||
            ((h =
              (c =
                (f = i == null ? void 0 : i._instance) == null
                  ? void 0
                  : f.type) == null
                ? void 0
                : c.devtools) != null &&
              h.hide) ||
            !i ||
            (typeof l != "number" && !l) ||
            !u
          )
            return;
          const d = await Bo({ app: i, uid: l, instance: u }),
            m = await We(i);
          u &&
            (u.__VUE_DEVTOOLS_NEXT_UID__ == null &&
              (u.__VUE_DEVTOOLS_NEXT_UID__ = d),
            (m != null && m.instanceMap.has(d)) ||
              (m == null || m.instanceMap.set(d, u),
              ie.value.id === (m == null ? void 0 : m.id) &&
                (ie.value.instanceMap = m.instanceMap))),
            m && s();
        }),
          Be.on.componentUpdated(async (i, l, a, u) => {
            var f, c, h;
            if (
              Z.highPerfModeEnabled ||
              ((h =
                (c =
                  (f = i == null ? void 0 : i._instance) == null
                    ? void 0
                    : f.type) == null
                  ? void 0
                  : c.devtools) != null &&
                h.hide) ||
              !i ||
              (typeof l != "number" && !l) ||
              !u
            )
              return;
            const d = await Bo({ app: i, uid: l, instance: u }),
              m = await We(i);
            u &&
              (u.__VUE_DEVTOOLS_NEXT_UID__ == null &&
                (u.__VUE_DEVTOOLS_NEXT_UID__ = d),
              (m != null && m.instanceMap.has(d)) ||
                (m == null || m.instanceMap.set(d, u),
                ie.value.id === (m == null ? void 0 : m.id) &&
                  (ie.value.instanceMap = m.instanceMap))),
              m && (s(), r());
          }),
          Be.on.componentRemoved(async (i, l, a, u) => {
            var f, c, h;
            if (
              Z.highPerfModeEnabled ||
              ((h =
                (c =
                  (f = i == null ? void 0 : i._instance) == null
                    ? void 0
                    : f.type) == null
                  ? void 0
                  : c.devtools) != null &&
                h.hide) ||
              !i ||
              (typeof l != "number" && !l) ||
              !u
            )
              return;
            const d = await We(i);
            if (!d) return;
            const m = await Bo({ app: i, uid: l, instance: u });
            d == null || d.instanceMap.delete(m),
              ie.value.id === (d == null ? void 0 : d.id) &&
                (ie.value.instanceMap = d.instanceMap),
              s();
          });
      },
    ];
  }
  var xa, Aa;
  (Aa = (xa = x).__VUE_DEVTOOLS_KIT__REGISTERED_PLUGIN_APPS__) != null ||
    (xa.__VUE_DEVTOOLS_KIT__REGISTERED_PLUGIN_APPS__ = new Set());
  function v_(e, t) {
    return Be.setupDevToolsPlugin(e, t);
  }
  function Ca(e, t) {
    const [n, o] = e;
    if (n.app !== t) return;
    const s = new Mh({ plugin: { setupFn: o, descriptor: n }, ctx: Ge });
    n.packageName === "vuex" &&
      s.on.editInspectorState((r) => {
        s.sendInspectorState(r.inspectorId);
      }),
      o(s);
  }
  function y_(e) {
    x.__VUE_DEVTOOLS_KIT__REGISTERED_PLUGIN_APPS__.delete(e);
  }
  function Da(e) {
    x.__VUE_DEVTOOLS_KIT__REGISTERED_PLUGIN_APPS__.has(e) ||
      (x.__VUE_DEVTOOLS_KIT__REGISTERED_PLUGIN_APPS__.add(e),
      Hn.forEach((t) => {
        Ca(t, e);
      }));
  }
  w(), w();
  var zn = "__VUE_DEVTOOLS_ROUTER__",
    hn = "__VUE_DEVTOOLS_ROUTER_INFO__",
    Pa,
    Ia;
  (Ia = (Pa = x)[hn]) != null || (Pa[hn] = { currentRoute: null, routes: [] });
  var ka, Ra;
  (Ra = (ka = x)[zn]) != null || (ka[zn] = {}),
    new Proxy(x[hn], {
      get(e, t) {
        return x[hn][t];
      },
    }),
    new Proxy(x[zn], {
      get(e, t) {
        if (t === "value") return x[zn];
      },
    });
  function E_(e) {
    const t = new Map();
    return ((e == null ? void 0 : e.getRoutes()) || []).filter(
      (n) => !t.has(n.path) && t.set(n.path, 1),
    );
  }
  function Or(e) {
    return e.map((t) => {
      let { path: n, name: o, children: s, meta: r } = t;
      return (
        s != null && s.length && (s = Or(s)),
        { path: n, name: o, children: s, meta: r }
      );
    });
  }
  function b_(e) {
    if (e) {
      const {
        fullPath: t,
        hash: n,
        href: o,
        path: s,
        name: r,
        matched: i,
        params: l,
        query: a,
      } = e;
      return {
        fullPath: t,
        hash: n,
        href: o,
        path: s,
        name: r,
        params: l,
        query: a,
        matched: Or(i),
      };
    }
    return e;
  }
  function Na(e, t) {
    function n() {
      var o;
      const s =
          (o = e.app) == null ? void 0 : o.config.globalProperties.$router,
        r = b_(s == null ? void 0 : s.currentRoute.value),
        i = Or(E_(s)),
        l = console.warn;
      (console.warn = () => {}),
        (x[hn] = { currentRoute: r ? Rl(r) : {}, routes: Rl(i) }),
        (x[zn] = s),
        (console.warn = l);
    }
    n(),
      Be.on.componentUpdated(
        Pt(() => {
          var o;
          ((o = t.value) == null ? void 0 : o.app) === e.app &&
            (n(),
            !Z.highPerfModeEnabled &&
              Ge.hooks.callHook("routerInfoUpdated", { state: x[hn] }));
        }, 200),
      );
  }
  function w_(e) {
    return {
      async getInspectorTree(t) {
        const n = { ...t, app: ie.value.app, rootNodes: [] };
        return (
          await new Promise((o) => {
            e.callHookWith(async (s) => {
              await Promise.all(s.map((r) => r(n))), o();
            }, "getInspectorTree");
          }),
          n.rootNodes
        );
      },
      async getInspectorState(t) {
        const n = { ...t, app: ie.value.app, state: null },
          o = { currentTab: `custom-inspector:${t.inspectorId}` };
        return (
          await new Promise((s) => {
            e.callHookWith(async (r) => {
              await Promise.all(r.map((i) => i(n, o))), s();
            }, "getInspectorState");
          }),
          n.state
        );
      },
      editInspectorState(t) {
        const n = new Bl(),
          o = {
            ...t,
            app: ie.value.app,
            set: (s, r = t.path, i = t.state.value, l) => {
              n.set(s, r, i, l || n.createDefaultSetCallback(t.state));
            },
          };
        e.callHookWith((s) => {
          s.forEach((r) => r(o));
        }, "editInspectorState");
      },
      sendInspectorState(t) {
        const n = jo(t);
        e.callHook("sendInspectorState", {
          inspectorId: t,
          plugin: { descriptor: n.descriptor, setupFn: () => ({}) },
        });
      },
      inspectComponentInspector() {
        return ph();
      },
      cancelInspectComponentInspector() {
        return dh();
      },
      getComponentRenderCode(t) {
        const n = dn(ie.value, t);
        if (n)
          return (n == null ? void 0 : n.type) instanceof Function
            ? n.type.toString()
            : n.render.toString();
      },
      scrollToComponent(t) {
        return hh({ id: t });
      },
      openInEditor: Ph,
      getVueInspector: gh,
      toggleApp(t) {
        const n = kt.value.find((o) => o.id === t);
        n && (_a(t), Er(n), Na(n, ie), ta(), Da(n.app));
      },
      inspectDOM(t) {
        const n = dn(ie.value, t);
        if (n) {
          const [o] = Bn(n);
          o && (x.__VUE_DEVTOOLS_INSPECT_DOM_TARGET__ = o);
        }
      },
      updatePluginSettings(t, n, o) {
        Rh(t, n, o);
      },
      getPluginSettings(t) {
        return { options: kh(t), values: va(t) };
      },
    };
  }
  w();
  var Va, La;
  (La = (Va = x).__VUE_DEVTOOLS_ENV__) != null ||
    (Va.__VUE_DEVTOOLS_ENV__ = { vitePluginDetected: !1 });
  function S_() {
    return x.__VUE_DEVTOOLS_ENV__;
  }
  var $a = Sh(),
    Ma,
    Fa;
  (Fa = (Ma = x).__VUE_DEVTOOLS_KIT_CONTEXT__) != null ||
    (Ma.__VUE_DEVTOOLS_KIT_CONTEXT__ = {
      hooks: $a,
      get state() {
        return {
          ...Z,
          activeAppRecordId: ie.id,
          activeAppRecord: ie.value,
          appRecords: kt.value,
        };
      },
      api: w_($a),
    });
  var Ge = x.__VUE_DEVTOOLS_KIT_CONTEXT__;
  w();
  var T_ = Hp(jp()),
    Ua,
    Ba,
    Rt =
      (Ba = (Ua = x).__VUE_DEVTOOLS_NEXT_APP_RECORD_INFO__) != null
        ? Ba
        : (Ua.__VUE_DEVTOOLS_NEXT_APP_RECORD_INFO__ = {
            id: 0,
            appIds: new Set(),
          });
  function O_(e, t) {
    var n;
    return (
      ((n = e == null ? void 0 : e._component) == null ? void 0 : n.name) ||
      `App ${t}`
    );
  }
  function x_(e) {
    var t, n, o, s;
    if (e._instance) return e._instance;
    if (
      (n = (t = e._container) == null ? void 0 : t._vnode) != null &&
      n.component
    )
      return (s = (o = e._container) == null ? void 0 : o._vnode) == null
        ? void 0
        : s.component;
  }
  function A_(e) {
    const t = e.__VUE_DEVTOOLS_NEXT_APP_RECORD_ID__;
    t != null && (Rt.appIds.delete(t), Rt.id--);
  }
  function C_(e, t) {
    if (e.__VUE_DEVTOOLS_NEXT_APP_RECORD_ID__ != null)
      return e.__VUE_DEVTOOLS_NEXT_APP_RECORD_ID__;
    let n = t ?? (Rt.id++).toString();
    if (t && Rt.appIds.has(n)) {
      let o = 1;
      for (; Rt.appIds.has(`${t}_${o}`); ) o++;
      n = `${t}_${o}`;
    }
    return Rt.appIds.add(n), (e.__VUE_DEVTOOLS_NEXT_APP_RECORD_ID__ = n), n;
  }
  function D_(e, t) {
    const n = x_(e);
    if (n) {
      Rt.id++;
      const o = O_(e, Rt.id.toString()),
        r = {
          id: C_(e, (0, T_.default)(o)),
          name: o,
          types: t,
          instanceMap: new Map(),
          perfGroupIds: new Map(),
          rootInstance: n,
        };
      e.__VUE_DEVTOOLS_NEXT_APP_RECORD__ = r;
      const i = `${r.id}:root`;
      return (
        r.instanceMap.set(i, r.rootInstance),
        (r.rootInstance.__VUE_DEVTOOLS_NEXT_UID__ = i),
        r
      );
    } else return {};
  }
  function P_() {
    var e;
    br({ vitePluginDetected: S_().vitePluginDetected });
    const t =
      ((e = x.__VUE_DEVTOOLS_GLOBAL_HOOK__) == null ? void 0 : e.id) ===
      "vue-devtools-next";
    if (x.__VUE_DEVTOOLS_GLOBAL_HOOK__ && t) return;
    const n = Vh();
    if (x.__VUE_DEVTOOLS_HOOK_REPLAY__)
      try {
        x.__VUE_DEVTOOLS_HOOK_REPLAY__.forEach((o) => o(n)),
          (x.__VUE_DEVTOOLS_HOOK_REPLAY__ = []);
      } catch (o) {
        console.error("[vue-devtools] Error during hook replay", o);
      }
    n.once("init", (o) => {
      (x.__VUE_DEVTOOLS_VUE2_APP_DETECTED__ = !0),
        console.log(
          "%c[_____Vue DevTools v7 log_____]",
          "color: red; font-bold: 600; font-size: 16px;",
        ),
        console.log(
          "%cVue DevTools v7 detected in your Vue2 project. v7 only supports Vue3 and will not work.",
          "font-bold: 500; font-size: 14px;",
        ),
        console.log(
          "%cThe legacy version that supports both Vue 2 and Vue 3 has been moved to %c https://chromewebstore.google.com/detail/vuejs-devtools/iaajmlceplecbljialhhkmedjlpdblhp",
          "font-size: 14px;",
          "text-decoration: underline; cursor: pointer;font-size: 14px;",
        ),
        console.log(
          "%cPlease install and enable only the legacy version for your Vue2 app.",
          "font-bold: 500; font-size: 14px;",
        ),
        console.log(
          "%c[_____Vue DevTools v7 log_____]",
          "color: red; font-bold: 600; font-size: 16px;",
        );
    }),
      Be.on.setupDevtoolsPlugin((o, s) => {
        var r;
        Ih(o, s);
        const { app: i } = (r = ie) != null ? r : {};
        o.settings && ya(o.id, o.settings), i && Ca([o, s], i);
      }),
      Kp(() => {
        Hn.filter(([s]) => s.id !== "components").forEach(([s, r]) => {
          n.emit("devtools-plugin:setup", s, r, { target: "legacy" });
        });
      }),
      Be.on.vueAppInit(async (o, s, r) => {
        const l = { ...D_(o, r), app: o, version: s };
        Ah(l),
          kt.value.length === 1 && (Er(l), _a(l.id), Na(l, ie), Da(l.app)),
          v_(...g_(l.app)),
          br({ connected: !0 }),
          n.apps.push(o);
      }),
      Be.on.vueAppUnmount(async (o) => {
        const s = kt.value.filter((r) => r.app !== o);
        s.length === 0 && br({ connected: !1 }),
          Ch(o),
          A_(o),
          ie.value.app === o &&
            (Er(s[0]), Ge.hooks.callHook("sendActiveAppUpdatedToClient")),
          x.__VUE_DEVTOOLS_GLOBAL_HOOK__.apps.splice(
            x.__VUE_DEVTOOLS_GLOBAL_HOOK__.apps.indexOf(o),
            1,
          ),
          y_(o);
      }),
      Lh(n),
      x.__VUE_DEVTOOLS_GLOBAL_HOOK__
        ? bp || Object.assign(__VUE_DEVTOOLS_GLOBAL_HOOK__, n)
        : Object.defineProperty(x, "__VUE_DEVTOOLS_GLOBAL_HOOK__", {
            get() {
              return n;
            },
          });
  }
  w();
  function I_(e) {
    Z.highPerfModeEnabled = e ?? !Z.highPerfModeEnabled;
  }
  w(), w(), w();
  function k_(e) {
    Z.devtoolsClientDetected = { ...Z.devtoolsClientDetected, ...e };
    const t = Object.values(Z.devtoolsClientDetected).some(Boolean);
    I_(!t);
  }
  var Ha, za;
  (za = (Ha = x).__VUE_DEVTOOLS_UPDATE_CLIENT_DETECTED__) != null ||
    (Ha.__VUE_DEVTOOLS_UPDATE_CLIENT_DETECTED__ = k_),
    w(),
    w(),
    w(),
    w(),
    w(),
    w(),
    w();
  var R_ = class {
      constructor() {
        (this.keyToValue = new Map()), (this.valueToKey = new Map());
      }
      set(e, t) {
        this.keyToValue.set(e, t), this.valueToKey.set(t, e);
      }
      getByKey(e) {
        return this.keyToValue.get(e);
      }
      getByValue(e) {
        return this.valueToKey.get(e);
      }
      clear() {
        this.keyToValue.clear(), this.valueToKey.clear();
      }
    },
    ja = class {
      constructor(e) {
        (this.generateIdentifier = e), (this.kv = new R_());
      }
      register(e, t) {
        this.kv.getByValue(e) ||
          (t || (t = this.generateIdentifier(e)), this.kv.set(t, e));
      }
      clear() {
        this.kv.clear();
      }
      getIdentifier(e) {
        return this.kv.getByValue(e);
      }
      getValue(e) {
        return this.kv.getByKey(e);
      }
    },
    N_ = class extends ja {
      constructor() {
        super((e) => e.name), (this.classToAllowedProps = new Map());
      }
      register(e, t) {
        typeof t == "object"
          ? (t.allowProps && this.classToAllowedProps.set(e, t.allowProps),
            super.register(e, t.identifier))
          : super.register(e, t);
      }
      getAllowedProps(e) {
        return this.classToAllowedProps.get(e);
      }
    };
  w(), w();
  function V_(e) {
    if ("values" in Object) return Object.values(e);
    const t = [];
    for (const n in e) e.hasOwnProperty(n) && t.push(e[n]);
    return t;
  }
  function L_(e, t) {
    const n = V_(e);
    if ("find" in n) return n.find(t);
    const o = n;
    for (let s = 0; s < o.length; s++) {
      const r = o[s];
      if (t(r)) return r;
    }
  }
  function _n(e, t) {
    Object.entries(e).forEach(([n, o]) => t(o, n));
  }
  function Go(e, t) {
    return e.indexOf(t) !== -1;
  }
  function Ka(e, t) {
    for (let n = 0; n < e.length; n++) {
      const o = e[n];
      if (t(o)) return o;
    }
  }
  var $_ = class {
    constructor() {
      this.transfomers = {};
    }
    register(e) {
      this.transfomers[e.name] = e;
    }
    findApplicable(e) {
      return L_(this.transfomers, (t) => t.isApplicable(e));
    }
    findByName(e) {
      return this.transfomers[e];
    }
  };
  w(), w();
  var M_ = (e) => Object.prototype.toString.call(e).slice(8, -1),
    Wa = (e) => typeof e > "u",
    F_ = (e) => e === null,
    jn = (e) =>
      typeof e != "object" || e === null || e === Object.prototype
        ? !1
        : Object.getPrototypeOf(e) === null
          ? !0
          : Object.getPrototypeOf(e) === Object.prototype,
    xr = (e) => jn(e) && Object.keys(e).length === 0,
    Nt = (e) => Array.isArray(e),
    U_ = (e) => typeof e == "string",
    B_ = (e) => typeof e == "number" && !isNaN(e),
    H_ = (e) => typeof e == "boolean",
    z_ = (e) => e instanceof RegExp,
    Kn = (e) => e instanceof Map,
    Wn = (e) => e instanceof Set,
    Ga = (e) => M_(e) === "Symbol",
    j_ = (e) => e instanceof Date && !isNaN(e.valueOf()),
    K_ = (e) => e instanceof Error,
    qa = (e) => typeof e == "number" && isNaN(e),
    W_ = (e) => H_(e) || F_(e) || Wa(e) || B_(e) || U_(e) || Ga(e),
    G_ = (e) => typeof e == "bigint",
    q_ = (e) => e === 1 / 0 || e === -1 / 0,
    Y_ = (e) => ArrayBuffer.isView(e) && !(e instanceof DataView),
    X_ = (e) => e instanceof URL;
  w();
  var Ya = (e) => e.replace(/\./g, "\\."),
    Ar = (e) => e.map(String).map(Ya).join("."),
    Gn = (e) => {
      const t = [];
      let n = "";
      for (let s = 0; s < e.length; s++) {
        let r = e.charAt(s);
        if (r === "\\" && e.charAt(s + 1) === ".") {
          (n += "."), s++;
          continue;
        }
        if (r === ".") {
          t.push(n), (n = "");
          continue;
        }
        n += r;
      }
      const o = n;
      return t.push(o), t;
    };
  w();
  function at(e, t, n, o) {
    return { isApplicable: e, annotation: t, transform: n, untransform: o };
  }
  var Xa = [
    at(
      Wa,
      "undefined",
      () => null,
      () => {},
    ),
    at(
      G_,
      "bigint",
      (e) => e.toString(),
      (e) =>
        typeof BigInt < "u"
          ? BigInt(e)
          : (console.error("Please add a BigInt polyfill."), e),
    ),
    at(
      j_,
      "Date",
      (e) => e.toISOString(),
      (e) => new Date(e),
    ),
    at(
      K_,
      "Error",
      (e, t) => {
        const n = { name: e.name, message: e.message };
        return (
          t.allowedErrorProps.forEach((o) => {
            n[o] = e[o];
          }),
          n
        );
      },
      (e, t) => {
        const n = new Error(e.message);
        return (
          (n.name = e.name),
          (n.stack = e.stack),
          t.allowedErrorProps.forEach((o) => {
            n[o] = e[o];
          }),
          n
        );
      },
    ),
    at(
      z_,
      "regexp",
      (e) => "" + e,
      (e) => {
        const t = e.slice(1, e.lastIndexOf("/")),
          n = e.slice(e.lastIndexOf("/") + 1);
        return new RegExp(t, n);
      },
    ),
    at(
      Wn,
      "set",
      (e) => [...e.values()],
      (e) => new Set(e),
    ),
    at(
      Kn,
      "map",
      (e) => [...e.entries()],
      (e) => new Map(e),
    ),
    at(
      (e) => qa(e) || q_(e),
      "number",
      (e) => (qa(e) ? "NaN" : e > 0 ? "Infinity" : "-Infinity"),
      Number,
    ),
    at(
      (e) => e === 0 && 1 / e === -1 / 0,
      "number",
      () => "-0",
      Number,
    ),
    at(
      X_,
      "URL",
      (e) => e.toString(),
      (e) => new URL(e),
    ),
  ];
  function qo(e, t, n, o) {
    return { isApplicable: e, annotation: t, transform: n, untransform: o };
  }
  var Za = qo(
      (e, t) => (Ga(e) ? !!t.symbolRegistry.getIdentifier(e) : !1),
      (e, t) => ["symbol", t.symbolRegistry.getIdentifier(e)],
      (e) => e.description,
      (e, t, n) => {
        const o = n.symbolRegistry.getValue(t[1]);
        if (!o) throw new Error("Trying to deserialize unknown symbol");
        return o;
      },
    ),
    Z_ = [
      Int8Array,
      Uint8Array,
      Int16Array,
      Uint16Array,
      Int32Array,
      Uint32Array,
      Float32Array,
      Float64Array,
      Uint8ClampedArray,
    ].reduce((e, t) => ((e[t.name] = t), e), {}),
    Ja = qo(
      Y_,
      (e) => ["typed-array", e.constructor.name],
      (e) => [...e],
      (e, t) => {
        const n = Z_[t[1]];
        if (!n) throw new Error("Trying to deserialize unknown typed array");
        return new n(e);
      },
    );
  function Qa(e, t) {
    return e != null && e.constructor
      ? !!t.classRegistry.getIdentifier(e.constructor)
      : !1;
  }
  var eu = qo(
      Qa,
      (e, t) => ["class", t.classRegistry.getIdentifier(e.constructor)],
      (e, t) => {
        const n = t.classRegistry.getAllowedProps(e.constructor);
        if (!n) return { ...e };
        const o = {};
        return (
          n.forEach((s) => {
            o[s] = e[s];
          }),
          o
        );
      },
      (e, t, n) => {
        const o = n.classRegistry.getValue(t[1]);
        if (!o)
          throw new Error(
            "Trying to deserialize unknown class - check https://github.com/blitz-js/superjson/issues/116#issuecomment-773996564",
          );
        return Object.assign(Object.create(o.prototype), e);
      },
    ),
    tu = qo(
      (e, t) => !!t.customTransformerRegistry.findApplicable(e),
      (e, t) => ["custom", t.customTransformerRegistry.findApplicable(e).name],
      (e, t) => t.customTransformerRegistry.findApplicable(e).serialize(e),
      (e, t, n) => {
        const o = n.customTransformerRegistry.findByName(t[1]);
        if (!o) throw new Error("Trying to deserialize unknown custom value");
        return o.deserialize(e);
      },
    ),
    J_ = [eu, Za, tu, Ja],
    nu = (e, t) => {
      const n = Ka(J_, (s) => s.isApplicable(e, t));
      if (n) return { value: n.transform(e, t), type: n.annotation(e, t) };
      const o = Ka(Xa, (s) => s.isApplicable(e, t));
      if (o) return { value: o.transform(e, t), type: o.annotation };
    },
    ou = {};
  Xa.forEach((e) => {
    ou[e.annotation] = e;
  });
  var Q_ = (e, t, n) => {
    if (Nt(t))
      switch (t[0]) {
        case "symbol":
          return Za.untransform(e, t, n);
        case "class":
          return eu.untransform(e, t, n);
        case "custom":
          return tu.untransform(e, t, n);
        case "typed-array":
          return Ja.untransform(e, t, n);
        default:
          throw new Error("Unknown transformation: " + t);
      }
    else {
      const o = ou[t];
      if (!o) throw new Error("Unknown transformation: " + t);
      return o.untransform(e, n);
    }
  };
  w();
  var mn = (e, t) => {
    const n = e.keys();
    for (; t > 0; ) n.next(), t--;
    return n.next().value;
  };
  function su(e) {
    if (Go(e, "__proto__"))
      throw new Error("__proto__ is not allowed as a property");
    if (Go(e, "prototype"))
      throw new Error("prototype is not allowed as a property");
    if (Go(e, "constructor"))
      throw new Error("constructor is not allowed as a property");
  }
  var em = (e, t) => {
      su(t);
      for (let n = 0; n < t.length; n++) {
        const o = t[n];
        if (Wn(e)) e = mn(e, +o);
        else if (Kn(e)) {
          const s = +o,
            r = +t[++n] == 0 ? "key" : "value",
            i = mn(e, s);
          switch (r) {
            case "key":
              e = i;
              break;
            case "value":
              e = e.get(i);
              break;
          }
        } else e = e[o];
      }
      return e;
    },
    Cr = (e, t, n) => {
      if ((su(t), t.length === 0)) return n(e);
      let o = e;
      for (let r = 0; r < t.length - 1; r++) {
        const i = t[r];
        if (Nt(o)) {
          const l = +i;
          o = o[l];
        } else if (jn(o)) o = o[i];
        else if (Wn(o)) {
          const l = +i;
          o = mn(o, l);
        } else if (Kn(o)) {
          if (r === t.length - 2) break;
          const a = +i,
            u = +t[++r] == 0 ? "key" : "value",
            f = mn(o, a);
          switch (u) {
            case "key":
              o = f;
              break;
            case "value":
              o = o.get(f);
              break;
          }
        }
      }
      const s = t[t.length - 1];
      if ((Nt(o) ? (o[+s] = n(o[+s])) : jn(o) && (o[s] = n(o[s])), Wn(o))) {
        const r = mn(o, +s),
          i = n(r);
        r !== i && (o.delete(r), o.add(i));
      }
      if (Kn(o)) {
        const r = +t[t.length - 2],
          i = mn(o, r);
        switch (+s == 0 ? "key" : "value") {
          case "key": {
            const a = n(i);
            o.set(a, o.get(i)), a !== i && o.delete(i);
            break;
          }
          case "value": {
            o.set(i, n(o.get(i)));
            break;
          }
        }
      }
      return e;
    };
  function Dr(e, t, n = []) {
    if (!e) return;
    if (!Nt(e)) {
      _n(e, (r, i) => Dr(r, t, [...n, ...Gn(i)]));
      return;
    }
    const [o, s] = e;
    s &&
      _n(s, (r, i) => {
        Dr(r, t, [...n, ...Gn(i)]);
      }),
      t(o, n);
  }
  function tm(e, t, n) {
    return (
      Dr(t, (o, s) => {
        e = Cr(e, s, (r) => Q_(r, o, n));
      }),
      e
    );
  }
  function nm(e, t) {
    function n(o, s) {
      const r = em(e, Gn(s));
      o.map(Gn).forEach((i) => {
        e = Cr(e, i, () => r);
      });
    }
    if (Nt(t)) {
      const [o, s] = t;
      o.forEach((r) => {
        e = Cr(e, Gn(r), () => e);
      }),
        s && _n(s, n);
    } else _n(t, n);
    return e;
  }
  var om = (e, t) => jn(e) || Nt(e) || Kn(e) || Wn(e) || Qa(e, t);
  function sm(e, t, n) {
    const o = n.get(e);
    o ? o.push(t) : n.set(e, [t]);
  }
  function rm(e, t) {
    const n = {};
    let o;
    return (
      e.forEach((s) => {
        if (s.length <= 1) return;
        t ||
          (s = s.map((l) => l.map(String)).sort((l, a) => l.length - a.length));
        const [r, ...i] = s;
        r.length === 0 ? (o = i.map(Ar)) : (n[Ar(r)] = i.map(Ar));
      }),
      o ? (xr(n) ? [o] : [o, n]) : xr(n) ? void 0 : n
    );
  }
  var ru = (e, t, n, o, s = [], r = [], i = new Map()) => {
    var l;
    const a = W_(e);
    if (!a) {
      sm(e, s, t);
      const m = i.get(e);
      if (m) return o ? { transformedValue: null } : m;
    }
    if (!om(e, n)) {
      const m = nu(e, n),
        v = m
          ? { transformedValue: m.value, annotations: [m.type] }
          : { transformedValue: e };
      return a || i.set(e, v), v;
    }
    if (Go(r, e)) return { transformedValue: null };
    const u = nu(e, n),
      f = (l = u == null ? void 0 : u.value) != null ? l : e,
      c = Nt(f) ? [] : {},
      h = {};
    _n(f, (m, v) => {
      if (v === "__proto__" || v === "constructor" || v === "prototype")
        throw new Error(
          `Detected property ${v}. This is a prototype pollution risk, please remove it from your object.`,
        );
      const y = ru(m, t, n, o, [...s, v], [...r, e], i);
      (c[v] = y.transformedValue),
        Nt(y.annotations)
          ? (h[v] = y.annotations)
          : jn(y.annotations) &&
            _n(y.annotations, (g, S) => {
              h[Ya(v) + "." + S] = g;
            });
    });
    const d = xr(h)
      ? { transformedValue: c, annotations: u ? [u.type] : void 0 }
      : { transformedValue: c, annotations: u ? [u.type, h] : h };
    return a || i.set(e, d), d;
  };
  w(), w();
  function iu(e) {
    return Object.prototype.toString.call(e).slice(8, -1);
  }
  function lu(e) {
    return iu(e) === "Array";
  }
  function im(e) {
    if (iu(e) !== "Object") return !1;
    const t = Object.getPrototypeOf(e);
    return !!t && t.constructor === Object && t === Object.prototype;
  }
  function lm(e, t, n, o, s) {
    const r = {}.propertyIsEnumerable.call(o, t)
      ? "enumerable"
      : "nonenumerable";
    r === "enumerable" && (e[t] = n),
      s &&
        r === "nonenumerable" &&
        Object.defineProperty(e, t, {
          value: n,
          enumerable: !1,
          writable: !0,
          configurable: !0,
        });
  }
  function Pr(e, t = {}) {
    if (lu(e)) return e.map((s) => Pr(s, t));
    if (!im(e)) return e;
    const n = Object.getOwnPropertyNames(e),
      o = Object.getOwnPropertySymbols(e);
    return [...n, ...o].reduce((s, r) => {
      if (lu(t.props) && !t.props.includes(r)) return s;
      const i = e[r],
        l = Pr(i, t);
      return lm(s, r, l, e, t.nonenumerable), s;
    }, {});
  }
  var ue = class {
    constructor({ dedupe: e = !1 } = {}) {
      (this.classRegistry = new N_()),
        (this.symbolRegistry = new ja((t) => {
          var n;
          return (n = t.description) != null ? n : "";
        })),
        (this.customTransformerRegistry = new $_()),
        (this.allowedErrorProps = []),
        (this.dedupe = e);
    }
    serialize(e) {
      const t = new Map(),
        n = ru(e, t, this, this.dedupe),
        o = { json: n.transformedValue };
      n.annotations && (o.meta = { ...o.meta, values: n.annotations });
      const s = rm(t, this.dedupe);
      return s && (o.meta = { ...o.meta, referentialEqualities: s }), o;
    }
    deserialize(e) {
      const { json: t, meta: n } = e;
      let o = Pr(t);
      return (
        n != null && n.values && (o = tm(o, n.values, this)),
        n != null &&
          n.referentialEqualities &&
          (o = nm(o, n.referentialEqualities)),
        o
      );
    }
    stringify(e) {
      return JSON.stringify(this.serialize(e));
    }
    parse(e) {
      return this.deserialize(JSON.parse(e));
    }
    registerClass(e, t) {
      this.classRegistry.register(e, t);
    }
    registerSymbol(e, t) {
      this.symbolRegistry.register(e, t);
    }
    registerCustom(e, t) {
      this.customTransformerRegistry.register({ name: t, ...e });
    }
    allowErrorProps(...e) {
      this.allowedErrorProps.push(...e);
    }
  };
  (ue.defaultInstance = new ue()),
    (ue.serialize = ue.defaultInstance.serialize.bind(ue.defaultInstance)),
    (ue.deserialize = ue.defaultInstance.deserialize.bind(ue.defaultInstance)),
    (ue.stringify = ue.defaultInstance.stringify.bind(ue.defaultInstance)),
    (ue.parse = ue.defaultInstance.parse.bind(ue.defaultInstance)),
    (ue.registerClass = ue.defaultInstance.registerClass.bind(
      ue.defaultInstance,
    )),
    (ue.registerSymbol = ue.defaultInstance.registerSymbol.bind(
      ue.defaultInstance,
    )),
    (ue.registerCustom = ue.defaultInstance.registerCustom.bind(
      ue.defaultInstance,
    )),
    (ue.allowErrorProps = ue.defaultInstance.allowErrorProps.bind(
      ue.defaultInstance,
    )),
    w(),
    w(),
    w(),
    w(),
    w(),
    w(),
    w(),
    w(),
    w(),
    w(),
    w(),
    w(),
    w(),
    w();
  var am = "iframe:server-context";
  function um(e) {
    x[am] = e;
  }
  w(), w(), w(), w(), w(), w(), w(), w(), w();
  var au, uu;
  (uu = (au = x).__VUE_DEVTOOLS_KIT_MESSAGE_CHANNELS__) != null ||
    (au.__VUE_DEVTOOLS_KIT_MESSAGE_CHANNELS__ = []);
  var cu, fu;
  (fu = (cu = x).__VUE_DEVTOOLS_KIT_RPC_CLIENT__) != null ||
    (cu.__VUE_DEVTOOLS_KIT_RPC_CLIENT__ = null);
  var du, pu;
  (pu = (du = x).__VUE_DEVTOOLS_KIT_RPC_SERVER__) != null ||
    (du.__VUE_DEVTOOLS_KIT_RPC_SERVER__ = null);
  var hu, _u;
  (_u = (hu = x).__VUE_DEVTOOLS_KIT_VITE_RPC_CLIENT__) != null ||
    (hu.__VUE_DEVTOOLS_KIT_VITE_RPC_CLIENT__ = null);
  var mu, gu;
  (gu = (mu = x).__VUE_DEVTOOLS_KIT_VITE_RPC_SERVER__) != null ||
    (mu.__VUE_DEVTOOLS_KIT_VITE_RPC_SERVER__ = null);
  var vu, yu;
  (yu = (vu = x).__VUE_DEVTOOLS_KIT_BROADCAST_RPC_SERVER__) != null ||
    (vu.__VUE_DEVTOOLS_KIT_BROADCAST_RPC_SERVER__ = null);
  function cm() {
    return x.__VUE_DEVTOOLS_KIT_RPC_CLIENT__;
  }
  function Eu() {
    return x.__VUE_DEVTOOLS_KIT_RPC_SERVER__;
  }
  function fm() {
    return x.__VUE_DEVTOOLS_KIT_VITE_RPC_CLIENT__;
  }
  w(), w(), w(), w(), w(), w(), w();
  var bu = {
    hook: Be,
    init: () => {
      P_();
    },
    get ctx() {
      return Ge;
    },
    get api() {
      return Ge.api;
    },
  };
  function dm() {
    var e;
    return (e = x.__VUE_DEVTOOLS_CLIENT_URL__) != null
      ? e
      : (() => {
          if (Uo) {
            const t = document.querySelector(
              "meta[name=__VUE_DEVTOOLS_CLIENT_URL__]",
            );
            if (t) return t.getAttribute("content");
          }
          return "";
        })();
  }
  function Ir(e, t = {}, n) {
    for (const o in e) {
      const s = e[o],
        r = n ? `${n}:${o}` : o;
      typeof s == "object" && s !== null
        ? Ir(s, t, r)
        : typeof s == "function" && (t[r] = s);
    }
    return t;
  }
  var pm = { run: (e) => e() },
    hm = () => pm,
    wu = typeof console.createTask < "u" ? console.createTask : hm;
  function _m(e, t) {
    const n = t.shift(),
      o = wu(n);
    return e.reduce(
      (s, r) => s.then(() => o.run(() => r(...t))),
      Promise.resolve(),
    );
  }
  function mm(e, t) {
    const n = t.shift(),
      o = wu(n);
    return Promise.all(e.map((s) => o.run(() => s(...t))));
  }
  function kr(e, t) {
    for (const n of [...e]) n(t);
  }
  var gm = class {
    constructor() {
      (this._hooks = {}),
        (this._before = void 0),
        (this._after = void 0),
        (this._deprecatedMessages = void 0),
        (this._deprecatedHooks = {}),
        (this.hook = this.hook.bind(this)),
        (this.callHook = this.callHook.bind(this)),
        (this.callHookWith = this.callHookWith.bind(this));
    }
    hook(e, t, n = {}) {
      if (!e || typeof t != "function") return () => {};
      const o = e;
      let s;
      for (; this._deprecatedHooks[e]; )
        (s = this._deprecatedHooks[e]), (e = s.to);
      if (s && !n.allowDeprecated) {
        let r = s.message;
        r ||
          (r =
            `${o} hook has been deprecated` +
            (s.to ? `, please use ${s.to}` : "")),
          this._deprecatedMessages || (this._deprecatedMessages = new Set()),
          this._deprecatedMessages.has(r) ||
            (console.warn(r), this._deprecatedMessages.add(r));
      }
      if (!t.name)
        try {
          Object.defineProperty(t, "name", {
            get: () => "_" + e.replace(/\W+/g, "_") + "_hook_cb",
            configurable: !0,
          });
        } catch {}
      return (
        (this._hooks[e] = this._hooks[e] || []),
        this._hooks[e].push(t),
        () => {
          t && (this.removeHook(e, t), (t = void 0));
        }
      );
    }
    hookOnce(e, t) {
      let n,
        o = (...s) => (
          typeof n == "function" && n(), (n = void 0), (o = void 0), t(...s)
        );
      return (n = this.hook(e, o)), n;
    }
    removeHook(e, t) {
      if (this._hooks[e]) {
        const n = this._hooks[e].indexOf(t);
        n !== -1 && this._hooks[e].splice(n, 1),
          this._hooks[e].length === 0 && delete this._hooks[e];
      }
    }
    deprecateHook(e, t) {
      this._deprecatedHooks[e] = typeof t == "string" ? { to: t } : t;
      const n = this._hooks[e] || [];
      delete this._hooks[e];
      for (const o of n) this.hook(e, o);
    }
    deprecateHooks(e) {
      Object.assign(this._deprecatedHooks, e);
      for (const t in e) this.deprecateHook(t, e[t]);
    }
    addHooks(e) {
      const t = Ir(e),
        n = Object.keys(t).map((o) => this.hook(o, t[o]));
      return () => {
        for (const o of n.splice(0, n.length)) o();
      };
    }
    removeHooks(e) {
      const t = Ir(e);
      for (const n in t) this.removeHook(n, t[n]);
    }
    removeAllHooks() {
      for (const e in this._hooks) delete this._hooks[e];
    }
    callHook(e, ...t) {
      return t.unshift(e), this.callHookWith(_m, e, ...t);
    }
    callHookParallel(e, ...t) {
      return t.unshift(e), this.callHookWith(mm, e, ...t);
    }
    callHookWith(e, t, ...n) {
      const o =
        this._before || this._after
          ? { name: t, args: n, context: {} }
          : void 0;
      this._before && kr(this._before, o);
      const s = e(t in this._hooks ? [...this._hooks[t]] : [], n);
      return s instanceof Promise
        ? s.finally(() => {
            this._after && o && kr(this._after, o);
          })
        : (this._after && o && kr(this._after, o), s);
    }
    beforeEach(e) {
      return (
        (this._before = this._before || []),
        this._before.push(e),
        () => {
          if (this._before !== void 0) {
            const t = this._before.indexOf(e);
            t !== -1 && this._before.splice(t, 1);
          }
        }
      );
    }
    afterEach(e) {
      return (
        (this._after = this._after || []),
        this._after.push(e),
        () => {
          if (this._after !== void 0) {
            const t = this._after.indexOf(e);
            t !== -1 && this._after.splice(t, 1);
          }
        }
      );
    }
  };
  function Su() {
    return new gm();
  }
  Su(),
    new Proxy(
      { value: {}, functions: {} },
      {
        get(e, t) {
          const n = cm();
          if (t === "value") return n;
          if (t === "functions") return n.$functions;
        },
      },
    );
  var Tu = new Proxy(
    { value: {}, functions: {} },
    {
      get(e, t) {
        const n = Eu();
        if (t === "value") return n;
        if (t === "functions") return n.functions;
      },
    },
  );
  function vm(e) {
    let t = null;
    const n = 120;
    function o() {
      Tu.value.clients.length > 0 && (e(), clearTimeout(t));
    }
    t = setInterval(() => {
      o();
    }, n);
  }
  Su(),
    new Proxy(
      { value: {}, functions: {} },
      {
        get(e, t) {
          const n = fm();
          if (t === "value") return n;
          if (t === "functions") return n == null ? void 0 : n.$functions;
        },
      },
    );
  const ym = ["top", "right", "bottom", "left"],
    Ou = ["start", "end"],
    xu = ym.reduce((e, t) => e.concat(t, t + "-" + Ou[0], t + "-" + Ou[1]), []),
    qn = Math.min,
    Xt = Math.max,
    Em = { left: "right", right: "left", bottom: "top", top: "bottom" },
    bm = { start: "end", end: "start" };
  function Rr(e, t, n) {
    return Xt(e, qn(t, n));
  }
  function Zt(e, t) {
    return typeof e == "function" ? e(t) : e;
  }
  function ut(e) {
    return e.split("-")[0];
  }
  function qe(e) {
    return e.split("-")[1];
  }
  function Au(e) {
    return e === "x" ? "y" : "x";
  }
  function Nr(e) {
    return e === "y" ? "height" : "width";
  }
  function Yn(e) {
    return ["top", "bottom"].includes(ut(e)) ? "y" : "x";
  }
  function Vr(e) {
    return Au(Yn(e));
  }
  function Cu(e, t, n) {
    n === void 0 && (n = !1);
    const o = qe(e),
      s = Vr(e),
      r = Nr(s);
    let i =
      s === "x"
        ? o === (n ? "end" : "start")
          ? "right"
          : "left"
        : o === "start"
          ? "bottom"
          : "top";
    return t.reference[r] > t.floating[r] && (i = Xo(i)), [i, Xo(i)];
  }
  function wm(e) {
    const t = Xo(e);
    return [Yo(e), t, Yo(t)];
  }
  function Yo(e) {
    return e.replace(/start|end/g, (t) => bm[t]);
  }
  function Sm(e, t, n) {
    const o = ["left", "right"],
      s = ["right", "left"],
      r = ["top", "bottom"],
      i = ["bottom", "top"];
    switch (e) {
      case "top":
      case "bottom":
        return n ? (t ? s : o) : t ? o : s;
      case "left":
      case "right":
        return t ? r : i;
      default:
        return [];
    }
  }
  function Tm(e, t, n, o) {
    const s = qe(e);
    let r = Sm(ut(e), n === "start", o);
    return (
      s && ((r = r.map((i) => i + "-" + s)), t && (r = r.concat(r.map(Yo)))), r
    );
  }
  function Xo(e) {
    return e.replace(/left|right|bottom|top/g, (t) => Em[t]);
  }
  function Om(e) {
    return { top: 0, right: 0, bottom: 0, left: 0, ...e };
  }
  function Du(e) {
    return typeof e != "number"
      ? Om(e)
      : { top: e, right: e, bottom: e, left: e };
  }
  function Xn(e) {
    return {
      ...e,
      top: e.y,
      left: e.x,
      right: e.x + e.width,
      bottom: e.y + e.height,
    };
  }
  function Pu(e, t, n) {
    let { reference: o, floating: s } = e;
    const r = Yn(t),
      i = Vr(t),
      l = Nr(i),
      a = ut(t),
      u = r === "y",
      f = o.x + o.width / 2 - s.width / 2,
      c = o.y + o.height / 2 - s.height / 2,
      h = o[l] / 2 - s[l] / 2;
    let d;
    switch (a) {
      case "top":
        d = { x: f, y: o.y - s.height };
        break;
      case "bottom":
        d = { x: f, y: o.y + o.height };
        break;
      case "right":
        d = { x: o.x + o.width, y: c };
        break;
      case "left":
        d = { x: o.x - s.width, y: c };
        break;
      default:
        d = { x: o.x, y: o.y };
    }
    switch (qe(t)) {
      case "start":
        d[i] -= h * (n && u ? -1 : 1);
        break;
      case "end":
        d[i] += h * (n && u ? -1 : 1);
        break;
    }
    return d;
  }
  const xm = async (e, t, n) => {
    const {
        placement: o = "bottom",
        strategy: s = "absolute",
        middleware: r = [],
        platform: i,
      } = n,
      l = r.filter(Boolean),
      a = await (i.isRTL == null ? void 0 : i.isRTL(t));
    let u = await i.getElementRects({ reference: e, floating: t, strategy: s }),
      { x: f, y: c } = Pu(u, o, a),
      h = o,
      d = {},
      m = 0;
    for (let v = 0; v < l.length; v++) {
      const { name: y, fn: g } = l[v],
        {
          x: S,
          y: P,
          data: b,
          reset: D,
        } = await g({
          x: f,
          y: c,
          initialPlacement: o,
          placement: h,
          strategy: s,
          middlewareData: d,
          rects: u,
          platform: i,
          elements: { reference: e, floating: t },
        });
      if (
        ((f = S ?? f),
        (c = P ?? c),
        (d = { ...d, [y]: { ...d[y], ...b } }),
        D && m <= 50)
      ) {
        m++,
          typeof D == "object" &&
            (D.placement && (h = D.placement),
            D.rects &&
              (u =
                D.rects === !0
                  ? await i.getElementRects({
                      reference: e,
                      floating: t,
                      strategy: s,
                    })
                  : D.rects),
            ({ x: f, y: c } = Pu(u, h, a))),
          (v = -1);
        continue;
      }
    }
    return { x: f, y: c, placement: h, strategy: s, middlewareData: d };
  };
  async function Zo(e, t) {
    var n;
    t === void 0 && (t = {});
    const { x: o, y: s, platform: r, rects: i, elements: l, strategy: a } = e,
      {
        boundary: u = "clippingAncestors",
        rootBoundary: f = "viewport",
        elementContext: c = "floating",
        altBoundary: h = !1,
        padding: d = 0,
      } = Zt(t, e),
      m = Du(d),
      y = l[h ? (c === "floating" ? "reference" : "floating") : c],
      g = Xn(
        await r.getClippingRect({
          element:
            (n = await (r.isElement == null ? void 0 : r.isElement(y))) ==
              null || n
              ? y
              : y.contextElement ||
                (await (r.getDocumentElement == null
                  ? void 0
                  : r.getDocumentElement(l.floating))),
          boundary: u,
          rootBoundary: f,
          strategy: a,
        }),
      ),
      S = c === "floating" ? { ...i.floating, x: o, y: s } : i.reference,
      P = await (r.getOffsetParent == null
        ? void 0
        : r.getOffsetParent(l.floating)),
      b = (await (r.isElement == null ? void 0 : r.isElement(P)))
        ? (await (r.getScale == null ? void 0 : r.getScale(P))) || {
            x: 1,
            y: 1,
          }
        : { x: 1, y: 1 },
      D = Xn(
        r.convertOffsetParentRelativeRectToViewportRelativeRect
          ? await r.convertOffsetParentRelativeRectToViewportRelativeRect({
              rect: S,
              offsetParent: P,
              strategy: a,
            })
          : S,
      );
    return {
      top: (g.top - D.top + m.top) / b.y,
      bottom: (D.bottom - g.bottom + m.bottom) / b.y,
      left: (g.left - D.left + m.left) / b.x,
      right: (D.right - g.right + m.right) / b.x,
    };
  }
  const Am = (e) => ({
    name: "arrow",
    options: e,
    async fn(t) {
      const {
          x: n,
          y: o,
          placement: s,
          rects: r,
          platform: i,
          elements: l,
        } = t,
        { element: a, padding: u = 0 } = Zt(e, t) || {};
      if (a == null) return {};
      const f = Du(u),
        c = { x: n, y: o },
        h = Vr(s),
        d = Nr(h),
        m = await i.getDimensions(a),
        v = h === "y",
        y = v ? "top" : "left",
        g = v ? "bottom" : "right",
        S = v ? "clientHeight" : "clientWidth",
        P = r.reference[d] + r.reference[h] - c[h] - r.floating[d],
        b = c[h] - r.reference[h],
        D = await (i.getOffsetParent == null ? void 0 : i.getOffsetParent(a));
      let L = D ? D[S] : 0;
      (!L || !(await (i.isElement == null ? void 0 : i.isElement(D)))) &&
        (L = l.floating[S] || r.floating[d]);
      const B = P / 2 - b / 2,
        j = L / 2 - m[d] / 2 - 1,
        q = qn(f[y], j),
        I = qn(f[g], j),
        N = q,
        M = L - m[d] - I,
        H = L / 2 - m[d] / 2 + B,
        Q = Rr(N, H, M),
        Y =
          qe(s) != null &&
          H != Q &&
          r.reference[d] / 2 - (H < N ? q : I) - m[d] / 2 < 0
            ? H < N
              ? N - H
              : M - H
            : 0;
      return { [h]: c[h] - Y, data: { [h]: Q, centerOffset: H - Q + Y } };
    },
  });
  function Cm(e, t, n) {
    return (
      e
        ? [...n.filter((s) => qe(s) === e), ...n.filter((s) => qe(s) !== e)]
        : n.filter((s) => ut(s) === s)
    ).filter((s) => (e ? qe(s) === e || (t ? Yo(s) !== s : !1) : !0));
  }
  const Dm = function (e) {
      return (
        e === void 0 && (e = {}),
        {
          name: "autoPlacement",
          options: e,
          async fn(t) {
            var n, o, s;
            const {
                rects: r,
                middlewareData: i,
                placement: l,
                platform: a,
                elements: u,
              } = t,
              {
                crossAxis: f = !1,
                alignment: c,
                allowedPlacements: h = xu,
                autoAlignment: d = !0,
                ...m
              } = Zt(e, t),
              v = c !== void 0 || h === xu ? Cm(c || null, d, h) : h,
              y = await Zo(t, m),
              g = ((n = i.autoPlacement) == null ? void 0 : n.index) || 0,
              S = v[g];
            if (S == null) return {};
            const P = Cu(
              S,
              r,
              await (a.isRTL == null ? void 0 : a.isRTL(u.floating)),
            );
            if (l !== S) return { reset: { placement: v[0] } };
            const b = [y[ut(S)], y[P[0]], y[P[1]]],
              D = [
                ...(((o = i.autoPlacement) == null ? void 0 : o.overflows) ||
                  []),
                { placement: S, overflows: b },
              ],
              L = v[g + 1];
            if (L)
              return {
                data: { index: g + 1, overflows: D },
                reset: { placement: L },
              };
            const B = D.map((I) => {
                const N = qe(I.placement);
                return [
                  I.placement,
                  N && f
                    ? I.overflows.slice(0, 2).reduce((M, H) => M + H, 0)
                    : I.overflows[0],
                  I.overflows,
                ];
              }).sort((I, N) => I[1] - N[1]),
              q =
                ((s = B.filter((I) =>
                  I[2].slice(0, qe(I[0]) ? 2 : 3).every((N) => N <= 0),
                )[0]) == null
                  ? void 0
                  : s[0]) || B[0][0];
            return q !== l
              ? {
                  data: { index: g + 1, overflows: D },
                  reset: { placement: q },
                }
              : {};
          },
        }
      );
    },
    Pm = function (e) {
      return (
        e === void 0 && (e = {}),
        {
          name: "flip",
          options: e,
          async fn(t) {
            var n;
            const {
                placement: o,
                middlewareData: s,
                rects: r,
                initialPlacement: i,
                platform: l,
                elements: a,
              } = t,
              {
                mainAxis: u = !0,
                crossAxis: f = !0,
                fallbackPlacements: c,
                fallbackStrategy: h = "bestFit",
                fallbackAxisSideDirection: d = "none",
                flipAlignment: m = !0,
                ...v
              } = Zt(e, t),
              y = ut(o),
              g = ut(i) === i,
              S = await (l.isRTL == null ? void 0 : l.isRTL(a.floating)),
              P = c || (g || !m ? [Xo(i)] : wm(i));
            !c && d !== "none" && P.push(...Tm(i, m, d, S));
            const b = [i, ...P],
              D = await Zo(t, v),
              L = [];
            let B = ((n = s.flip) == null ? void 0 : n.overflows) || [];
            if ((u && L.push(D[y]), f)) {
              const N = Cu(o, r, S);
              L.push(D[N[0]], D[N[1]]);
            }
            if (
              ((B = [...B, { placement: o, overflows: L }]),
              !L.every((N) => N <= 0))
            ) {
              var j, q;
              const N = (((j = s.flip) == null ? void 0 : j.index) || 0) + 1,
                M = b[N];
              if (M)
                return {
                  data: { index: N, overflows: B },
                  reset: { placement: M },
                };
              let H =
                (q = B.filter((Q) => Q.overflows[0] <= 0).sort(
                  (Q, _e) => Q.overflows[1] - _e.overflows[1],
                )[0]) == null
                  ? void 0
                  : q.placement;
              if (!H)
                switch (h) {
                  case "bestFit": {
                    var I;
                    const Q =
                      (I = B.map((_e) => [
                        _e.placement,
                        _e.overflows
                          .filter((Y) => Y > 0)
                          .reduce((Y, F) => Y + F, 0),
                      ]).sort((_e, Y) => _e[1] - Y[1])[0]) == null
                        ? void 0
                        : I[0];
                    Q && (H = Q);
                    break;
                  }
                  case "initialPlacement":
                    H = i;
                    break;
                }
              if (o !== H) return { reset: { placement: H } };
            }
            return {};
          },
        }
      );
    };
  async function Im(e, t) {
    const { placement: n, platform: o, elements: s } = e,
      r = await (o.isRTL == null ? void 0 : o.isRTL(s.floating)),
      i = ut(n),
      l = qe(n),
      a = Yn(n) === "y",
      u = ["left", "top"].includes(i) ? -1 : 1,
      f = r && a ? -1 : 1,
      c = Zt(t, e);
    let {
      mainAxis: h,
      crossAxis: d,
      alignmentAxis: m,
    } = typeof c == "number"
      ? { mainAxis: c, crossAxis: 0, alignmentAxis: null }
      : { mainAxis: 0, crossAxis: 0, alignmentAxis: null, ...c };
    return (
      l && typeof m == "number" && (d = l === "end" ? m * -1 : m),
      a ? { x: d * f, y: h * u } : { x: h * u, y: d * f }
    );
  }
  const km = function (e) {
      return (
        e === void 0 && (e = 0),
        {
          name: "offset",
          options: e,
          async fn(t) {
            const { x: n, y: o } = t,
              s = await Im(t, e);
            return { x: n + s.x, y: o + s.y, data: s };
          },
        }
      );
    },
    Rm = function (e) {
      return (
        e === void 0 && (e = {}),
        {
          name: "shift",
          options: e,
          async fn(t) {
            const { x: n, y: o, placement: s } = t,
              {
                mainAxis: r = !0,
                crossAxis: i = !1,
                limiter: l = {
                  fn: (y) => {
                    let { x: g, y: S } = y;
                    return { x: g, y: S };
                  },
                },
                ...a
              } = Zt(e, t),
              u = { x: n, y: o },
              f = await Zo(t, a),
              c = Yn(ut(s)),
              h = Au(c);
            let d = u[h],
              m = u[c];
            if (r) {
              const y = h === "y" ? "top" : "left",
                g = h === "y" ? "bottom" : "right",
                S = d + f[y],
                P = d - f[g];
              d = Rr(S, d, P);
            }
            if (i) {
              const y = c === "y" ? "top" : "left",
                g = c === "y" ? "bottom" : "right",
                S = m + f[y],
                P = m - f[g];
              m = Rr(S, m, P);
            }
            const v = l.fn({ ...t, [h]: d, [c]: m });
            return { ...v, data: { x: v.x - n, y: v.y - o } };
          },
        }
      );
    },
    Nm = function (e) {
      return (
        e === void 0 && (e = {}),
        {
          name: "size",
          options: e,
          async fn(t) {
            const { placement: n, rects: o, platform: s, elements: r } = t,
              { apply: i = () => {}, ...l } = Zt(e, t),
              a = await Zo(t, l),
              u = ut(n),
              f = qe(n),
              c = Yn(n) === "y",
              { width: h, height: d } = o.floating;
            let m, v;
            u === "top" || u === "bottom"
              ? ((m = u),
                (v =
                  f ===
                  ((await (s.isRTL == null ? void 0 : s.isRTL(r.floating)))
                    ? "start"
                    : "end")
                    ? "left"
                    : "right"))
              : ((v = u), (m = f === "end" ? "top" : "bottom"));
            const y = d - a[m],
              g = h - a[v],
              S = !t.middlewareData.shift;
            let P = y,
              b = g;
            if (c) {
              const L = h - a.left - a.right;
              b = f || S ? qn(g, L) : L;
            } else {
              const L = d - a.top - a.bottom;
              P = f || S ? qn(y, L) : L;
            }
            if (S && !f) {
              const L = Xt(a.left, 0),
                B = Xt(a.right, 0),
                j = Xt(a.top, 0),
                q = Xt(a.bottom, 0);
              c
                ? (b =
                    h - 2 * (L !== 0 || B !== 0 ? L + B : Xt(a.left, a.right)))
                : (P =
                    d - 2 * (j !== 0 || q !== 0 ? j + q : Xt(a.top, a.bottom)));
            }
            await i({ ...t, availableWidth: b, availableHeight: P });
            const D = await s.getDimensions(r.floating);
            return h !== D.width || d !== D.height
              ? { reset: { rects: !0 } }
              : {};
          },
        }
      );
    };
  function He(e) {
    var t;
    return ((t = e.ownerDocument) == null ? void 0 : t.defaultView) || window;
  }
  function ct(e) {
    return He(e).getComputedStyle(e);
  }
  const Iu = Math.min,
    Zn = Math.max,
    Jo = Math.round;
  function ku(e) {
    const t = ct(e);
    let n = parseFloat(t.width),
      o = parseFloat(t.height);
    const s = e.offsetWidth,
      r = e.offsetHeight,
      i = Jo(n) !== s || Jo(o) !== r;
    return i && ((n = s), (o = r)), { width: n, height: o, fallback: i };
  }
  function Vt(e) {
    return Nu(e) ? (e.nodeName || "").toLowerCase() : "";
  }
  let Qo;
  function Ru() {
    if (Qo) return Qo;
    const e = navigator.userAgentData;
    return e && Array.isArray(e.brands)
      ? ((Qo = e.brands.map((t) => t.brand + "/" + t.version).join(" ")), Qo)
      : navigator.userAgent;
  }
  function ft(e) {
    return e instanceof He(e).HTMLElement;
  }
  function Lt(e) {
    return e instanceof He(e).Element;
  }
  function Nu(e) {
    return e instanceof He(e).Node;
  }
  function Vu(e) {
    return typeof ShadowRoot > "u"
      ? !1
      : e instanceof He(e).ShadowRoot || e instanceof ShadowRoot;
  }
  function es(e) {
    const { overflow: t, overflowX: n, overflowY: o, display: s } = ct(e);
    return (
      /auto|scroll|overlay|hidden|clip/.test(t + o + n) &&
      !["inline", "contents"].includes(s)
    );
  }
  function Vm(e) {
    return ["table", "td", "th"].includes(Vt(e));
  }
  function Lr(e) {
    const t = /firefox/i.test(Ru()),
      n = ct(e),
      o = n.backdropFilter || n.WebkitBackdropFilter;
    return (
      n.transform !== "none" ||
      n.perspective !== "none" ||
      (!!o && o !== "none") ||
      (t && n.willChange === "filter") ||
      (t && !!n.filter && n.filter !== "none") ||
      ["transform", "perspective"].some((s) => n.willChange.includes(s)) ||
      ["paint", "layout", "strict", "content"].some((s) => {
        const r = n.contain;
        return r != null && r.includes(s);
      })
    );
  }
  function Lu() {
    return !/^((?!chrome|android).)*safari/i.test(Ru());
  }
  function $r(e) {
    return ["html", "body", "#document"].includes(Vt(e));
  }
  function $u(e) {
    return Lt(e) ? e : e.contextElement;
  }
  const Mu = { x: 1, y: 1 };
  function gn(e) {
    const t = $u(e);
    if (!ft(t)) return Mu;
    const n = t.getBoundingClientRect(),
      { width: o, height: s, fallback: r } = ku(t);
    let i = (r ? Jo(n.width) : n.width) / o,
      l = (r ? Jo(n.height) : n.height) / s;
    return (
      (i && Number.isFinite(i)) || (i = 1),
      (l && Number.isFinite(l)) || (l = 1),
      { x: i, y: l }
    );
  }
  function Jn(e, t, n, o) {
    var s, r;
    t === void 0 && (t = !1), n === void 0 && (n = !1);
    const i = e.getBoundingClientRect(),
      l = $u(e);
    let a = Mu;
    t && (o ? Lt(o) && (a = gn(o)) : (a = gn(e)));
    const u = l ? He(l) : window,
      f = !Lu() && n;
    let c =
        (i.left +
          ((f && ((s = u.visualViewport) == null ? void 0 : s.offsetLeft)) ||
            0)) /
        a.x,
      h =
        (i.top +
          ((f && ((r = u.visualViewport) == null ? void 0 : r.offsetTop)) ||
            0)) /
        a.y,
      d = i.width / a.x,
      m = i.height / a.y;
    if (l) {
      const v = He(l),
        y = o && Lt(o) ? He(o) : o;
      let g = v.frameElement;
      for (; g && o && y !== v; ) {
        const S = gn(g),
          P = g.getBoundingClientRect(),
          b = getComputedStyle(g);
        (P.x += (g.clientLeft + parseFloat(b.paddingLeft)) * S.x),
          (P.y += (g.clientTop + parseFloat(b.paddingTop)) * S.y),
          (c *= S.x),
          (h *= S.y),
          (d *= S.x),
          (m *= S.y),
          (c += P.x),
          (h += P.y),
          (g = He(g).frameElement);
      }
    }
    return {
      width: d,
      height: m,
      top: h,
      right: c + d,
      bottom: h + m,
      left: c,
      x: c,
      y: h,
    };
  }
  function $t(e) {
    return ((Nu(e) ? e.ownerDocument : e.document) || window.document)
      .documentElement;
  }
  function ts(e) {
    return Lt(e)
      ? { scrollLeft: e.scrollLeft, scrollTop: e.scrollTop }
      : { scrollLeft: e.pageXOffset, scrollTop: e.pageYOffset };
  }
  function Fu(e) {
    return Jn($t(e)).left + ts(e).scrollLeft;
  }
  function Qn(e) {
    if (Vt(e) === "html") return e;
    const t = e.assignedSlot || e.parentNode || (Vu(e) && e.host) || $t(e);
    return Vu(t) ? t.host : t;
  }
  function Uu(e) {
    const t = Qn(e);
    return $r(t) ? t.ownerDocument.body : ft(t) && es(t) ? t : Uu(t);
  }
  function ns(e, t) {
    var n;
    t === void 0 && (t = []);
    const o = Uu(e),
      s = o === ((n = e.ownerDocument) == null ? void 0 : n.body),
      r = He(o);
    return s
      ? t.concat(r, r.visualViewport || [], es(o) ? o : [])
      : t.concat(o, ns(o));
  }
  function Bu(e, t, n) {
    return t === "viewport"
      ? Xn(
          (function (o, s) {
            const r = He(o),
              i = $t(o),
              l = r.visualViewport;
            let a = i.clientWidth,
              u = i.clientHeight,
              f = 0,
              c = 0;
            if (l) {
              (a = l.width), (u = l.height);
              const h = Lu();
              (h || (!h && s === "fixed")) &&
                ((f = l.offsetLeft), (c = l.offsetTop));
            }
            return { width: a, height: u, x: f, y: c };
          })(e, n),
        )
      : Lt(t)
        ? Xn(
            (function (o, s) {
              const r = Jn(o, !0, s === "fixed"),
                i = r.top + o.clientTop,
                l = r.left + o.clientLeft,
                a = ft(o) ? gn(o) : { x: 1, y: 1 };
              return {
                width: o.clientWidth * a.x,
                height: o.clientHeight * a.y,
                x: l * a.x,
                y: i * a.y,
              };
            })(t, n),
          )
        : Xn(
            (function (o) {
              const s = $t(o),
                r = ts(o),
                i = o.ownerDocument.body,
                l = Zn(
                  s.scrollWidth,
                  s.clientWidth,
                  i.scrollWidth,
                  i.clientWidth,
                ),
                a = Zn(
                  s.scrollHeight,
                  s.clientHeight,
                  i.scrollHeight,
                  i.clientHeight,
                );
              let u = -r.scrollLeft + Fu(o);
              const f = -r.scrollTop;
              return (
                ct(i).direction === "rtl" &&
                  (u += Zn(s.clientWidth, i.clientWidth) - l),
                { width: l, height: a, x: u, y: f }
              );
            })($t(e)),
          );
  }
  function Hu(e) {
    return ft(e) && ct(e).position !== "fixed" ? e.offsetParent : null;
  }
  function zu(e) {
    const t = He(e);
    let n = Hu(e);
    for (; n && Vm(n) && ct(n).position === "static"; ) n = Hu(n);
    return n &&
      (Vt(n) === "html" ||
        (Vt(n) === "body" && ct(n).position === "static" && !Lr(n)))
      ? t
      : n ||
          (function (o) {
            let s = Qn(o);
            for (; ft(s) && !$r(s); ) {
              if (Lr(s)) return s;
              s = Qn(s);
            }
            return null;
          })(e) ||
          t;
  }
  function Lm(e, t, n) {
    const o = ft(t),
      s = $t(t),
      r = Jn(e, !0, n === "fixed", t);
    let i = { scrollLeft: 0, scrollTop: 0 };
    const l = { x: 0, y: 0 };
    if (o || (!o && n !== "fixed"))
      if (((Vt(t) !== "body" || es(s)) && (i = ts(t)), ft(t))) {
        const a = Jn(t, !0);
        (l.x = a.x + t.clientLeft), (l.y = a.y + t.clientTop);
      } else s && (l.x = Fu(s));
    return {
      x: r.left + i.scrollLeft - l.x,
      y: r.top + i.scrollTop - l.y,
      width: r.width,
      height: r.height,
    };
  }
  const $m = {
      getClippingRect: function (e) {
        let { element: t, boundary: n, rootBoundary: o, strategy: s } = e;
        const r =
            n === "clippingAncestors"
              ? (function (u, f) {
                  const c = f.get(u);
                  if (c) return c;
                  let h = ns(u).filter((y) => Lt(y) && Vt(y) !== "body"),
                    d = null;
                  const m = ct(u).position === "fixed";
                  let v = m ? Qn(u) : u;
                  for (; Lt(v) && !$r(v); ) {
                    const y = ct(v),
                      g = Lr(v);
                    (
                      m
                        ? g || d
                        : g ||
                          y.position !== "static" ||
                          !d ||
                          !["absolute", "fixed"].includes(d.position)
                    )
                      ? (d = y)
                      : (h = h.filter((S) => S !== v)),
                      (v = Qn(v));
                  }
                  return f.set(u, h), h;
                })(t, this._c)
              : [].concat(n),
          i = [...r, o],
          l = i[0],
          a = i.reduce(
            (u, f) => {
              const c = Bu(t, f, s);
              return (
                (u.top = Zn(c.top, u.top)),
                (u.right = Iu(c.right, u.right)),
                (u.bottom = Iu(c.bottom, u.bottom)),
                (u.left = Zn(c.left, u.left)),
                u
              );
            },
            Bu(t, l, s),
          );
        return {
          width: a.right - a.left,
          height: a.bottom - a.top,
          x: a.left,
          y: a.top,
        };
      },
      convertOffsetParentRelativeRectToViewportRelativeRect: function (e) {
        let { rect: t, offsetParent: n, strategy: o } = e;
        const s = ft(n),
          r = $t(n);
        if (n === r) return t;
        let i = { scrollLeft: 0, scrollTop: 0 },
          l = { x: 1, y: 1 };
        const a = { x: 0, y: 0 };
        if (
          (s || (!s && o !== "fixed")) &&
          ((Vt(n) !== "body" || es(r)) && (i = ts(n)), ft(n))
        ) {
          const u = Jn(n);
          (l = gn(n)), (a.x = u.x + n.clientLeft), (a.y = u.y + n.clientTop);
        }
        return {
          width: t.width * l.x,
          height: t.height * l.y,
          x: t.x * l.x - i.scrollLeft * l.x + a.x,
          y: t.y * l.y - i.scrollTop * l.y + a.y,
        };
      },
      isElement: Lt,
      getDimensions: function (e) {
        return ft(e) ? ku(e) : e.getBoundingClientRect();
      },
      getOffsetParent: zu,
      getDocumentElement: $t,
      getScale: gn,
      async getElementRects(e) {
        let { reference: t, floating: n, strategy: o } = e;
        const s = this.getOffsetParent || zu,
          r = this.getDimensions;
        return {
          reference: Lm(t, await s(n), o),
          floating: { x: 0, y: 0, ...(await r(n)) },
        };
      },
      getClientRects: (e) => Array.from(e.getClientRects()),
      isRTL: (e) => ct(e).direction === "rtl",
    },
    Mm = (e, t, n) => {
      const o = new Map(),
        s = { platform: $m, ...n },
        r = { ...s.platform, _c: o };
      return xm(e, t, { ...s, platform: r });
    },
    Jt = {
      disabled: !1,
      distance: 5,
      skidding: 0,
      container: "body",
      boundary: void 0,
      instantMove: !1,
      disposeTimeout: 150,
      popperTriggers: [],
      strategy: "absolute",
      preventOverflow: !0,
      flip: !0,
      shift: !0,
      overflowPadding: 0,
      arrowPadding: 0,
      arrowOverflow: !0,
      autoHideOnMousedown: !1,
      themes: {
        tooltip: {
          placement: "top",
          triggers: ["hover", "focus", "touch"],
          hideTriggers: (e) => [...e, "click"],
          delay: { show: 200, hide: 0 },
          handleResize: !1,
          html: !1,
          loadingContent: "...",
        },
        dropdown: {
          placement: "bottom",
          triggers: ["click"],
          delay: 0,
          handleResize: !0,
          autoHide: !0,
        },
        menu: {
          $extend: "dropdown",
          triggers: ["hover", "focus"],
          popperTriggers: ["hover"],
          delay: { show: 0, hide: 400 },
        },
      },
    };
  function Mr(e, t) {
    let n = Jt.themes[e] || {},
      o;
    do
      (o = n[t]),
        typeof o > "u"
          ? n.$extend
            ? (n = Jt.themes[n.$extend] || {})
            : ((n = null), (o = Jt[t]))
          : (n = null);
    while (n);
    return o;
  }
  function Fm(e) {
    const t = [e];
    let n = Jt.themes[e] || {};
    do
      n.$extend && !n.$resetCss
        ? (t.push(n.$extend), (n = Jt.themes[n.$extend] || {}))
        : (n = null);
    while (n);
    return t.map((o) => `v-popper--theme-${o}`);
  }
  function ju(e) {
    const t = [e];
    let n = Jt.themes[e] || {};
    do
      n.$extend
        ? (t.push(n.$extend), (n = Jt.themes[n.$extend] || {}))
        : (n = null);
    while (n);
    return t;
  }
  let eo = !1;
  if (typeof window < "u") {
    eo = !1;
    try {
      const e = Object.defineProperty({}, "passive", {
        get() {
          eo = !0;
        },
      });
      window.addEventListener("test", null, e);
    } catch {}
  }
  let Ku = !1;
  typeof window < "u" &&
    typeof navigator < "u" &&
    (Ku = /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream);
  const Um = ["auto", "top", "bottom", "left", "right"].reduce(
      (e, t) => e.concat([t, `${t}-start`, `${t}-end`]),
      [],
    ),
    Wu = {
      hover: "mouseenter",
      focus: "focus",
      click: "click",
      touch: "touchstart",
      pointer: "pointerdown",
    },
    Gu = {
      hover: "mouseleave",
      focus: "blur",
      click: "click",
      touch: "touchend",
      pointer: "pointerup",
    };
  function qu(e, t) {
    const n = e.indexOf(t);
    n !== -1 && e.splice(n, 1);
  }
  function Fr() {
    return new Promise((e) =>
      requestAnimationFrame(() => {
        requestAnimationFrame(e);
      }),
    );
  }
  const Ye = [];
  let Qt = null;
  const Yu = {};
  function Xu(e) {
    let t = Yu[e];
    return t || (t = Yu[e] = []), t;
  }
  let Ur = function () {};
  typeof window < "u" && (Ur = window.Element);
  function J(e) {
    return function (t) {
      return Mr(t.theme, e);
    };
  }
  const Br = "__floating-vue__popper",
    Zu = () =>
      ln({
        name: "VPopper",
        provide() {
          return { [Br]: { parentPopper: this } };
        },
        inject: { [Br]: { default: null } },
        props: {
          theme: { type: String, required: !0 },
          targetNodes: { type: Function, required: !0 },
          referenceNode: { type: Function, default: null },
          popperNode: { type: Function, required: !0 },
          shown: { type: Boolean, default: !1 },
          showGroup: { type: String, default: null },
          ariaId: { default: null },
          disabled: { type: Boolean, default: J("disabled") },
          positioningDisabled: {
            type: Boolean,
            default: J("positioningDisabled"),
          },
          placement: {
            type: String,
            default: J("placement"),
            validator: (e) => Um.includes(e),
          },
          delay: { type: [String, Number, Object], default: J("delay") },
          distance: { type: [Number, String], default: J("distance") },
          skidding: { type: [Number, String], default: J("skidding") },
          triggers: { type: Array, default: J("triggers") },
          showTriggers: { type: [Array, Function], default: J("showTriggers") },
          hideTriggers: { type: [Array, Function], default: J("hideTriggers") },
          popperTriggers: { type: Array, default: J("popperTriggers") },
          popperShowTriggers: {
            type: [Array, Function],
            default: J("popperShowTriggers"),
          },
          popperHideTriggers: {
            type: [Array, Function],
            default: J("popperHideTriggers"),
          },
          container: {
            type: [String, Object, Ur, Boolean],
            default: J("container"),
          },
          boundary: { type: [String, Ur], default: J("boundary") },
          strategy: {
            type: String,
            validator: (e) => ["absolute", "fixed"].includes(e),
            default: J("strategy"),
          },
          autoHide: { type: [Boolean, Function], default: J("autoHide") },
          handleResize: { type: Boolean, default: J("handleResize") },
          instantMove: { type: Boolean, default: J("instantMove") },
          eagerMount: { type: Boolean, default: J("eagerMount") },
          popperClass: {
            type: [String, Array, Object],
            default: J("popperClass"),
          },
          computeTransformOrigin: {
            type: Boolean,
            default: J("computeTransformOrigin"),
          },
          autoMinSize: { type: Boolean, default: J("autoMinSize") },
          autoSize: { type: [Boolean, String], default: J("autoSize") },
          autoMaxSize: { type: Boolean, default: J("autoMaxSize") },
          autoBoundaryMaxSize: {
            type: Boolean,
            default: J("autoBoundaryMaxSize"),
          },
          preventOverflow: { type: Boolean, default: J("preventOverflow") },
          overflowPadding: {
            type: [Number, String],
            default: J("overflowPadding"),
          },
          arrowPadding: { type: [Number, String], default: J("arrowPadding") },
          arrowOverflow: { type: Boolean, default: J("arrowOverflow") },
          flip: { type: Boolean, default: J("flip") },
          shift: { type: Boolean, default: J("shift") },
          shiftCrossAxis: { type: Boolean, default: J("shiftCrossAxis") },
          noAutoFocus: { type: Boolean, default: J("noAutoFocus") },
          disposeTimeout: { type: Number, default: J("disposeTimeout") },
        },
        emits: {
          show: () => !0,
          hide: () => !0,
          "update:shown": (e) => !0,
          "apply-show": () => !0,
          "apply-hide": () => !0,
          "close-group": () => !0,
          "close-directive": () => !0,
          "auto-hide": () => !0,
          resize: () => !0,
        },
        data() {
          return {
            isShown: !1,
            isMounted: !1,
            skipTransition: !1,
            classes: { showFrom: !1, showTo: !1, hideFrom: !1, hideTo: !0 },
            result: {
              x: 0,
              y: 0,
              placement: "",
              strategy: this.strategy,
              arrow: { x: 0, y: 0, centerOffset: 0 },
              transformOrigin: null,
            },
            randomId: `popper_${[Math.random(), Date.now()].map((e) => e.toString(36).substring(2, 10)).join("_")}`,
            shownChildren: new Set(),
            lastAutoHide: !0,
            pendingHide: !1,
            containsGlobalTarget: !1,
            isDisposed: !0,
            mouseDownContains: !1,
          };
        },
        computed: {
          popperId() {
            return this.ariaId != null ? this.ariaId : this.randomId;
          },
          shouldMountContent() {
            return this.eagerMount || this.isMounted;
          },
          slotData() {
            return {
              popperId: this.popperId,
              isShown: this.isShown,
              shouldMountContent: this.shouldMountContent,
              skipTransition: this.skipTransition,
              autoHide:
                typeof this.autoHide == "function"
                  ? this.lastAutoHide
                  : this.autoHide,
              show: this.show,
              hide: this.hide,
              handleResize: this.handleResize,
              onResize: this.onResize,
              classes: { ...this.classes, popperClass: this.popperClass },
              result: this.positioningDisabled ? null : this.result,
              attrs: this.$attrs,
            };
          },
          parentPopper() {
            var e;
            return (e = this[Br]) == null ? void 0 : e.parentPopper;
          },
          hasPopperShowTriggerHover() {
            var e, t;
            return (
              ((e = this.popperTriggers) == null
                ? void 0
                : e.includes("hover")) ||
              ((t = this.popperShowTriggers) == null
                ? void 0
                : t.includes("hover"))
            );
          },
        },
        watch: {
          shown: "$_autoShowHide",
          disabled(e) {
            e ? this.dispose() : this.init();
          },
          async container() {
            this.isShown &&
              (this.$_ensureTeleport(), await this.$_computePosition());
          },
          triggers: { handler: "$_refreshListeners", deep: !0 },
          positioningDisabled: "$_refreshListeners",
          ...[
            "placement",
            "distance",
            "skidding",
            "boundary",
            "strategy",
            "overflowPadding",
            "arrowPadding",
            "preventOverflow",
            "shift",
            "shiftCrossAxis",
            "flip",
          ].reduce((e, t) => ((e[t] = "$_computePosition"), e), {}),
        },
        created() {
          this.autoMinSize &&
            console.warn(
              '[floating-vue] `autoMinSize` option is deprecated. Use `autoSize="min"` instead.',
            ),
            this.autoMaxSize &&
              console.warn(
                "[floating-vue] `autoMaxSize` option is deprecated. Use `autoBoundaryMaxSize` instead.",
              );
        },
        mounted() {
          this.init(), this.$_detachPopperNode();
        },
        activated() {
          this.$_autoShowHide();
        },
        deactivated() {
          this.hide();
        },
        beforeUnmount() {
          this.dispose();
        },
        methods: {
          show({ event: e = null, skipDelay: t = !1, force: n = !1 } = {}) {
            var o, s;
            ((o = this.parentPopper) != null &&
              o.lockedChild &&
              this.parentPopper.lockedChild !== this) ||
              ((this.pendingHide = !1),
              (n || !this.disabled) &&
                (((s = this.parentPopper) == null ? void 0 : s.lockedChild) ===
                  this && (this.parentPopper.lockedChild = null),
                this.$_scheduleShow(e, t),
                this.$emit("show"),
                (this.$_showFrameLocked = !0),
                requestAnimationFrame(() => {
                  this.$_showFrameLocked = !1;
                })),
              this.$emit("update:shown", !0));
          },
          hide({ event: e = null, skipDelay: t = !1 } = {}) {
            var n;
            if (!this.$_hideInProgress) {
              if (this.shownChildren.size > 0) {
                this.pendingHide = !0;
                return;
              }
              if (this.hasPopperShowTriggerHover && this.$_isAimingPopper()) {
                this.parentPopper &&
                  ((this.parentPopper.lockedChild = this),
                  clearTimeout(this.parentPopper.lockedChildTimer),
                  (this.parentPopper.lockedChildTimer = setTimeout(() => {
                    this.parentPopper.lockedChild === this &&
                      (this.parentPopper.lockedChild.hide({ skipDelay: t }),
                      (this.parentPopper.lockedChild = null));
                  }, 1e3)));
                return;
              }
              ((n = this.parentPopper) == null ? void 0 : n.lockedChild) ===
                this && (this.parentPopper.lockedChild = null),
                (this.pendingHide = !1),
                this.$_scheduleHide(e, t),
                this.$emit("hide"),
                this.$emit("update:shown", !1);
            }
          },
          init() {
            var e;
            this.isDisposed &&
              ((this.isDisposed = !1),
              (this.isMounted = !1),
              (this.$_events = []),
              (this.$_preventShow = !1),
              (this.$_referenceNode =
                ((e = this.referenceNode) == null ? void 0 : e.call(this)) ??
                this.$el),
              (this.$_targetNodes = this.targetNodes().filter(
                (t) => t.nodeType === t.ELEMENT_NODE,
              )),
              (this.$_popperNode = this.popperNode()),
              (this.$_innerNode =
                this.$_popperNode.querySelector(".v-popper__inner")),
              (this.$_arrowNode = this.$_popperNode.querySelector(
                ".v-popper__arrow-container",
              )),
              this.$_swapTargetAttrs("title", "data-original-title"),
              this.$_detachPopperNode(),
              this.triggers.length && this.$_addEventListeners(),
              this.shown && this.show());
          },
          dispose() {
            this.isDisposed ||
              ((this.isDisposed = !0),
              this.$_removeEventListeners(),
              this.hide({ skipDelay: !0 }),
              this.$_detachPopperNode(),
              (this.isMounted = !1),
              (this.isShown = !1),
              this.$_updateParentShownChildren(!1),
              this.$_swapTargetAttrs("data-original-title", "title"));
          },
          async onResize() {
            this.isShown &&
              (await this.$_computePosition(), this.$emit("resize"));
          },
          async $_computePosition() {
            if (this.isDisposed || this.positioningDisabled) return;
            const e = { strategy: this.strategy, middleware: [] };
            (this.distance || this.skidding) &&
              e.middleware.push(
                km({ mainAxis: this.distance, crossAxis: this.skidding }),
              );
            const t = this.placement.startsWith("auto");
            if (
              (t
                ? e.middleware.push(
                    Dm({ alignment: this.placement.split("-")[1] ?? "" }),
                  )
                : (e.placement = this.placement),
              this.preventOverflow &&
                (this.shift &&
                  e.middleware.push(
                    Rm({
                      padding: this.overflowPadding,
                      boundary: this.boundary,
                      crossAxis: this.shiftCrossAxis,
                    }),
                  ),
                !t &&
                  this.flip &&
                  e.middleware.push(
                    Pm({
                      padding: this.overflowPadding,
                      boundary: this.boundary,
                    }),
                  )),
              e.middleware.push(
                Am({ element: this.$_arrowNode, padding: this.arrowPadding }),
              ),
              this.arrowOverflow &&
                e.middleware.push({
                  name: "arrowOverflow",
                  fn: ({ placement: o, rects: s, middlewareData: r }) => {
                    let i;
                    const { centerOffset: l } = r.arrow;
                    return (
                      o.startsWith("top") || o.startsWith("bottom")
                        ? (i = Math.abs(l) > s.reference.width / 2)
                        : (i = Math.abs(l) > s.reference.height / 2),
                      { data: { overflow: i } }
                    );
                  },
                }),
              this.autoMinSize || this.autoSize)
            ) {
              const o = this.autoSize
                ? this.autoSize
                : this.autoMinSize
                  ? "min"
                  : null;
              e.middleware.push({
                name: "autoSize",
                fn: ({ rects: s, placement: r, middlewareData: i }) => {
                  var l;
                  if ((l = i.autoSize) != null && l.skip) return {};
                  let a, u;
                  return (
                    r.startsWith("top") || r.startsWith("bottom")
                      ? (a = s.reference.width)
                      : (u = s.reference.height),
                    (this.$_innerNode.style[
                      o === "min"
                        ? "minWidth"
                        : o === "max"
                          ? "maxWidth"
                          : "width"
                    ] = a != null ? `${a}px` : null),
                    (this.$_innerNode.style[
                      o === "min"
                        ? "minHeight"
                        : o === "max"
                          ? "maxHeight"
                          : "height"
                    ] = u != null ? `${u}px` : null),
                    { data: { skip: !0 }, reset: { rects: !0 } }
                  );
                },
              });
            }
            (this.autoMaxSize || this.autoBoundaryMaxSize) &&
              ((this.$_innerNode.style.maxWidth = null),
              (this.$_innerNode.style.maxHeight = null),
              e.middleware.push(
                Nm({
                  boundary: this.boundary,
                  padding: this.overflowPadding,
                  apply: ({ availableWidth: o, availableHeight: s }) => {
                    (this.$_innerNode.style.maxWidth =
                      o != null ? `${o}px` : null),
                      (this.$_innerNode.style.maxHeight =
                        s != null ? `${s}px` : null);
                  },
                }),
              ));
            const n = await Mm(this.$_referenceNode, this.$_popperNode, e);
            Object.assign(this.result, {
              x: n.x,
              y: n.y,
              placement: n.placement,
              strategy: n.strategy,
              arrow: {
                ...n.middlewareData.arrow,
                ...n.middlewareData.arrowOverflow,
              },
            });
          },
          $_scheduleShow(e, t = !1) {
            if (
              (this.$_updateParentShownChildren(!0),
              (this.$_hideInProgress = !1),
              clearTimeout(this.$_scheduleTimer),
              Qt &&
                this.instantMove &&
                Qt.instantMove &&
                Qt !== this.parentPopper)
            ) {
              Qt.$_applyHide(!0), this.$_applyShow(!0);
              return;
            }
            t
              ? this.$_applyShow()
              : (this.$_scheduleTimer = setTimeout(
                  this.$_applyShow.bind(this),
                  this.$_computeDelay("show"),
                ));
          },
          $_scheduleHide(e, t = !1) {
            if (this.shownChildren.size > 0) {
              this.pendingHide = !0;
              return;
            }
            this.$_updateParentShownChildren(!1),
              (this.$_hideInProgress = !0),
              clearTimeout(this.$_scheduleTimer),
              this.isShown && (Qt = this),
              t
                ? this.$_applyHide()
                : (this.$_scheduleTimer = setTimeout(
                    this.$_applyHide.bind(this),
                    this.$_computeDelay("hide"),
                  ));
          },
          $_computeDelay(e) {
            const t = this.delay;
            return parseInt((t && t[e]) || t || 0);
          },
          async $_applyShow(e = !1) {
            clearTimeout(this.$_disposeTimer),
              clearTimeout(this.$_scheduleTimer),
              (this.skipTransition = e),
              !this.isShown &&
                (this.$_ensureTeleport(),
                await Fr(),
                await this.$_computePosition(),
                await this.$_applyShowEffect(),
                this.positioningDisabled ||
                  this.$_registerEventListeners(
                    [...ns(this.$_referenceNode), ...ns(this.$_popperNode)],
                    "scroll",
                    () => {
                      this.$_computePosition();
                    },
                  ));
          },
          async $_applyShowEffect() {
            if (this.$_hideInProgress) return;
            if (this.computeTransformOrigin) {
              const t = this.$_referenceNode.getBoundingClientRect(),
                n = this.$_popperNode.querySelector(".v-popper__wrapper"),
                o = n.parentNode.getBoundingClientRect(),
                s = t.x + t.width / 2 - (o.left + n.offsetLeft),
                r = t.y + t.height / 2 - (o.top + n.offsetTop);
              this.result.transformOrigin = `${s}px ${r}px`;
            }
            (this.isShown = !0),
              this.$_applyAttrsToTarget({
                "aria-describedby": this.popperId,
                "data-popper-shown": "",
              });
            const e = this.showGroup;
            if (e) {
              let t;
              for (let n = 0; n < Ye.length; n++)
                (t = Ye[n]),
                  t.showGroup !== e && (t.hide(), t.$emit("close-group"));
            }
            Ye.push(this), document.body.classList.add("v-popper--some-open");
            for (const t of ju(this.theme))
              Xu(t).push(this),
                document.body.classList.add(`v-popper--some-open--${t}`);
            this.$emit("apply-show"),
              (this.classes.showFrom = !0),
              (this.classes.showTo = !1),
              (this.classes.hideFrom = !1),
              (this.classes.hideTo = !1),
              await Fr(),
              (this.classes.showFrom = !1),
              (this.classes.showTo = !0),
              this.noAutoFocus || this.$_popperNode.focus();
          },
          async $_applyHide(e = !1) {
            if (this.shownChildren.size > 0) {
              (this.pendingHide = !0), (this.$_hideInProgress = !1);
              return;
            }
            if ((clearTimeout(this.$_scheduleTimer), !this.isShown)) return;
            (this.skipTransition = e),
              qu(Ye, this),
              Ye.length === 0 &&
                document.body.classList.remove("v-popper--some-open");
            for (const n of ju(this.theme)) {
              const o = Xu(n);
              qu(o, this),
                o.length === 0 &&
                  document.body.classList.remove(`v-popper--some-open--${n}`);
            }
            Qt === this && (Qt = null),
              (this.isShown = !1),
              this.$_applyAttrsToTarget({
                "aria-describedby": void 0,
                "data-popper-shown": void 0,
              }),
              clearTimeout(this.$_disposeTimer);
            const t = this.disposeTimeout;
            t !== null &&
              (this.$_disposeTimer = setTimeout(() => {
                this.$_popperNode &&
                  (this.$_detachPopperNode(), (this.isMounted = !1));
              }, t)),
              this.$_removeEventListeners("scroll"),
              this.$emit("apply-hide"),
              (this.classes.showFrom = !1),
              (this.classes.showTo = !1),
              (this.classes.hideFrom = !0),
              (this.classes.hideTo = !1),
              await Fr(),
              (this.classes.hideFrom = !1),
              (this.classes.hideTo = !0);
          },
          $_autoShowHide() {
            this.shown ? this.show() : this.hide();
          },
          $_ensureTeleport() {
            if (this.isDisposed) return;
            let e = this.container;
            if (
              (typeof e == "string"
                ? (e = window.document.querySelector(e))
                : e === !1 && (e = this.$_targetNodes[0].parentNode),
              !e)
            )
              throw new Error("No container for popover: " + this.container);
            e.appendChild(this.$_popperNode), (this.isMounted = !0);
          },
          $_addEventListeners() {
            const e = (n) => {
              (this.isShown && !this.$_hideInProgress) ||
                ((n.usedByTooltip = !0),
                !this.$_preventShow && this.show({ event: n }));
            };
            this.$_registerTriggerListeners(
              this.$_targetNodes,
              Wu,
              this.triggers,
              this.showTriggers,
              e,
            ),
              this.$_registerTriggerListeners(
                [this.$_popperNode],
                Wu,
                this.popperTriggers,
                this.popperShowTriggers,
                e,
              );
            const t = (n) => {
              n.usedByTooltip || this.hide({ event: n });
            };
            this.$_registerTriggerListeners(
              this.$_targetNodes,
              Gu,
              this.triggers,
              this.hideTriggers,
              t,
            ),
              this.$_registerTriggerListeners(
                [this.$_popperNode],
                Gu,
                this.popperTriggers,
                this.popperHideTriggers,
                t,
              );
          },
          $_registerEventListeners(e, t, n) {
            this.$_events.push({ targetNodes: e, eventType: t, handler: n }),
              e.forEach((o) =>
                o.addEventListener(t, n, eo ? { passive: !0 } : void 0),
              );
          },
          $_registerTriggerListeners(e, t, n, o, s) {
            let r = n;
            o != null && (r = typeof o == "function" ? o(r) : o),
              r.forEach((i) => {
                const l = t[i];
                l && this.$_registerEventListeners(e, l, s);
              });
          },
          $_removeEventListeners(e) {
            const t = [];
            this.$_events.forEach((n) => {
              const { targetNodes: o, eventType: s, handler: r } = n;
              !e || e === s
                ? o.forEach((i) => i.removeEventListener(s, r))
                : t.push(n);
            }),
              (this.$_events = t);
          },
          $_refreshListeners() {
            this.isDisposed ||
              (this.$_removeEventListeners(), this.$_addEventListeners());
          },
          $_handleGlobalClose(e, t = !1) {
            this.$_showFrameLocked ||
              (this.hide({ event: e }),
              e.closePopover
                ? this.$emit("close-directive")
                : this.$emit("auto-hide"),
              t &&
                ((this.$_preventShow = !0),
                setTimeout(() => {
                  this.$_preventShow = !1;
                }, 300)));
          },
          $_detachPopperNode() {
            this.$_popperNode.parentNode &&
              this.$_popperNode.parentNode.removeChild(this.$_popperNode);
          },
          $_swapTargetAttrs(e, t) {
            for (const n of this.$_targetNodes) {
              const o = n.getAttribute(e);
              o && (n.removeAttribute(e), n.setAttribute(t, o));
            }
          },
          $_applyAttrsToTarget(e) {
            for (const t of this.$_targetNodes)
              for (const n in e) {
                const o = e[n];
                o == null ? t.removeAttribute(n) : t.setAttribute(n, o);
              }
          },
          $_updateParentShownChildren(e) {
            let t = this.parentPopper;
            for (; t; )
              e
                ? t.shownChildren.add(this.randomId)
                : (t.shownChildren.delete(this.randomId),
                  t.pendingHide && t.hide()),
                (t = t.parentPopper);
          },
          $_isAimingPopper() {
            const e = this.$_referenceNode.getBoundingClientRect();
            if (
              to >= e.left &&
              to <= e.right &&
              no >= e.top &&
              no <= e.bottom
            ) {
              const t = this.$_popperNode.getBoundingClientRect(),
                n = to - Mt,
                o = no - Ft,
                s =
                  t.left +
                  t.width / 2 -
                  Mt +
                  (t.top + t.height / 2) -
                  Ft +
                  t.width +
                  t.height,
                r = Mt + n * s,
                i = Ft + o * s;
              return (
                os(Mt, Ft, r, i, t.left, t.top, t.left, t.bottom) ||
                os(Mt, Ft, r, i, t.left, t.top, t.right, t.top) ||
                os(Mt, Ft, r, i, t.right, t.top, t.right, t.bottom) ||
                os(Mt, Ft, r, i, t.left, t.bottom, t.right, t.bottom)
              );
            }
            return !1;
          },
        },
        render() {
          return this.$slots.default(this.slotData);
        },
      });
  if (typeof document < "u" && typeof window < "u") {
    if (Ku) {
      const e = eo ? { passive: !0, capture: !0 } : !0;
      document.addEventListener("touchstart", (t) => Ju(t), e),
        document.addEventListener("touchend", (t) => Qu(t, !0), e);
    } else
      window.addEventListener("mousedown", (e) => Ju(e), !0),
        window.addEventListener("click", (e) => Qu(e, !1), !0);
    window.addEventListener("resize", zm);
  }
  function Ju(e, t) {
    for (let n = 0; n < Ye.length; n++) {
      const o = Ye[n];
      try {
        o.mouseDownContains = o.popperNode().contains(e.target);
      } catch {}
    }
  }
  function Qu(e, t) {
    Bm(e, t);
  }
  function Bm(e, t) {
    const n = {};
    for (let o = Ye.length - 1; o >= 0; o--) {
      const s = Ye[o];
      try {
        const r = (s.containsGlobalTarget =
          s.mouseDownContains || s.popperNode().contains(e.target));
        (s.pendingHide = !1),
          requestAnimationFrame(() => {
            if (((s.pendingHide = !1), !n[s.randomId] && ec(s, r, e))) {
              if (
                (s.$_handleGlobalClose(e, t),
                !e.closeAllPopover && e.closePopover && r)
              ) {
                let l = s.parentPopper;
                for (; l; ) (n[l.randomId] = !0), (l = l.parentPopper);
                return;
              }
              let i = s.parentPopper;
              for (; i && ec(i, i.containsGlobalTarget, e); )
                i.$_handleGlobalClose(e, t), (i = i.parentPopper);
            }
          });
      } catch {}
    }
  }
  function ec(e, t, n) {
    return n.closeAllPopover || (n.closePopover && t) || (Hm(e, n) && !t);
  }
  function Hm(e, t) {
    if (typeof e.autoHide == "function") {
      const n = e.autoHide(t);
      return (e.lastAutoHide = n), n;
    }
    return e.autoHide;
  }
  function zm() {
    for (let e = 0; e < Ye.length; e++) Ye[e].$_computePosition();
  }
  let Mt = 0,
    Ft = 0,
    to = 0,
    no = 0;
  typeof window < "u" &&
    window.addEventListener(
      "mousemove",
      (e) => {
        (Mt = to), (Ft = no), (to = e.clientX), (no = e.clientY);
      },
      eo ? { passive: !0 } : void 0,
    );
  function os(e, t, n, o, s, r, i, l) {
    const a =
        ((i - s) * (t - r) - (l - r) * (e - s)) /
        ((l - r) * (n - e) - (i - s) * (o - t)),
      u =
        ((n - e) * (t - r) - (o - t) * (e - s)) /
        ((l - r) * (n - e) - (i - s) * (o - t));
    return a >= 0 && a <= 1 && u >= 0 && u <= 1;
  }
  const jm = { extends: Zu() },
    Hr = (e, t) => {
      const n = e.__vccOpts || e;
      for (const [o, s] of t) n[o] = s;
      return n;
    };
  function Km(e, t, n, o, s, r) {
    return (
      ke(),
      At(
        "div",
        {
          ref: "reference",
          class: pt(["v-popper", { "v-popper--shown": e.slotData.isShown }]),
        },
        [Do(e.$slots, "default", Lc(il(e.slotData)))],
        2,
      )
    );
  }
  const Wm = Hr(jm, [["render", Km]]);
  function Gm() {
    var e = window.navigator.userAgent,
      t = e.indexOf("MSIE ");
    if (t > 0) return parseInt(e.substring(t + 5, e.indexOf(".", t)), 10);
    var n = e.indexOf("Trident/");
    if (n > 0) {
      var o = e.indexOf("rv:");
      return parseInt(e.substring(o + 3, e.indexOf(".", o)), 10);
    }
    var s = e.indexOf("Edge/");
    return s > 0 ? parseInt(e.substring(s + 5, e.indexOf(".", s)), 10) : -1;
  }
  let ss;
  function zr() {
    zr.init || ((zr.init = !0), (ss = Gm() !== -1));
  }
  var rs = {
    name: "ResizeObserver",
    props: {
      emitOnMount: { type: Boolean, default: !1 },
      ignoreWidth: { type: Boolean, default: !1 },
      ignoreHeight: { type: Boolean, default: !1 },
    },
    emits: ["notify"],
    mounted() {
      zr(),
        To(() => {
          (this._w = this.$el.offsetWidth),
            (this._h = this.$el.offsetHeight),
            this.emitOnMount && this.emitSize();
        });
      const e = document.createElement("object");
      (this._resizeObject = e),
        e.setAttribute("aria-hidden", "true"),
        e.setAttribute("tabindex", -1),
        (e.onload = this.addResizeHandlers),
        (e.type = "text/html"),
        ss && this.$el.appendChild(e),
        (e.data = "about:blank"),
        ss || this.$el.appendChild(e);
    },
    beforeUnmount() {
      this.removeResizeHandlers();
    },
    methods: {
      compareAndNotify() {
        ((!this.ignoreWidth && this._w !== this.$el.offsetWidth) ||
          (!this.ignoreHeight && this._h !== this.$el.offsetHeight)) &&
          ((this._w = this.$el.offsetWidth),
          (this._h = this.$el.offsetHeight),
          this.emitSize());
      },
      emitSize() {
        this.$emit("notify", { width: this._w, height: this._h });
      },
      addResizeHandlers() {
        this._resizeObject.contentDocument.defaultView.addEventListener(
          "resize",
          this.compareAndNotify,
        ),
          this.compareAndNotify();
      },
      removeResizeHandlers() {
        this._resizeObject &&
          this._resizeObject.onload &&
          (!ss &&
            this._resizeObject.contentDocument &&
            this._resizeObject.contentDocument.defaultView.removeEventListener(
              "resize",
              this.compareAndNotify,
            ),
          this.$el.removeChild(this._resizeObject),
          (this._resizeObject.onload = null),
          (this._resizeObject = null));
      },
    },
  };
  const qm = If();
  Df("data-v-b329ee4c");
  const Ym = { class: "resize-observer", tabindex: "-1" };
  Pf();
  const Xm = qm((e, t, n, o, s, r) => (ke(), cn("div", Ym)));
  (rs.render = Xm),
    (rs.__scopeId = "data-v-b329ee4c"),
    (rs.__file = "src/components/ResizeObserver.vue");
  const tc = (e = "theme") => ({
      computed: {
        themeClass() {
          return Fm(this[e]);
        },
      },
    }),
    Zm = ln({
      name: "VPopperContent",
      components: { ResizeObserver: rs },
      mixins: [tc()],
      props: {
        popperId: String,
        theme: String,
        shown: Boolean,
        mounted: Boolean,
        skipTransition: Boolean,
        autoHide: Boolean,
        handleResize: Boolean,
        classes: Object,
        result: Object,
      },
      emits: ["hide", "resize"],
      methods: {
        toPx(e) {
          return e != null && !isNaN(e) ? `${e}px` : null;
        },
      },
    }),
    Jm = ["id", "aria-hidden", "tabindex", "data-popper-placement"],
    Qm = { ref: "inner", class: "v-popper__inner" },
    eg = re("div", { class: "v-popper__arrow-outer" }, null, -1),
    tg = re("div", { class: "v-popper__arrow-inner" }, null, -1),
    ng = [eg, tg];
  function og(e, t, n, o, s, r) {
    const i = Bs("ResizeObserver");
    return (
      ke(),
      At(
        "div",
        {
          id: e.popperId,
          ref: "popover",
          class: pt([
            "v-popper__popper",
            [
              e.themeClass,
              e.classes.popperClass,
              {
                "v-popper__popper--shown": e.shown,
                "v-popper__popper--hidden": !e.shown,
                "v-popper__popper--show-from": e.classes.showFrom,
                "v-popper__popper--show-to": e.classes.showTo,
                "v-popper__popper--hide-from": e.classes.hideFrom,
                "v-popper__popper--hide-to": e.classes.hideTo,
                "v-popper__popper--skip-transition": e.skipTransition,
                "v-popper__popper--arrow-overflow":
                  e.result && e.result.arrow.overflow,
                "v-popper__popper--no-positioning": !e.result,
              },
            ],
          ]),
          style: Re(
            e.result
              ? {
                  position: e.result.strategy,
                  transform: `translate3d(${Math.round(e.result.x)}px,${Math.round(e.result.y)}px,0)`,
                }
              : void 0,
          ),
          "aria-hidden": e.shown ? "false" : "true",
          tabindex: e.autoHide ? 0 : void 0,
          "data-popper-placement": e.result ? e.result.placement : void 0,
          onKeyup:
            t[2] || (t[2] = ip((l) => e.autoHide && e.$emit("hide"), ["esc"])),
        },
        [
          re("div", {
            class: "v-popper__backdrop",
            onClick: t[0] || (t[0] = (l) => e.autoHide && e.$emit("hide")),
          }),
          re(
            "div",
            {
              class: "v-popper__wrapper",
              style: Re(
                e.result
                  ? { transformOrigin: e.result.transformOrigin }
                  : void 0,
              ),
            },
            [
              re(
                "div",
                Qm,
                [
                  e.mounted
                    ? (ke(),
                      At(
                        Ie,
                        { key: 0 },
                        [
                          re("div", null, [Do(e.$slots, "default")]),
                          e.handleResize
                            ? (ke(),
                              cn(i, {
                                key: 0,
                                onNotify:
                                  t[1] || (t[1] = (l) => e.$emit("resize", l)),
                              }))
                            : Vo("", !0),
                        ],
                        64,
                      ))
                    : Vo("", !0),
                ],
                512,
              ),
              re(
                "div",
                {
                  ref: "arrow",
                  class: "v-popper__arrow-container",
                  style: Re(
                    e.result
                      ? {
                          left: e.toPx(e.result.arrow.x),
                          top: e.toPx(e.result.arrow.y),
                        }
                      : void 0,
                  ),
                },
                ng,
                4,
              ),
            ],
            4,
          ),
        ],
        46,
        Jm,
      )
    );
  }
  const nc = Hr(Zm, [["render", og]]),
    oc = {
      methods: {
        show(...e) {
          return this.$refs.popper.show(...e);
        },
        hide(...e) {
          return this.$refs.popper.hide(...e);
        },
        dispose(...e) {
          return this.$refs.popper.dispose(...e);
        },
        onResize(...e) {
          return this.$refs.popper.onResize(...e);
        },
      },
    };
  let jr = function () {};
  typeof window < "u" && (jr = window.Element);
  const sg = ln({
    name: "VPopperWrapper",
    components: { Popper: Wm, PopperContent: nc },
    mixins: [oc, tc("finalTheme")],
    props: {
      theme: { type: String, default: null },
      referenceNode: { type: Function, default: null },
      shown: { type: Boolean, default: !1 },
      showGroup: { type: String, default: null },
      ariaId: { default: null },
      disabled: { type: Boolean, default: void 0 },
      positioningDisabled: { type: Boolean, default: void 0 },
      placement: { type: String, default: void 0 },
      delay: { type: [String, Number, Object], default: void 0 },
      distance: { type: [Number, String], default: void 0 },
      skidding: { type: [Number, String], default: void 0 },
      triggers: { type: Array, default: void 0 },
      showTriggers: { type: [Array, Function], default: void 0 },
      hideTriggers: { type: [Array, Function], default: void 0 },
      popperTriggers: { type: Array, default: void 0 },
      popperShowTriggers: { type: [Array, Function], default: void 0 },
      popperHideTriggers: { type: [Array, Function], default: void 0 },
      container: { type: [String, Object, jr, Boolean], default: void 0 },
      boundary: { type: [String, jr], default: void 0 },
      strategy: { type: String, default: void 0 },
      autoHide: { type: [Boolean, Function], default: void 0 },
      handleResize: { type: Boolean, default: void 0 },
      instantMove: { type: Boolean, default: void 0 },
      eagerMount: { type: Boolean, default: void 0 },
      popperClass: { type: [String, Array, Object], default: void 0 },
      computeTransformOrigin: { type: Boolean, default: void 0 },
      autoMinSize: { type: Boolean, default: void 0 },
      autoSize: { type: [Boolean, String], default: void 0 },
      autoMaxSize: { type: Boolean, default: void 0 },
      autoBoundaryMaxSize: { type: Boolean, default: void 0 },
      preventOverflow: { type: Boolean, default: void 0 },
      overflowPadding: { type: [Number, String], default: void 0 },
      arrowPadding: { type: [Number, String], default: void 0 },
      arrowOverflow: { type: Boolean, default: void 0 },
      flip: { type: Boolean, default: void 0 },
      shift: { type: Boolean, default: void 0 },
      shiftCrossAxis: { type: Boolean, default: void 0 },
      noAutoFocus: { type: Boolean, default: void 0 },
      disposeTimeout: { type: Number, default: void 0 },
    },
    emits: {
      show: () => !0,
      hide: () => !0,
      "update:shown": (e) => !0,
      "apply-show": () => !0,
      "apply-hide": () => !0,
      "close-group": () => !0,
      "close-directive": () => !0,
      "auto-hide": () => !0,
      resize: () => !0,
    },
    computed: {
      finalTheme() {
        return this.theme ?? this.$options.vPopperTheme;
      },
    },
    methods: {
      getTargetNodes() {
        return Array.from(this.$el.children).filter(
          (e) => e !== this.$refs.popperContent.$el,
        );
      },
    },
  });
  function rg(e, t, n, o, s, r) {
    const i = Bs("PopperContent"),
      l = Bs("Popper");
    return (
      ke(),
      cn(
        l,
        ll({ ref: "popper" }, e.$props, {
          theme: e.finalTheme,
          "target-nodes": e.getTargetNodes,
          "popper-node": () => e.$refs.popperContent.$el,
          class: [e.themeClass],
          onShow: t[0] || (t[0] = () => e.$emit("show")),
          onHide: t[1] || (t[1] = () => e.$emit("hide")),
          "onUpdate:shown": t[2] || (t[2] = (a) => e.$emit("update:shown", a)),
          onApplyShow: t[3] || (t[3] = () => e.$emit("apply-show")),
          onApplyHide: t[4] || (t[4] = () => e.$emit("apply-hide")),
          onCloseGroup: t[5] || (t[5] = () => e.$emit("close-group")),
          onCloseDirective: t[6] || (t[6] = () => e.$emit("close-directive")),
          onAutoHide: t[7] || (t[7] = () => e.$emit("auto-hide")),
          onResize: t[8] || (t[8] = () => e.$emit("resize")),
        }),
        {
          default: Ao(
            ({
              popperId: a,
              isShown: u,
              shouldMountContent: f,
              skipTransition: c,
              autoHide: h,
              show: d,
              hide: m,
              handleResize: v,
              onResize: y,
              classes: g,
              result: S,
            }) => [
              Do(e.$slots, "default", { shown: u, show: d, hide: m }),
              Te(
                i,
                {
                  ref: "popperContent",
                  "popper-id": a,
                  theme: e.finalTheme,
                  shown: u,
                  mounted: f,
                  "skip-transition": c,
                  "auto-hide": h,
                  "handle-resize": v,
                  classes: g,
                  result: S,
                  onHide: m,
                  onResize: y,
                },
                {
                  default: Ao(() => [
                    Do(e.$slots, "popper", { shown: u, hide: m }),
                  ]),
                  _: 2,
                },
                1032,
                [
                  "popper-id",
                  "theme",
                  "shown",
                  "mounted",
                  "skip-transition",
                  "auto-hide",
                  "handle-resize",
                  "classes",
                  "result",
                  "onHide",
                  "onResize",
                ],
              ),
            ],
          ),
          _: 3,
        },
        16,
        ["theme", "target-nodes", "popper-node", "class"],
      )
    );
  }
  const Kr = Hr(sg, [["render", rg]]);
  (({ ...Kr }), { ...Kr }), { ...Kr }, Zu();
  function Wr(e) {
    return ei() ? (Uc(e), !0) : !1;
  }
  function Xe(e) {
    return typeof e == "function" ? e() : X(e);
  }
  const sc = typeof window < "u" && typeof document < "u";
  typeof WorkerGlobalScope < "u" && globalThis instanceof WorkerGlobalScope;
  const ig = (e) => e != null,
    lg = Object.prototype.toString,
    ag = (e) => lg.call(e) === "[object Object]",
    is = () => {};
  function rc(e, t) {
    function n(...o) {
      return new Promise((s, r) => {
        Promise.resolve(
          e(() => t.apply(this, o), { fn: t, thisArg: this, args: o }),
        )
          .then(s)
          .catch(r);
      });
    }
    return n;
  }
  const ic = (e) => e();
  function ug(e, t = {}) {
    let n,
      o,
      s = is;
    const r = (l) => {
      clearTimeout(l), s(), (s = is);
    };
    return (l) => {
      const a = Xe(e),
        u = Xe(t.maxWait);
      return (
        n && r(n),
        a <= 0 || (u !== void 0 && u <= 0)
          ? (o && (r(o), (o = null)), Promise.resolve(l()))
          : new Promise((f, c) => {
              (s = t.rejectOnCancel ? c : f),
                u &&
                  !o &&
                  (o = setTimeout(() => {
                    n && r(n), (o = null), f(l());
                  }, u)),
                (n = setTimeout(() => {
                  o && r(o), (o = null), f(l());
                }, a));
            })
      );
    };
  }
  function cg(e = ic) {
    const t = fe(!0);
    function n() {
      t.value = !1;
    }
    function o() {
      t.value = !0;
    }
    const s = (...r) => {
      t.value && e(...r);
    };
    return { isActive: On(t), pause: n, resume: o, eventFilter: s };
  }
  function fg(e) {
    return al();
  }
  function dg(...e) {
    if (e.length !== 1) return _f(...e);
    const t = e[0];
    return typeof t == "function" ? On(df(() => ({ get: t, set: is }))) : fe(t);
  }
  function pg(e, t = 200, n = {}) {
    return rc(ug(t, n), e);
  }
  function hg(e, t, n = {}) {
    const { eventFilter: o = ic, ...s } = n;
    return nt(e, rc(o, t), s);
  }
  function _g(e, t, n = {}) {
    const { eventFilter: o, ...s } = n,
      { eventFilter: r, pause: i, resume: l, isActive: a } = cg(o);
    return {
      stop: hg(e, t, { ...s, eventFilter: r }),
      pause: i,
      resume: l,
      isActive: a,
    };
  }
  function Gr(e, t = !0, n) {
    fg() ? Dn(e, n) : t ? e() : To(e);
  }
  const bt = sc ? window : void 0;
  function ls(e) {
    var t;
    const n = Xe(e);
    return (t = n == null ? void 0 : n.$el) != null ? t : n;
  }
  function Le(...e) {
    let t, n, o, s;
    if (
      (typeof e[0] == "string" || Array.isArray(e[0])
        ? (([n, o, s] = e), (t = bt))
        : ([t, n, o, s] = e),
      !t)
    )
      return is;
    Array.isArray(n) || (n = [n]), Array.isArray(o) || (o = [o]);
    const r = [],
      i = () => {
        r.forEach((f) => f()), (r.length = 0);
      },
      l = (f, c, h, d) => (
        f.addEventListener(c, h, d), () => f.removeEventListener(c, h, d)
      ),
      a = nt(
        () => [ls(t), Xe(s)],
        ([f, c]) => {
          if ((i(), !f)) return;
          const h = ag(c) ? { ...c } : c;
          r.push(...n.flatMap((d) => o.map((m) => l(f, d, m, h))));
        },
        { immediate: !0, flush: "post" },
      ),
      u = () => {
        a(), i();
      };
    return Wr(u), u;
  }
  function mg() {
    const e = fe(!1),
      t = al();
    return (
      t &&
        Dn(() => {
          e.value = !0;
        }, t),
      e
    );
  }
  function lc(e) {
    const t = mg();
    return be(() => (t.value, !!e()));
  }
  function gg(e, t, n = {}) {
    const { window: o = bt, ...s } = n;
    let r;
    const i = lc(() => o && "MutationObserver" in o),
      l = () => {
        r && (r.disconnect(), (r = void 0));
      },
      a = be(() => {
        const h = Xe(e),
          d = (Array.isArray(h) ? h : [h]).map(ls).filter(ig);
        return new Set(d);
      }),
      u = nt(
        () => a.value,
        (h) => {
          l(),
            i.value &&
              h.size &&
              ((r = new MutationObserver(t)),
              h.forEach((d) => r.observe(d, s)));
        },
        { immediate: !0, flush: "post" },
      ),
      f = () => (r == null ? void 0 : r.takeRecords()),
      c = () => {
        u(), l();
      };
    return Wr(c), { isSupported: i, stop: c, takeRecords: f };
  }
  function ac(e, t = {}) {
    const { window: n = bt } = t,
      o = lc(() => n && "matchMedia" in n && typeof n.matchMedia == "function");
    let s;
    const r = fe(!1),
      i = (u) => {
        r.value = u.matches;
      },
      l = () => {
        s &&
          ("removeEventListener" in s
            ? s.removeEventListener("change", i)
            : s.removeListener(i));
      },
      a = Xs(() => {
        o.value &&
          (l(),
          (s = n.matchMedia(Xe(e))),
          "addEventListener" in s
            ? s.addEventListener("change", i)
            : s.addListener(i),
          (r.value = s.matches));
      });
    return (
      Wr(() => {
        a(), l(), (s = void 0);
      }),
      r
    );
  }
  const as =
      typeof globalThis < "u"
        ? globalThis
        : typeof window < "u"
          ? window
          : typeof global < "u"
            ? global
            : typeof self < "u"
              ? self
              : {},
    us = "__vueuse_ssr_handlers__",
    vg = yg();
  function yg() {
    return us in as || (as[us] = as[us] || {}), as[us];
  }
  function uc(e, t) {
    return vg[e] || t;
  }
  function Eg(e) {
    return ac("(prefers-color-scheme: dark)", e);
  }
  function bg(e) {
    return e == null
      ? "any"
      : e instanceof Set
        ? "set"
        : e instanceof Map
          ? "map"
          : e instanceof Date
            ? "date"
            : typeof e == "boolean"
              ? "boolean"
              : typeof e == "string"
                ? "string"
                : typeof e == "object"
                  ? "object"
                  : Number.isNaN(e)
                    ? "any"
                    : "number";
  }
  const wg = {
      boolean: { read: (e) => e === "true", write: (e) => String(e) },
      object: { read: (e) => JSON.parse(e), write: (e) => JSON.stringify(e) },
      number: { read: (e) => Number.parseFloat(e), write: (e) => String(e) },
      any: { read: (e) => e, write: (e) => String(e) },
      string: { read: (e) => e, write: (e) => String(e) },
      map: {
        read: (e) => new Map(JSON.parse(e)),
        write: (e) => JSON.stringify(Array.from(e.entries())),
      },
      set: {
        read: (e) => new Set(JSON.parse(e)),
        write: (e) => JSON.stringify(Array.from(e)),
      },
      date: { read: (e) => new Date(e), write: (e) => e.toISOString() },
    },
    cc = "vueuse-storage";
  function fc(e, t, n, o = {}) {
    var s;
    const {
        flush: r = "pre",
        deep: i = !0,
        listenToStorageChanges: l = !0,
        writeDefaults: a = !0,
        mergeDefaults: u = !1,
        shallow: f,
        window: c = bt,
        eventFilter: h,
        onError: d = (I) => {
          console.error(I);
        },
        initOnMounted: m,
      } = o,
      v = (f ? yi : fe)(typeof t == "function" ? t() : t);
    if (!n)
      try {
        n = uc("getDefaultStorage", () => {
          var I;
          return (I = bt) == null ? void 0 : I.localStorage;
        })();
      } catch (I) {
        d(I);
      }
    if (!n) return v;
    const y = Xe(t),
      g = bg(y),
      S = (s = o.serializer) != null ? s : wg[g],
      { pause: P, resume: b } = _g(v, () => L(v.value), {
        flush: r,
        deep: i,
        eventFilter: h,
      });
    c &&
      l &&
      Gr(() => {
        n instanceof Storage ? Le(c, "storage", j) : Le(c, cc, q), m && j();
      }),
      m || j();
    function D(I, N) {
      if (c) {
        const M = { key: e, oldValue: I, newValue: N, storageArea: n };
        c.dispatchEvent(
          n instanceof Storage
            ? new StorageEvent("storage", M)
            : new CustomEvent(cc, { detail: M }),
        );
      }
    }
    function L(I) {
      try {
        const N = n.getItem(e);
        if (I == null) D(N, null), n.removeItem(e);
        else {
          const M = S.write(I);
          N !== M && (n.setItem(e, M), D(N, M));
        }
      } catch (N) {
        d(N);
      }
    }
    function B(I) {
      const N = I ? I.newValue : n.getItem(e);
      if (N == null) return a && y != null && n.setItem(e, S.write(y)), y;
      if (!I && u) {
        const M = S.read(N);
        return typeof u == "function"
          ? u(M, y)
          : g === "object" && !Array.isArray(M)
            ? { ...y, ...M }
            : M;
      } else return typeof N != "string" ? N : S.read(N);
    }
    function j(I) {
      if (!(I && I.storageArea !== n)) {
        if (I && I.key == null) {
          v.value = y;
          return;
        }
        if (!(I && I.key !== e)) {
          P();
          try {
            (I == null ? void 0 : I.newValue) !== S.write(v.value) &&
              (v.value = B(I));
          } catch (N) {
            d(N);
          } finally {
            I ? To(b) : b();
          }
        }
      }
    }
    function q(I) {
      j(I.detail);
    }
    return v;
  }
  const Sg =
    "*,*::before,*::after{-webkit-transition:none!important;-moz-transition:none!important;-o-transition:none!important;-ms-transition:none!important;transition:none!important}";
  function Tg(e = {}) {
    const {
        selector: t = "html",
        attribute: n = "class",
        initialValue: o = "auto",
        window: s = bt,
        storage: r,
        storageKey: i = "vueuse-color-scheme",
        listenToStorageChanges: l = !0,
        storageRef: a,
        emitAuto: u,
        disableTransition: f = !0,
      } = e,
      c = { auto: "", light: "light", dark: "dark", ...(e.modes || {}) },
      h = Eg({ window: s }),
      d = be(() => (h.value ? "dark" : "light")),
      m =
        a ||
        (i == null
          ? dg(o)
          : fc(i, o, r, { window: s, listenToStorageChanges: l })),
      v = be(() => (m.value === "auto" ? d.value : m.value)),
      y = uc("updateHTMLAttrs", (b, D, L) => {
        const B =
          typeof b == "string"
            ? s == null
              ? void 0
              : s.document.querySelector(b)
            : ls(b);
        if (!B) return;
        const j = new Set(),
          q = new Set();
        let I = null;
        if (D === "class") {
          const M = L.split(/\s/g);
          Object.values(c)
            .flatMap((H) => (H || "").split(/\s/g))
            .filter(Boolean)
            .forEach((H) => {
              M.includes(H) ? j.add(H) : q.add(H);
            });
        } else I = { key: D, value: L };
        if (j.size === 0 && q.size === 0 && I === null) return;
        let N;
        f &&
          ((N = s.document.createElement("style")),
          N.appendChild(document.createTextNode(Sg)),
          s.document.head.appendChild(N));
        for (const M of j) B.classList.add(M);
        for (const M of q) B.classList.remove(M);
        I && B.setAttribute(I.key, I.value),
          f && (s.getComputedStyle(N).opacity, document.head.removeChild(N));
      });
    function g(b) {
      var D;
      y(t, n, (D = c[b]) != null ? D : b);
    }
    function S(b) {
      e.onChanged ? e.onChanged(b, g) : g(b);
    }
    nt(v, S, { flush: "post", immediate: !0 }), Gr(() => S(v.value));
    const P = be({
      get() {
        return u ? m.value : v.value;
      },
      set(b) {
        m.value = b;
      },
    });
    try {
      return Object.assign(P, { store: m, system: d, state: v });
    } catch {
      return P;
    }
  }
  function cs(e, t, n = {}) {
    const { window: o = bt, initialValue: s, observe: r = !1 } = n,
      i = fe(s),
      l = be(() => {
        var u;
        return (
          ls(t) ||
          ((u = o == null ? void 0 : o.document) == null
            ? void 0
            : u.documentElement)
        );
      });
    function a() {
      var u;
      const f = Xe(e),
        c = Xe(l);
      if (c && o && f) {
        const h =
          (u = o.getComputedStyle(c).getPropertyValue(f)) == null
            ? void 0
            : u.trim();
        i.value = h || s;
      }
    }
    return (
      r && gg(l, a, { attributeFilter: ["style", "class"], window: o }),
      nt(
        [l, () => Xe(e)],
        (u, f) => {
          f[0] && f[1] && f[0].style.removeProperty(f[1]), a();
        },
        { immediate: !0 },
      ),
      nt(i, (u) => {
        var f;
        const c = Xe(e);
        (f = l.value) != null &&
          f.style &&
          c &&
          (u == null
            ? l.value.style.removeProperty(c)
            : l.value.style.setProperty(c, u));
      }),
      i
    );
  }
  function Og(e, t, n = {}) {
    const { window: o = bt } = n;
    return fc(e, t, o == null ? void 0 : o.localStorage, n);
  }
  const dc = "--vueuse-safe-area-top",
    pc = "--vueuse-safe-area-right",
    hc = "--vueuse-safe-area-bottom",
    _c = "--vueuse-safe-area-left";
  function xg() {
    const e = fe(""),
      t = fe(""),
      n = fe(""),
      o = fe("");
    if (sc) {
      const r = cs(dc),
        i = cs(pc),
        l = cs(hc),
        a = cs(_c);
      (r.value = "env(safe-area-inset-top, 0px)"),
        (i.value = "env(safe-area-inset-right, 0px)"),
        (l.value = "env(safe-area-inset-bottom, 0px)"),
        (a.value = "env(safe-area-inset-left, 0px)"),
        s(),
        Le("resize", pg(s));
    }
    function s() {
      (e.value = fs(dc)),
        (t.value = fs(pc)),
        (n.value = fs(hc)),
        (o.value = fs(_c));
    }
    return { top: e, right: t, bottom: n, left: o, update: s };
  }
  function fs(e) {
    return getComputedStyle(document.documentElement).getPropertyValue(e);
  }
  function Ag(e = {}) {
    const {
        window: t = bt,
        initialWidth: n = Number.POSITIVE_INFINITY,
        initialHeight: o = Number.POSITIVE_INFINITY,
        listenOrientation: s = !0,
        includeScrollbar: r = !0,
        type: i = "inner",
      } = e,
      l = fe(n),
      a = fe(o),
      u = () => {
        t &&
          (i === "outer"
            ? ((l.value = t.outerWidth), (a.value = t.outerHeight))
            : r
              ? ((l.value = t.innerWidth), (a.value = t.innerHeight))
              : ((l.value = t.document.documentElement.clientWidth),
                (a.value = t.document.documentElement.clientHeight)));
      };
    if ((u(), Gr(u), Le("resize", u, { passive: !0 }), s)) {
      const f = ac("(orientation: portrait)");
      nt(f, () => u());
    }
    return { width: l, height: a };
  }
  yi();
  const Cg = "__vue-devtools-theme__";
  function Dg(e = {}) {
    const t = Tg({ ...e, storageKey: Cg });
    return { colorMode: t, isDark: be(() => t.value === "dark") };
  }
  function Pg(e, t) {
    const n = fe();
    function o() {
      return (
        n.value ||
          ((n.value = document.createElement("iframe")),
          (n.value.id = "vue-devtools-iframe"),
          (n.value.src = e),
          n.value.setAttribute("data-v-inspector-ignore", "true"),
          (n.value.onload = t)),
        n.value
      );
    }
    return { getIframe: o, iframe: n };
  }
  const qr = Og("__vue-devtools-frame-state__", {
    width: 80,
    height: 60,
    top: 0,
    left: 50,
    open: !1,
    route: "/",
    position: "bottom",
    isFirstVisit: !0,
    closeOnOutsideClick: !1,
    minimizePanelInactive: 5e3,
    preferShowFloatingPanel: !0,
  });
  function ds() {
    function e(t) {
      qr.value = { ...qr.value, ...t };
    }
    return { state: On(qr), updateState: e };
  }
  function Ig() {
    const { state: e, updateState: t } = ds(),
      n = be({
        get() {
          return e.value.open;
        },
        set(r) {
          t({ open: r });
        },
      }),
      o = (r, i) => {
        n.value = i ?? !n.value;
      },
      s = () => {
        n.value && (n.value = !1);
      };
    return (
      Dn(() => {
        Le(window, "keydown", (r) => {
          r.code === "KeyD" && r.altKey && r.shiftKey && o();
        });
      }),
      { panelVisible: n, togglePanelVisible: o, closePanel: s }
    );
  }
  function ps(e, t, n) {
    return Math.min(Math.max(e, t), n);
  }
  const kg = () =>
    navigator.userAgent.includes("Safari") &&
    !navigator.userAgent.includes("Chrome");
  function hs(e) {
    return typeof e == "string" ? (e.endsWith("px") ? +e.slice(0, -2) : +e) : e;
  }
  function mc(e) {
    return e < 5 ? 0 : e > 95 ? 100 : Math.abs(e - 50) < 2 ? 50 : e;
  }
  function Rg(e) {
    const { width: t, height: n } = Ag(),
      { state: o, updateState: s } = ds(),
      r = fe(!1),
      i = fe(!1),
      l = nn({ x: 0, y: 0 }),
      a = nn({ x: 0, y: 0 }),
      u = nn({ left: 10, top: 10, right: 10, bottom: 10 });
    let f = null;
    const c = xg();
    Xs(() => {
      (u.left = hs(c.left.value) + 10),
        (u.top = hs(c.top.value) + 10),
        (u.right = hs(c.right.value) + 10),
        (u.bottom = hs(c.bottom.value) + 10);
    });
    const h = (b) => {
        i.value = !0;
        const {
          left: D,
          top: L,
          width: B,
          height: j,
        } = e.value.getBoundingClientRect();
        (l.x = b.clientX - D - B / 2), (l.y = b.clientY - L - j / 2);
      },
      d = () => {
        (r.value = !0),
          !(o.value.minimizePanelInactive < 0) &&
            (f && clearTimeout(f),
            (f = setTimeout(() => {
              r.value = !1;
            }, +o.value.minimizePanelInactive || 0)));
      };
    Dn(() => {
      d();
    }),
      Le("pointerup", () => {
        i.value = !1;
      }),
      Le("pointerleave", () => {
        i.value = !1;
      }),
      Le("pointermove", (b) => {
        if (!i.value) return;
        const D = t.value / 2,
          L = n.value / 2,
          B = b.clientX - l.x,
          j = b.clientY - l.y;
        (a.x = B), (a.y = j);
        const q = Math.atan2(j - L, B - D),
          I = 70,
          N = Math.atan2(0 - L + I, 0 - D),
          M = Math.atan2(0 - L + I, t.value - D),
          H = Math.atan2(n.value - I - L, 0 - D),
          Q = Math.atan2(n.value - I - L, t.value - D);
        s({
          position:
            q >= N && q <= M
              ? "top"
              : q >= M && q <= Q
                ? "right"
                : q >= Q && q <= H
                  ? "bottom"
                  : "left",
          left: mc((B / t.value) * 100),
          top: mc((j / n.value) * 100),
        });
      });
    const m = be(
        () => o.value.position === "left" || o.value.position === "right",
      ),
      v = be(() => {
        if (o.value.minimizePanelInactive < 0) return !1;
        if (o.value.minimizePanelInactive === 0) return !0;
        const b =
          "ontouchstart" in window ||
          navigator.maxTouchPoints > 0 ||
          navigator.msMaxTouchPoints > 0;
        return (
          !i.value &&
          !o.value.open &&
          !r.value &&
          !b &&
          o.value.minimizePanelInactive
        );
      }),
      y = be(() => {
        var j, q;
        const b = (((j = e.value) == null ? void 0 : j.clientWidth) || 0) / 2,
          D = (((q = e.value) == null ? void 0 : q.clientHeight) || 0) / 2,
          L = (o.value.left * t.value) / 100,
          B = (o.value.top * n.value) / 100;
        switch (o.value.position) {
          case "top":
            return {
              left: ps(L, b + u.left, t.value - b - u.right),
              top: u.top + D,
            };
          case "right":
            return {
              left: t.value - u.right - D,
              top: ps(B, b + u.top, n.value - b - u.bottom),
            };
          case "left":
            return {
              left: u.left + D,
              top: ps(B, b + u.top, n.value - b - u.bottom),
            };
          case "bottom":
          default:
            return {
              left: ps(L, b + u.left, t.value - b - u.right),
              top: n.value - u.bottom - D,
            };
        }
      }),
      g = be(() => ({ left: `${y.value.left}px`, top: `${y.value.top}px` })),
      S = be(() => {
        var Y;
        a.x, a.y;
        const b = (((Y = e.value) == null ? void 0 : Y.clientHeight) || 0) / 2,
          D = {
            left: u.left + b,
            top: u.top + b,
            right: u.right + b,
            bottom: u.bottom + b,
          },
          L = D.left + D.right,
          B = D.top + D.bottom,
          j = t.value - L,
          q = n.value - B,
          I = {
            zIndex: -1,
            pointerEvents: i.value ? "none" : "auto",
            width: `min(${o.value.width}vw, calc(100vw - ${L}px))`,
            height: `min(${o.value.height}vh, calc(100vh - ${B}px))`,
          },
          N = y.value,
          M = Math.min(j, (o.value.width * t.value) / 100),
          H = Math.min(q, (o.value.height * n.value) / 100),
          Q = (N == null ? void 0 : N.left) || 0,
          _e = (N == null ? void 0 : N.top) || 0;
        switch (o.value.position) {
          case "top":
          case "bottom":
            (I.left = 0),
              (I.transform = "translate(-50%, 0)"),
              Q - D.left < M / 2
                ? (I.left = `${M / 2 - Q + D.left}px`)
                : t.value - Q - D.right < M / 2 &&
                  (I.left = `${t.value - Q - M / 2 - D.right}px`);
            break;
          case "right":
          case "left":
            (I.top = 0),
              (I.transform = "translate(0, -50%)"),
              _e - D.top < H / 2
                ? (I.top = `${H / 2 - _e + D.top}px`)
                : n.value - _e - D.bottom < H / 2 &&
                  (I.top = `${n.value - _e - H / 2 - D.bottom}px`);
            break;
        }
        switch (o.value.position) {
          case "top":
            I.top = 0;
            break;
          case "right":
            I.right = 0;
            break;
          case "left":
            I.left = 0;
            break;
          case "bottom":
          default:
            I.bottom = 0;
            break;
        }
        return I;
      }),
      P = be(() => {
        const b = {
          transform: m.value
            ? `translate(${v.value ? `calc(-50% ${o.value.position === "right" ? "+" : "-"} 15px)` : "-50%"}, -50%) rotate(90deg)`
            : `translate(-50%, ${v.value ? `calc(-50% ${o.value.position === "top" ? "-" : "+"} 15px)` : "-50%"})`,
        };
        if (v.value)
          switch (o.value.position) {
            case "top":
            case "right":
              (b.borderTopLeftRadius = "0"), (b.borderTopRightRadius = "0");
              break;
            case "bottom":
            case "left":
              (b.borderBottomLeftRadius = "0"),
                (b.borderBottomRightRadius = "0");
              break;
          }
        return i.value && (b.transition = "none !important"), b;
      });
    return {
      isHidden: v,
      isDragging: i,
      isVertical: m,
      anchorStyle: g,
      iframeStyle: S,
      panelStyle: P,
      onPointerDown: h,
      bringUp: d,
    };
  }
  const _s = 20,
    ms = 100,
    Ng = ln({
      __name: "FrameBox",
      props: { isDragging: { type: Boolean }, client: {}, viewMode: {} },
      setup(e) {
        const t = e,
          { state: n, updateState: o } = ds(),
          s = fe(),
          r = fe(!1);
        vm(() => {
          Tu.functions.on("update-client-state", (l) => {
            l &&
              o({
                minimizePanelInactive: l.minimizePanelInteractive,
                closeOnOutsideClick: l.closeOnOutsideClick,
                preferShowFloatingPanel: l.showFloatingPanel,
              });
          });
        }),
          Xs(() => {
            if (s.value && n.value.open) {
              const l = t.client.getIFrame();
              (l.style.pointerEvents =
                r.value || t.isDragging ? "none" : "auto"),
                Array.from(s.value.children).every((a) => a !== l) &&
                  s.value.appendChild(l);
            }
          }),
          Le(window, "keydown", (l) => {}),
          Le(window, "mousedown", (l) => {
            if (!n.value.closeOnOutsideClick || !n.value.open || r.value)
              return;
            l.composedPath().find((u) => {
              var c;
              const f = u;
              return (
                Array.from(f.classList || []).some((h) =>
                  h.startsWith("vue-devtools"),
                ) ||
                ((c = f.tagName) == null ? void 0 : c.toLowerCase()) ===
                  "iframe"
              );
            }) || o({ open: !1 });
          }),
          Le(window, "mousemove", (l) => {
            if (!r.value || !n.value.open) return;
            const u = t.client.getIFrame().getBoundingClientRect();
            if (r.value.right) {
              const c =
                (Math.abs(l.clientX - ((u == null ? void 0 : u.left) || 0)) /
                  window.innerWidth) *
                100;
              o({ width: Math.min(ms, Math.max(_s, c)) });
            } else if (r.value.left) {
              const c =
                (Math.abs(((u == null ? void 0 : u.right) || 0) - l.clientX) /
                  window.innerWidth) *
                100;
              o({ width: Math.min(ms, Math.max(_s, c)) });
            }
            if (r.value.top) {
              const c =
                (Math.abs(((u == null ? void 0 : u.bottom) || 0) - l.clientY) /
                  window.innerHeight) *
                100;
              o({ height: Math.min(ms, Math.max(_s, c)) });
            } else if (r.value.bottom) {
              const c =
                (Math.abs(l.clientY - ((u == null ? void 0 : u.top) || 0)) /
                  window.innerHeight) *
                100;
              o({ height: Math.min(ms, Math.max(_s, c)) });
            }
          }),
          Le(window, "mouseup", () => {
            r.value = !1;
          }),
          Le(window, "mouseleave", () => {
            r.value = !1;
          });
        const i = be(() =>
          t.viewMode === "xs"
            ? "view-mode-xs"
            : t.viewMode === "fullscreen"
              ? "view-mode-fullscreen"
              : "",
        );
        return (l, a) =>
          tt(
            (ke(),
            At(
              "div",
              {
                ref_key: "container",
                ref: s,
                class: pt(["vue-devtools-frame", i.value]),
              },
              [
                tt(
                  re(
                    "div",
                    {
                      class:
                        "vue-devtools-resize vue-devtools-resize--horizontal",
                      style: { top: 0 },
                      onMousedown:
                        a[0] ||
                        (a[0] = Dt(() => (r.value = { top: !0 }), ["prevent"])),
                    },
                    null,
                    544,
                  ),
                  [[rt, X(n).position !== "top"]],
                ),
                tt(
                  re(
                    "div",
                    {
                      class:
                        "vue-devtools-resize vue-devtools-resize--horizontal",
                      style: { bottom: 0 },
                      onMousedown:
                        a[1] ||
                        (a[1] = Dt(
                          () => (r.value = { bottom: !0 }),
                          ["prevent"],
                        )),
                    },
                    null,
                    544,
                  ),
                  [[rt, X(n).position !== "bottom"]],
                ),
                tt(
                  re(
                    "div",
                    {
                      class:
                        "vue-devtools-resize vue-devtools-resize--vertical",
                      style: { left: 0 },
                      onMousedown:
                        a[2] ||
                        (a[2] = Dt(
                          () => (r.value = { left: !0 }),
                          ["prevent"],
                        )),
                    },
                    null,
                    544,
                  ),
                  [[rt, X(n).position !== "left"]],
                ),
                tt(
                  re(
                    "div",
                    {
                      class:
                        "vue-devtools-resize vue-devtools-resize--vertical",
                      style: { right: 0 },
                      onMousedown:
                        a[3] ||
                        (a[3] = Dt(
                          () => (r.value = { right: !0 }),
                          ["prevent"],
                        )),
                    },
                    null,
                    544,
                  ),
                  [[rt, X(n).position !== "right"]],
                ),
                tt(
                  re(
                    "div",
                    {
                      class: "vue-devtools-resize vue-devtools-resize-corner",
                      style: { top: 0, left: 0, cursor: "nwse-resize" },
                      onMousedown:
                        a[4] ||
                        (a[4] = Dt(
                          () => (r.value = { top: !0, left: !0 }),
                          ["prevent"],
                        )),
                    },
                    null,
                    544,
                  ),
                  [[rt, X(n).position !== "top" && X(n).position !== "left"]],
                ),
                tt(
                  re(
                    "div",
                    {
                      class: "vue-devtools-resize vue-devtools-resize-corner",
                      style: { top: 0, right: 0, cursor: "nesw-resize" },
                      onMousedown:
                        a[5] ||
                        (a[5] = Dt(
                          () => (r.value = { top: !0, right: !0 }),
                          ["prevent"],
                        )),
                    },
                    null,
                    544,
                  ),
                  [[rt, X(n).position !== "top" && X(n).position !== "right"]],
                ),
                tt(
                  re(
                    "div",
                    {
                      class: "vue-devtools-resize vue-devtools-resize-corner",
                      style: { bottom: 0, left: 0, cursor: "nesw-resize" },
                      onMousedown:
                        a[6] ||
                        (a[6] = Dt(
                          () => (r.value = { bottom: !0, left: !0 }),
                          ["prevent"],
                        )),
                    },
                    null,
                    544,
                  ),
                  [
                    [
                      rt,
                      X(n).position !== "bottom" && X(n).position !== "left",
                    ],
                  ],
                ),
                tt(
                  re(
                    "div",
                    {
                      class: "vue-devtools-resize vue-devtools-resize-corner",
                      style: { bottom: 0, right: 0, cursor: "nwse-resize" },
                      onMousedown:
                        a[7] ||
                        (a[7] = Dt(
                          () => (r.value = { bottom: !0, right: !0 }),
                          ["prevent"],
                        )),
                    },
                    null,
                    544,
                  ),
                  [
                    [
                      rt,
                      X(n).position !== "bottom" && X(n).position !== "right",
                    ],
                  ],
                ),
              ],
              2,
            )),
            [[rt, X(n).open]],
          );
      },
    }),
    gc = (e, t) => {
      const n = e.__vccOpts || e;
      for (const [o, s] of t) n[o] = s;
      return n;
    },
    Vg = gc(Ng, [["__scopeId", "data-v-57103419"]]),
    Lg = gc(
      ln({
        __name: "App",
        setup(e) {
          const t = fe(),
            n = fe(),
            { colorMode: o } = Dg({ selector: t }),
            s = fe({ viewMode: "default" }),
            r = be(() => {
              const N = o.value === "dark";
              return {
                "--vue-devtools-widget-bg": N ? "#111" : "#ffffff",
                "--vue-devtools-widget-fg": N ? "#F5F5F5" : "#111",
                "--vue-devtools-widget-border": N ? "#3336" : "#efefef",
                "--vue-devtools-widget-shadow": N
                  ? "rgba(0,0,0,0.3)"
                  : "rgba(128,128,128,0.1)",
              };
            }),
            {
              onPointerDown: i,
              bringUp: l,
              anchorStyle: a,
              iframeStyle: u,
              isDragging: f,
              isVertical: c,
              isHidden: h,
              panelStyle: d,
            } = Rg(n),
            { togglePanelVisible: m, closePanel: v, panelVisible: y } = Ig(),
            g = dm(),
            S = fe(!0);
          x.__VUE_DEVTOOLS_TOGGLE_OVERLAY__ = (N) => {
            S.value = N;
          };
          const { updateState: P, state: b } = ds();
          function D(N, M = 50, H = 200) {
            return new Promise((Q) => {
              var _e;
              (_e = N == null ? void 0 : N.contentWindow) == null ||
                _e.postMessage("__VUE_DEVTOOLS_CREATE_CLIENT__", "*"),
                window.addEventListener("message", (Y) => {
                  Y.data === "__VUE_DEVTOOLS_CLIENT_READY__" && Q();
                });
            });
          }
          const L = fe();
          Dh(() => {
            Eu().functions.on("toggle-panel", (M = !y) => {
              m(void 0, M);
            }),
              bu.ctx.api.getVueInspector().then((M) => {
                L.value = M;
                let H = y.value;
                (L.value.onEnabled = () => {
                  (H = y.value), m(void 0, !1);
                }),
                  (L.value.onDisabled = () => {
                    m(void 0, H);
                  });
              });
          }),
            addEventListener("keyup", (N) => {
              var M, H, Q;
              ((M = N.key) == null ? void 0 : M.toLowerCase()) === "escape" &&
                (H = L.value) != null &&
                H.enabled &&
                ((Q = L.value) == null || Q.disable());
            });
          const B = be(() => !!L.value);
          function j() {
            L.value.enable();
          }
          const { iframe: q, getIframe: I } = Pg(g, async () => {
            const N = I();
            um(N), await D(N);
          });
          return (N, M) =>
            tt(
              (ke(),
              At(
                "div",
                {
                  ref_key: "anchorEle",
                  ref: t,
                  class: pt([
                    "vue-devtools__anchor",
                    {
                      "vue-devtools__anchor--vertical": X(c),
                      "vue-devtools__anchor--hide": X(h),
                      fullscreen: s.value.viewMode === "fullscreen",
                    },
                  ]),
                  style: Re([X(a), r.value]),
                  onMousemove: M[2] || (M[2] = (...H) => X(l) && X(l)(...H)),
                },
                [
                  X(kg)()
                    ? Vo("", !0)
                    : (ke(),
                      At(
                        "div",
                        {
                          key: 0,
                          class: "vue-devtools__anchor--glowing",
                          style: Re(X(f) ? "opacity: 0.6 !important" : ""),
                        },
                        null,
                        4,
                      )),
                  re(
                    "div",
                    {
                      ref_key: "panelEle",
                      ref: n,
                      class: "vue-devtools__panel",
                      style: Re(X(d)),
                      onPointerdown:
                        M[1] || (M[1] = (...H) => X(i) && X(i)(...H)),
                    },
                    [
                      re(
                        "div",
                        {
                          class: "vue-devtools__anchor-btn panel-entry-btn",
                          title: "Toggle Vue DevTools",
                          "aria-label": "Toggle devtools panel",
                          style: Re(X(y) ? "" : "filter:saturate(0)"),
                          onClick:
                            M[0] || (M[0] = (...H) => X(m) && X(m)(...H)),
                        },
                        M[3] ||
                          (M[3] = [
                            re(
                              "svg",
                              {
                                viewBox: "0 0 256 198",
                                fill: "none",
                                xmlns: "http://www.w3.org/2000/svg",
                              },
                              [
                                re("path", {
                                  fill: "#41B883",
                                  d: "M204.8 0H256L128 220.8L0 0h97.92L128 51.2L157.44 0h47.36Z",
                                }),
                                re("path", {
                                  fill: "#41B883",
                                  d: "m0 0l128 220.8L256 0h-51.2L128 132.48L50.56 0H0Z",
                                }),
                                re("path", {
                                  fill: "#35495E",
                                  d: "M50.56 0L128 133.12L204.8 0h-47.36L128 51.2L97.92 0H50.56Z",
                                }),
                              ],
                              -1,
                            ),
                          ]),
                        4,
                      ),
                      X(bu).ctx.state.vitePluginDetected && B.value
                        ? (ke(),
                          At(
                            Ie,
                            { key: 0 },
                            [
                              M[5] ||
                                (M[5] = re(
                                  "div",
                                  {
                                    class:
                                      "vue-devtools__panel-content vue-devtools__panel-divider",
                                  },
                                  null,
                                  -1,
                                )),
                              re(
                                "div",
                                {
                                  class: pt([
                                    "vue-devtools__anchor-btn vue-devtools__panel-content vue-devtools__inspector-button",
                                    { active: B.value },
                                  ]),
                                  title: "Toggle Component Inspector",
                                  onClick: j,
                                },
                                [
                                  (ke(),
                                  At(
                                    "svg",
                                    {
                                      xmlns: "http://www.w3.org/2000/svg",
                                      style: Re([
                                        {
                                          height: "1.1em",
                                          width: "1.1em",
                                          opacity: "0.5",
                                        },
                                        B.value
                                          ? "opacity:1;color:#00dc82;"
                                          : "",
                                      ]),
                                      viewBox: "0 0 24 24",
                                    },
                                    M[4] ||
                                      (M[4] = [
                                        re(
                                          "g",
                                          {
                                            fill: "none",
                                            stroke: "currentColor",
                                            "stroke-linecap": "round",
                                            "stroke-linejoin": "round",
                                            "stroke-width": "2",
                                          },
                                          [
                                            re("circle", {
                                              cx: "12",
                                              cy: "12",
                                              r: ".5",
                                              fill: "currentColor",
                                            }),
                                            re("path", {
                                              d: "M5 12a7 7 0 1 0 14 0a7 7 0 1 0-14 0m7-9v2m-9 7h2m7 7v2m7-9h2",
                                            }),
                                          ],
                                          -1,
                                        ),
                                      ]),
                                    4,
                                  )),
                                ],
                                2,
                              ),
                            ],
                            64,
                          ))
                        : Vo("", !0),
                    ],
                    36,
                  ),
                  Te(
                    Vg,
                    {
                      style: Re(X(u)),
                      "is-dragging": X(f),
                      client: { close: X(v), getIFrame: X(I) },
                      "view-mode": s.value.viewMode,
                    },
                    null,
                    8,
                    ["style", "is-dragging", "client", "view-mode"],
                  ),
                ],
                38,
              )),
              [[rt, X(b).preferShowFloatingPanel ? S.value : X(y)]],
            );
        },
      }),
      [["__scopeId", "data-v-f11919b5"]],
    );
  function $g(e) {
    const t = "__vue-devtools-container__",
      n = document.createElement("div");
    n.setAttribute("id", t),
      n.setAttribute("data-v-inspector-ignore", "true"),
      document.getElementsByTagName("body")[0].appendChild(n),
      up({ render: () => Ld(e), devtools: { hide: !0 } }).mount(n);
  }
  $g(Lg);
})();

//# sourceMappingURL=data:application/json;base64,
